"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/xmlbuilder";
exports.ids = ["vendor-chunks/xmlbuilder"];
exports.modules = {

/***/ "(ssr)/./node_modules/xmlbuilder/lib/Utility.js":
/*!************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/Utility.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject, slice = [].slice, hasProp = {}.hasOwnProperty;\n    assign = function() {\n        var i, key, len, source, sources, target;\n        target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n        if (isFunction(Object.assign)) {\n            Object.assign.apply(null, arguments);\n        } else {\n            for(i = 0, len = sources.length; i < len; i++){\n                source = sources[i];\n                if (source != null) {\n                    for(key in source){\n                        if (!hasProp.call(source, key)) continue;\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n    isFunction = function(val) {\n        return !!val && Object.prototype.toString.call(val) === \"[object Function]\";\n    };\n    isObject = function(val) {\n        var ref;\n        return !!val && ((ref = typeof val) === \"function\" || ref === \"object\");\n    };\n    isArray = function(val) {\n        if (isFunction(Array.isArray)) {\n            return Array.isArray(val);\n        } else {\n            return Object.prototype.toString.call(val) === \"[object Array]\";\n        }\n    };\n    isEmpty = function(val) {\n        var key;\n        if (isArray(val)) {\n            return !val.length;\n        } else {\n            for(key in val){\n                if (!hasProp.call(val, key)) continue;\n                return false;\n            }\n            return true;\n        }\n    };\n    isPlainObject = function(val) {\n        var ctor, proto;\n        return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && typeof ctor === \"function\" && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);\n    };\n    getValue = function(obj) {\n        if (isFunction(obj.valueOf)) {\n            return obj.valueOf();\n        } else {\n            return obj;\n        }\n    };\n    module.exports.assign = assign;\n    module.exports.isFunction = isFunction;\n    module.exports.isObject = isObject;\n    module.exports.isArray = isArray;\n    module.exports.isEmpty = isEmpty;\n    module.exports.isPlainObject = isPlainObject;\n    module.exports.getValue = getValue;\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvVXRpbGl0eS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsUUFBUUMsVUFBVUMsU0FBU0MsU0FBU0MsWUFBWUMsVUFBVUMsZUFDNURDLFFBQVEsRUFBRSxDQUFDQSxLQUFLLEVBQ2hCQyxVQUFVLENBQUMsRUFBRUMsY0FBYztJQUU3QlQsU0FBUztRQUNQLElBQUlVLEdBQUdDLEtBQUtDLEtBQUtDLFFBQVFDLFNBQVNDO1FBQ2xDQSxTQUFTQyxTQUFTLENBQUMsRUFBRSxFQUFFRixVQUFVLEtBQUtFLFVBQVVDLE1BQU0sR0FBR1YsTUFBTVcsSUFBSSxDQUFDRixXQUFXLEtBQUssRUFBRTtRQUN0RixJQUFJWixXQUFXZSxPQUFPbkIsTUFBTSxHQUFHO1lBQzdCbUIsT0FBT25CLE1BQU0sQ0FBQ29CLEtBQUssQ0FBQyxNQUFNSjtRQUM1QixPQUFPO1lBQ0wsSUFBS04sSUFBSSxHQUFHRSxNQUFNRSxRQUFRRyxNQUFNLEVBQUVQLElBQUlFLEtBQUtGLElBQUs7Z0JBQzlDRyxTQUFTQyxPQUFPLENBQUNKLEVBQUU7Z0JBQ25CLElBQUlHLFVBQVUsTUFBTTtvQkFDbEIsSUFBS0YsT0FBT0UsT0FBUTt3QkFDbEIsSUFBSSxDQUFDTCxRQUFRVSxJQUFJLENBQUNMLFFBQVFGLE1BQU07d0JBQ2hDSSxNQUFNLENBQUNKLElBQUksR0FBR0UsTUFBTSxDQUFDRixJQUFJO29CQUMzQjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQSxPQUFPSTtJQUNUO0lBRUFYLGFBQWEsU0FBU2lCLEdBQUc7UUFDdkIsT0FBTyxDQUFDLENBQUNBLE9BQU9GLE9BQU9HLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDTCxJQUFJLENBQUNHLFNBQVM7SUFDMUQ7SUFFQWhCLFdBQVcsU0FBU2dCLEdBQUc7UUFDckIsSUFBSUc7UUFDSixPQUFPLENBQUMsQ0FBQ0gsT0FBUSxFQUFDRyxNQUFNLE9BQU9ILEdBQUUsTUFBTyxjQUFjRyxRQUFRLFFBQU87SUFDdkU7SUFFQXRCLFVBQVUsU0FBU21CLEdBQUc7UUFDcEIsSUFBSWpCLFdBQVdxQixNQUFNdkIsT0FBTyxHQUFHO1lBQzdCLE9BQU91QixNQUFNdkIsT0FBTyxDQUFDbUI7UUFDdkIsT0FBTztZQUNMLE9BQU9GLE9BQU9HLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDTCxJQUFJLENBQUNHLFNBQVM7UUFDakQ7SUFDRjtJQUVBbEIsVUFBVSxTQUFTa0IsR0FBRztRQUNwQixJQUFJVjtRQUNKLElBQUlULFFBQVFtQixNQUFNO1lBQ2hCLE9BQU8sQ0FBQ0EsSUFBSUosTUFBTTtRQUNwQixPQUFPO1lBQ0wsSUFBS04sT0FBT1UsSUFBSztnQkFDZixJQUFJLENBQUNiLFFBQVFVLElBQUksQ0FBQ0csS0FBS1YsTUFBTTtnQkFDN0IsT0FBTztZQUNUO1lBQ0EsT0FBTztRQUNUO0lBQ0Y7SUFFQUwsZ0JBQWdCLFNBQVNlLEdBQUc7UUFDMUIsSUFBSUssTUFBTUM7UUFDVixPQUFPdEIsU0FBU2dCLFFBQVNNLENBQUFBLFFBQVFSLE9BQU9TLGNBQWMsQ0FBQ1AsSUFBRyxLQUFPSyxDQUFBQSxPQUFPQyxNQUFNRSxXQUFXLEtBQU0sT0FBT0gsU0FBUyxjQUFnQkEsZ0JBQWdCQSxRQUFVSSxTQUFTUixTQUFTLENBQUNDLFFBQVEsQ0FBQ0wsSUFBSSxDQUFDUSxVQUFVSSxTQUFTUixTQUFTLENBQUNDLFFBQVEsQ0FBQ0wsSUFBSSxDQUFDQztJQUN2TztJQUVBbEIsV0FBVyxTQUFTOEIsR0FBRztRQUNyQixJQUFJM0IsV0FBVzJCLElBQUlDLE9BQU8sR0FBRztZQUMzQixPQUFPRCxJQUFJQyxPQUFPO1FBQ3BCLE9BQU87WUFDTCxPQUFPRDtRQUNUO0lBQ0Y7SUFFQUUscUJBQXFCLEdBQUdqQztJQUV4QmlDLHlCQUF5QixHQUFHN0I7SUFFNUI2Qix1QkFBdUIsR0FBRzVCO0lBRTFCNEIsc0JBQXNCLEdBQUcvQjtJQUV6QitCLHNCQUFzQixHQUFHOUI7SUFFekI4Qiw0QkFBNEIsR0FBRzNCO0lBRS9CMkIsdUJBQXVCLEdBQUdoQztBQUU1QixHQUFHaUIsSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1V0aWxpdHkuanM/ZmNhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgYXNzaWduLCBnZXRWYWx1ZSwgaXNBcnJheSwgaXNFbXB0eSwgaXNGdW5jdGlvbiwgaXNPYmplY3QsIGlzUGxhaW5PYmplY3QsXG4gICAgc2xpY2UgPSBbXS5zbGljZSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgYXNzaWduID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGksIGtleSwgbGVuLCBzb3VyY2UsIHNvdXJjZXMsIHRhcmdldDtcbiAgICB0YXJnZXQgPSBhcmd1bWVudHNbMF0sIHNvdXJjZXMgPSAyIDw9IGFyZ3VtZW50cy5sZW5ndGggPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSkgOiBbXTtcbiAgICBpZiAoaXNGdW5jdGlvbihPYmplY3QuYXNzaWduKSkge1xuICAgICAgT2JqZWN0LmFzc2lnbi5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGkgPSAwLCBsZW4gPSBzb3VyY2VzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIHNvdXJjZSA9IHNvdXJjZXNbaV07XG4gICAgICAgIGlmIChzb3VyY2UgIT0gbnVsbCkge1xuICAgICAgICAgIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHJldHVybiAhIXZhbCAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgfTtcblxuICBpc09iamVjdCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIHZhciByZWY7XG4gICAgcmV0dXJuICEhdmFsICYmICgocmVmID0gdHlwZW9mIHZhbCkgPT09ICdmdW5jdGlvbicgfHwgcmVmID09PSAnb2JqZWN0Jyk7XG4gIH07XG5cbiAgaXNBcnJheSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgIGlmIChpc0Z1bmN0aW9uKEFycmF5LmlzQXJyYXkpKSB7XG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG4gICAgfVxuICB9O1xuXG4gIGlzRW1wdHkgPSBmdW5jdGlvbih2YWwpIHtcbiAgICB2YXIga2V5O1xuICAgIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgIHJldHVybiAhdmFsLmxlbmd0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChrZXkgaW4gdmFsKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHZhbCwga2V5KSkgY29udGludWU7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBpc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgdmFyIGN0b3IsIHByb3RvO1xuICAgIHJldHVybiBpc09iamVjdCh2YWwpICYmIChwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWwpKSAmJiAoY3RvciA9IHByb3RvLmNvbnN0cnVjdG9yKSAmJiAodHlwZW9mIGN0b3IgPT09ICdmdW5jdGlvbicpICYmIChjdG9yIGluc3RhbmNlb2YgY3RvcikgJiYgKEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGN0b3IpID09PSBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChPYmplY3QpKTtcbiAgfTtcblxuICBnZXRWYWx1ZSA9IGZ1bmN0aW9uKG9iaikge1xuICAgIGlmIChpc0Z1bmN0aW9uKG9iai52YWx1ZU9mKSkge1xuICAgICAgcmV0dXJuIG9iai52YWx1ZU9mKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzLmFzc2lnbiA9IGFzc2lnbjtcblxuICBtb2R1bGUuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuICBtb2R1bGUuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG4gIG1vZHVsZS5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG4gIG1vZHVsZS5leHBvcnRzLmlzRW1wdHkgPSBpc0VtcHR5O1xuXG4gIG1vZHVsZS5leHBvcnRzLmlzUGxhaW5PYmplY3QgPSBpc1BsYWluT2JqZWN0O1xuXG4gIG1vZHVsZS5leHBvcnRzLmdldFZhbHVlID0gZ2V0VmFsdWU7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiYXNzaWduIiwiZ2V0VmFsdWUiLCJpc0FycmF5IiwiaXNFbXB0eSIsImlzRnVuY3Rpb24iLCJpc09iamVjdCIsImlzUGxhaW5PYmplY3QiLCJzbGljZSIsImhhc1Byb3AiLCJoYXNPd25Qcm9wZXJ0eSIsImkiLCJrZXkiLCJsZW4iLCJzb3VyY2UiLCJzb3VyY2VzIiwidGFyZ2V0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiY2FsbCIsIk9iamVjdCIsImFwcGx5IiwidmFsIiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJyZWYiLCJBcnJheSIsImN0b3IiLCJwcm90byIsImdldFByb3RvdHlwZU9mIiwiY29uc3RydWN0b3IiLCJGdW5jdGlvbiIsIm9iaiIsInZhbHVlT2YiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/Utility.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLAttribute.js":
/*!*****************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLAttribute.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute;\n    module.exports = XMLAttribute = function() {\n        function XMLAttribute(parent, name, value) {\n            this.options = parent.options;\n            this.stringify = parent.stringify;\n            this.parent = parent;\n            if (name == null) {\n                throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n            }\n            if (value == null) {\n                throw new Error(\"Missing attribute value. \" + this.debugInfo(name));\n            }\n            this.name = this.stringify.attName(name);\n            this.value = this.stringify.attValue(value);\n        }\n        XMLAttribute.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLAttribute.prototype.toString = function(options) {\n            return this.options.writer.set(options).attribute(this);\n        };\n        XMLAttribute.prototype.debugInfo = function(name) {\n            name = name || this.name;\n            if (name == null) {\n                return \"parent: <\" + this.parent.name + \">\";\n            } else {\n                return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n            }\n        };\n        return XMLAttribute;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MQXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQTtJQUVKQyxPQUFPQyxPQUFPLEdBQUdGLGVBQWU7UUFDOUIsU0FBU0EsYUFBYUcsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUs7WUFDdkMsSUFBSSxDQUFDQyxPQUFPLEdBQUdILE9BQU9HLE9BQU87WUFDN0IsSUFBSSxDQUFDQyxTQUFTLEdBQUdKLE9BQU9JLFNBQVM7WUFDakMsSUFBSSxDQUFDSixNQUFNLEdBQUdBO1lBQ2QsSUFBSUMsUUFBUSxNQUFNO2dCQUNoQixNQUFNLElBQUlJLE1BQU0sNkJBQTZCLElBQUksQ0FBQ0MsU0FBUyxDQUFDTDtZQUM5RDtZQUNBLElBQUlDLFNBQVMsTUFBTTtnQkFDakIsTUFBTSxJQUFJRyxNQUFNLDhCQUE4QixJQUFJLENBQUNDLFNBQVMsQ0FBQ0w7WUFDL0Q7WUFDQSxJQUFJLENBQUNBLElBQUksR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0csT0FBTyxDQUFDTjtZQUNuQyxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJLENBQUNFLFNBQVMsQ0FBQ0ksUUFBUSxDQUFDTjtRQUN2QztRQUVBTCxhQUFhWSxTQUFTLENBQUNDLEtBQUssR0FBRztZQUM3QixPQUFPQyxPQUFPQyxNQUFNLENBQUMsSUFBSTtRQUMzQjtRQUVBZixhQUFhWSxTQUFTLENBQUNJLFFBQVEsR0FBRyxTQUFTVixPQUFPO1lBQ2hELE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNXLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDWixTQUFTYSxTQUFTLENBQUMsSUFBSTtRQUN4RDtRQUVBbkIsYUFBYVksU0FBUyxDQUFDSCxTQUFTLEdBQUcsU0FBU0wsSUFBSTtZQUM5Q0EsT0FBT0EsUUFBUSxJQUFJLENBQUNBLElBQUk7WUFDeEIsSUFBSUEsUUFBUSxNQUFNO2dCQUNoQixPQUFPLGNBQWMsSUFBSSxDQUFDRCxNQUFNLENBQUNDLElBQUksR0FBRztZQUMxQyxPQUFPO2dCQUNMLE9BQU8saUJBQWlCQSxPQUFPLGlCQUFpQixJQUFJLENBQUNELE1BQU0sQ0FBQ0MsSUFBSSxHQUFHO1lBQ3JFO1FBQ0Y7UUFFQSxPQUFPSjtJQUVUO0FBRUYsR0FBR29CLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxBdHRyaWJ1dGUuanM/ZTFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQXR0cmlidXRlO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MQXR0cmlidXRlID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIFhNTEF0dHJpYnV0ZShwYXJlbnQsIG5hbWUsIHZhbHVlKSB7XG4gICAgICB0aGlzLm9wdGlvbnMgPSBwYXJlbnQub3B0aW9ucztcbiAgICAgIHRoaXMuc3RyaW5naWZ5ID0gcGFyZW50LnN0cmluZ2lmeTtcbiAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGF0dHJpYnV0ZSBuYW1lLiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgYXR0cmlidXRlIHZhbHVlLiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmF0dE5hbWUobmFtZSk7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuYXR0VmFsdWUodmFsdWUpO1xuICAgIH1cblxuICAgIFhNTEF0dHJpYnV0ZS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxBdHRyaWJ1dGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmF0dHJpYnV0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MQXR0cmlidXRlLnByb3RvdHlwZS5kZWJ1Z0luZm8gPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgICBuYW1lID0gbmFtZSB8fCB0aGlzLm5hbWU7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBcInBhcmVudDogPFwiICsgdGhpcy5wYXJlbnQubmFtZSArIFwiPlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiYXR0cmlidXRlOiB7XCIgKyBuYW1lICsgXCJ9LCBwYXJlbnQ6IDxcIiArIHRoaXMucGFyZW50Lm5hbWUgKyBcIj5cIjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTEF0dHJpYnV0ZTtcblxuICB9KSgpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTEF0dHJpYnV0ZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwYXJlbnQiLCJuYW1lIiwidmFsdWUiLCJvcHRpb25zIiwic3RyaW5naWZ5IiwiRXJyb3IiLCJkZWJ1Z0luZm8iLCJhdHROYW1lIiwiYXR0VmFsdWUiLCJwcm90b3R5cGUiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwid3JpdGVyIiwic2V0IiwiYXR0cmlidXRlIiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLAttribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js":
/*!*************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLCData.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLCData = function(superClass) {\n        extend(XMLCData, superClass);\n        function XMLCData(parent, text) {\n            XMLCData.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n            }\n            this.text = this.stringify.cdata(text);\n        }\n        XMLCData.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLCData.prototype.toString = function(options) {\n            return this.options.writer.set(options).cdata(this);\n        };\n        return XMLCData;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MQ0RhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLFVBQVVDLFNBQ1pDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLFdBQVcsU0FBVWdCLFVBQVU7UUFDOUNkLE9BQU9GLFVBQVVnQjtRQUVqQixTQUFTaEIsU0FBU0ksTUFBTSxFQUFFYSxJQUFJO1lBQzVCakIsU0FBU1csU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzFDLElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLHlCQUF5QixJQUFJLENBQUNDLFNBQVM7WUFDekQ7WUFDQSxJQUFJLENBQUNGLElBQUksR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDSjtRQUNuQztRQUVBakIsU0FBU1UsU0FBUyxDQUFDWSxLQUFLLEdBQUc7WUFDekIsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXhCLFNBQVNVLFNBQVMsQ0FBQ2UsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDNUMsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNMLEtBQUssQ0FBQyxJQUFJO1FBQ3BEO1FBRUEsT0FBT3JCO0lBRVQsRUFBR0M7QUFFTCxHQUFHTSxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MQ0RhdGEuanM/MDBiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MQ0RhdGEsIFhNTE5vZGUsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxDRGF0YSA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTENEYXRhLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTENEYXRhKHBhcmVudCwgdGV4dCkge1xuICAgICAgWE1MQ0RhdGEuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBDREFUQSB0ZXh0LiBcIiArIHRoaXMuZGVidWdJbmZvKCkpO1xuICAgICAgfVxuICAgICAgdGhpcy50ZXh0ID0gdGhpcy5zdHJpbmdpZnkuY2RhdGEodGV4dCk7XG4gICAgfVxuXG4gICAgWE1MQ0RhdGEucHJvdG90eXBlLmNsb25lID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MQ0RhdGEucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmNkYXRhKHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MQ0RhdGE7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MQ0RhdGEiLCJYTUxOb2RlIiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwidGV4dCIsIkVycm9yIiwiZGVidWdJbmZvIiwic3RyaW5naWZ5IiwiY2RhdGEiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js":
/*!***************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLComment.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLComment, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLComment = function(superClass) {\n        extend(XMLComment, superClass);\n        function XMLComment(parent, text) {\n            XMLComment.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing comment text. \" + this.debugInfo());\n            }\n            this.text = this.stringify.comment(text);\n        }\n        XMLComment.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLComment.prototype.toString = function(options) {\n            return this.options.writer.set(options).comment(this);\n        };\n        return XMLComment;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MQ29tbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsWUFBWUMsU0FDZEMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlgsVUFBVVksbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2YsYUFBYSxTQUFVZ0IsVUFBVTtRQUNoRGQsT0FBT0YsWUFBWWdCO1FBRW5CLFNBQVNoQixXQUFXSSxNQUFNLEVBQUVhLElBQUk7WUFDOUJqQixXQUFXVyxTQUFTLENBQUNGLFdBQVcsQ0FBQ0YsSUFBSSxDQUFDLElBQUksRUFBRUg7WUFDNUMsSUFBSWEsUUFBUSxNQUFNO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sMkJBQTJCLElBQUksQ0FBQ0MsU0FBUztZQUMzRDtZQUNBLElBQUksQ0FBQ0YsSUFBSSxHQUFHLElBQUksQ0FBQ0csU0FBUyxDQUFDQyxPQUFPLENBQUNKO1FBQ3JDO1FBRUFqQixXQUFXVSxTQUFTLENBQUNZLEtBQUssR0FBRztZQUMzQixPQUFPQyxPQUFPQyxNQUFNLENBQUMsSUFBSTtRQUMzQjtRQUVBeEIsV0FBV1UsU0FBUyxDQUFDZSxRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUM5QyxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0wsT0FBTyxDQUFDLElBQUk7UUFDdEQ7UUFFQSxPQUFPckI7SUFFVCxFQUFHQztBQUVMLEdBQUdNLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxDb21tZW50LmpzPzgwNmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTENvbW1lbnQsIFhNTE5vZGUsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxDb21tZW50ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MQ29tbWVudCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxDb21tZW50KHBhcmVudCwgdGV4dCkge1xuICAgICAgWE1MQ29tbWVudC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRleHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGNvbW1lbnQgdGV4dC4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudGV4dCA9IHRoaXMuc3RyaW5naWZ5LmNvbW1lbnQodGV4dCk7XG4gICAgfVxuXG4gICAgWE1MQ29tbWVudC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxDb21tZW50LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5jb21tZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MQ29tbWVudDtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxDb21tZW50IiwiWE1MTm9kZSIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsInRleHQiLCJFcnJvciIsImRlYnVnSW5mbyIsInN0cmluZ2lmeSIsImNvbW1lbnQiLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js":
/*!******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDTDAttList.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDAttList, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDAttList = function(superClass) {\n        extend(XMLDTDAttList, superClass);\n        function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            XMLDTDAttList.__super__.constructor.call(this, parent);\n            if (elementName == null) {\n                throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n            }\n            if (attributeName == null) {\n                throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n            }\n            if (!attributeType) {\n                throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n            }\n            if (!defaultValueType) {\n                throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n            }\n            if (defaultValueType.indexOf(\"#\") !== 0) {\n                defaultValueType = \"#\" + defaultValueType;\n            }\n            if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n                throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n            }\n            if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n                throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n            }\n            this.elementName = this.stringify.eleName(elementName);\n            this.attributeName = this.stringify.attName(attributeName);\n            this.attributeType = this.stringify.dtdAttType(attributeType);\n            this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n            this.defaultValueType = defaultValueType;\n        }\n        XMLDTDAttList.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdAttList(this);\n        };\n        return XMLDTDAttList;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFREQXR0TGlzdC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsZUFBZUMsU0FDakJDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLGdCQUFnQixTQUFVZ0IsVUFBVTtRQUNuRGQsT0FBT0YsZUFBZWdCO1FBRXRCLFNBQVNoQixjQUFjSSxNQUFNLEVBQUVhLFdBQVcsRUFBRUMsYUFBYSxFQUFFQyxhQUFhLEVBQUVDLGdCQUFnQixFQUFFQyxZQUFZO1lBQ3RHckIsY0FBY1csU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQy9DLElBQUlhLGVBQWUsTUFBTTtnQkFDdkIsTUFBTSxJQUFJSyxNQUFNLCtCQUErQixJQUFJLENBQUNDLFNBQVM7WUFDL0Q7WUFDQSxJQUFJTCxpQkFBaUIsTUFBTTtnQkFDekIsTUFBTSxJQUFJSSxNQUFNLGlDQUFpQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ047WUFDbEU7WUFDQSxJQUFJLENBQUNFLGVBQWU7Z0JBQ2xCLE1BQU0sSUFBSUcsTUFBTSxpQ0FBaUMsSUFBSSxDQUFDQyxTQUFTLENBQUNOO1lBQ2xFO1lBQ0EsSUFBSSxDQUFDRyxrQkFBa0I7Z0JBQ3JCLE1BQU0sSUFBSUUsTUFBTSxvQ0FBb0MsSUFBSSxDQUFDQyxTQUFTLENBQUNOO1lBQ3JFO1lBQ0EsSUFBSUcsaUJBQWlCSSxPQUFPLENBQUMsU0FBUyxHQUFHO2dCQUN2Q0osbUJBQW1CLE1BQU1BO1lBQzNCO1lBQ0EsSUFBSSxDQUFDQSxpQkFBaUJLLEtBQUssQ0FBQywyQ0FBMkM7Z0JBQ3JFLE1BQU0sSUFBSUgsTUFBTSxvRkFBb0YsSUFBSSxDQUFDQyxTQUFTLENBQUNOO1lBQ3JIO1lBQ0EsSUFBSUksZ0JBQWdCLENBQUNELGlCQUFpQkssS0FBSyxDQUFDLHdCQUF3QjtnQkFDbEUsTUFBTSxJQUFJSCxNQUFNLHVEQUF1RCxJQUFJLENBQUNDLFNBQVMsQ0FBQ047WUFDeEY7WUFDQSxJQUFJLENBQUNBLFdBQVcsR0FBRyxJQUFJLENBQUNTLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDVjtZQUMxQyxJQUFJLENBQUNDLGFBQWEsR0FBRyxJQUFJLENBQUNRLFNBQVMsQ0FBQ0UsT0FBTyxDQUFDVjtZQUM1QyxJQUFJLENBQUNDLGFBQWEsR0FBRyxJQUFJLENBQUNPLFNBQVMsQ0FBQ0csVUFBVSxDQUFDVjtZQUMvQyxJQUFJLENBQUNFLFlBQVksR0FBRyxJQUFJLENBQUNLLFNBQVMsQ0FBQ0ksYUFBYSxDQUFDVDtZQUNqRCxJQUFJLENBQUNELGdCQUFnQixHQUFHQTtRQUMxQjtRQUVBcEIsY0FBY1UsU0FBUyxDQUFDcUIsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDakQsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNHLFVBQVUsQ0FBQyxJQUFJO1FBQ3pEO1FBRUEsT0FBT25DO0lBRVQsRUFBR0M7QUFFTCxHQUFHTSxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFREQXR0TGlzdC5qcz83M2NkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEVERBdHRMaXN0LCBYTUxOb2RlLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRFREQXR0TGlzdCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTERUREF0dExpc3QsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MRFREQXR0TGlzdChwYXJlbnQsIGVsZW1lbnROYW1lLCBhdHRyaWJ1dGVOYW1lLCBhdHRyaWJ1dGVUeXBlLCBkZWZhdWx0VmFsdWVUeXBlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIFhNTERUREF0dExpc3QuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmIChlbGVtZW50TmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGVsZW1lbnQgbmFtZS4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIGlmIChhdHRyaWJ1dGVOYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgYXR0cmlidXRlIG5hbWUuIFwiICsgdGhpcy5kZWJ1Z0luZm8oZWxlbWVudE5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmICghYXR0cmlidXRlVHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIERURCBhdHRyaWJ1dGUgdHlwZS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhlbGVtZW50TmFtZSkpO1xuICAgICAgfVxuICAgICAgaWYgKCFkZWZhdWx0VmFsdWVUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGF0dHJpYnV0ZSBkZWZhdWx0LiBcIiArIHRoaXMuZGVidWdJbmZvKGVsZW1lbnROYW1lKSk7XG4gICAgICB9XG4gICAgICBpZiAoZGVmYXVsdFZhbHVlVHlwZS5pbmRleE9mKCcjJykgIT09IDApIHtcbiAgICAgICAgZGVmYXVsdFZhbHVlVHlwZSA9ICcjJyArIGRlZmF1bHRWYWx1ZVR5cGU7XG4gICAgICB9XG4gICAgICBpZiAoIWRlZmF1bHRWYWx1ZVR5cGUubWF0Y2goL14oI1JFUVVJUkVEfCNJTVBMSUVEfCNGSVhFRHwjREVGQVVMVCkkLykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkZWZhdWx0IHZhbHVlIHR5cGU7IGV4cGVjdGVkOiAjUkVRVUlSRUQsICNJTVBMSUVELCAjRklYRUQgb3IgI0RFRkFVTFQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oZWxlbWVudE5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmIChkZWZhdWx0VmFsdWUgJiYgIWRlZmF1bHRWYWx1ZVR5cGUubWF0Y2goL14oI0ZJWEVEfCNERUZBVUxUKSQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEZWZhdWx0IHZhbHVlIG9ubHkgYXBwbGllcyB0byAjRklYRUQgb3IgI0RFRkFVTFQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oZWxlbWVudE5hbWUpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZWxlbWVudE5hbWUgPSB0aGlzLnN0cmluZ2lmeS5lbGVOYW1lKGVsZW1lbnROYW1lKTtcbiAgICAgIHRoaXMuYXR0cmlidXRlTmFtZSA9IHRoaXMuc3RyaW5naWZ5LmF0dE5hbWUoYXR0cmlidXRlTmFtZSk7XG4gICAgICB0aGlzLmF0dHJpYnV0ZVR5cGUgPSB0aGlzLnN0cmluZ2lmeS5kdGRBdHRUeXBlKGF0dHJpYnV0ZVR5cGUpO1xuICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPSB0aGlzLnN0cmluZ2lmeS5kdGRBdHREZWZhdWx0KGRlZmF1bHRWYWx1ZSk7XG4gICAgICB0aGlzLmRlZmF1bHRWYWx1ZVR5cGUgPSBkZWZhdWx0VmFsdWVUeXBlO1xuICAgIH1cblxuICAgIFhNTERUREF0dExpc3QucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmR0ZEF0dExpc3QodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVERBdHRMaXN0O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTERUREF0dExpc3QiLCJYTUxOb2RlIiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwiZWxlbWVudE5hbWUiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlVHlwZSIsImRlZmF1bHRWYWx1ZVR5cGUiLCJkZWZhdWx0VmFsdWUiLCJFcnJvciIsImRlYnVnSW5mbyIsImluZGV4T2YiLCJtYXRjaCIsInN0cmluZ2lmeSIsImVsZU5hbWUiLCJhdHROYW1lIiwiZHRkQXR0VHlwZSIsImR0ZEF0dERlZmF1bHQiLCJ0b1N0cmluZyIsIm9wdGlvbnMiLCJ3cml0ZXIiLCJzZXQiLCJkdGRBdHRMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js":
/*!******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDTDElement.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDElement, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDElement = function(superClass) {\n        extend(XMLDTDElement, superClass);\n        function XMLDTDElement(parent, name, value) {\n            XMLDTDElement.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n            }\n            if (!value) {\n                value = \"(#PCDATA)\";\n            }\n            if (Array.isArray(value)) {\n                value = \"(\" + value.join(\",\") + \")\";\n            }\n            this.name = this.stringify.eleName(name);\n            this.value = this.stringify.dtdElementValue(value);\n        }\n        XMLDTDElement.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdElement(this);\n        };\n        return XMLDTDElement;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFRERWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsZUFBZUMsU0FDakJDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLGdCQUFnQixTQUFVZ0IsVUFBVTtRQUNuRGQsT0FBT0YsZUFBZWdCO1FBRXRCLFNBQVNoQixjQUFjSSxNQUFNLEVBQUVhLElBQUksRUFBRUMsS0FBSztZQUN4Q2xCLGNBQWNXLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUMvQyxJQUFJYSxRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUUsTUFBTSwrQkFBK0IsSUFBSSxDQUFDQyxTQUFTO1lBQy9EO1lBQ0EsSUFBSSxDQUFDRixPQUFPO2dCQUNWQSxRQUFRO1lBQ1Y7WUFDQSxJQUFJRyxNQUFNQyxPQUFPLENBQUNKLFFBQVE7Z0JBQ3hCQSxRQUFRLE1BQU1BLE1BQU1LLElBQUksQ0FBQyxPQUFPO1lBQ2xDO1lBQ0EsSUFBSSxDQUFDTixJQUFJLEdBQUcsSUFBSSxDQUFDTyxTQUFTLENBQUNDLE9BQU8sQ0FBQ1I7WUFDbkMsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSSxDQUFDTSxTQUFTLENBQUNFLGVBQWUsQ0FBQ1I7UUFDOUM7UUFFQWxCLGNBQWNVLFNBQVMsQ0FBQ2lCLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQ2pELE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTRyxVQUFVLENBQUMsSUFBSTtRQUN6RDtRQUVBLE9BQU8vQjtJQUVULEVBQUdDO0FBRUwsR0FBR00sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERUREVsZW1lbnQuanM/ZDhjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRFRERWxlbWVudCwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERUREVsZW1lbnQgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEVERFbGVtZW50LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERUREVsZW1lbnQocGFyZW50LCBuYW1lLCB2YWx1ZSkge1xuICAgICAgWE1MRFRERWxlbWVudC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIERURCBlbGVtZW50IG5hbWUuIFwiICsgdGhpcy5kZWJ1Z0luZm8oKSk7XG4gICAgICB9XG4gICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gJygjUENEQVRBKSc7XG4gICAgICB9XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgdmFsdWUgPSAnKCcgKyB2YWx1ZS5qb2luKCcsJykgKyAnKSc7XG4gICAgICB9XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLnN0cmluZ2lmeS5lbGVOYW1lKG5hbWUpO1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuc3RyaW5naWZ5LmR0ZEVsZW1lbnRWYWx1ZSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgWE1MRFRERWxlbWVudC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZHRkRWxlbWVudCh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTERUREVsZW1lbnQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MRFRERWxlbWVudCIsIlhNTE5vZGUiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJuYW1lIiwidmFsdWUiLCJFcnJvciIsImRlYnVnSW5mbyIsIkFycmF5IiwiaXNBcnJheSIsImpvaW4iLCJzdHJpbmdpZnkiLCJlbGVOYW1lIiwiZHRkRWxlbWVudFZhbHVlIiwidG9TdHJpbmciLCJvcHRpb25zIiwid3JpdGVyIiwic2V0IiwiZHRkRWxlbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js":
/*!*****************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDTDEntity.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDEntity, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDEntity = function(superClass) {\n        extend(XMLDTDEntity, superClass);\n        function XMLDTDEntity(parent, pe, name, value) {\n            XMLDTDEntity.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n            }\n            if (value == null) {\n                throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n            }\n            this.pe = !!pe;\n            this.name = this.stringify.eleName(name);\n            if (!isObject(value)) {\n                this.value = this.stringify.dtdEntityValue(value);\n            } else {\n                if (!value.pubID && !value.sysID) {\n                    throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n                }\n                if (value.pubID && !value.sysID) {\n                    throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n                }\n                if (value.pubID != null) {\n                    this.pubID = this.stringify.dtdPubID(value.pubID);\n                }\n                if (value.sysID != null) {\n                    this.sysID = this.stringify.dtdSysID(value.sysID);\n                }\n                if (value.nData != null) {\n                    this.nData = this.stringify.dtdNData(value.nData);\n                }\n                if (this.pe && this.nData) {\n                    throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n                }\n            }\n        }\n        XMLDTDEntity.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdEntity(this);\n        };\n        return XMLDTDEntity;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFRERW50aXR5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxjQUFjQyxTQUFTQyxVQUN6QkMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlgsV0FBV1ksaUdBQTZCO0lBRXhDYixVQUFVYSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHaEIsZUFBZSxTQUFVaUIsVUFBVTtRQUNsRGQsT0FBT0gsY0FBY2lCO1FBRXJCLFNBQVNqQixhQUFhSyxNQUFNLEVBQUVhLEVBQUUsRUFBRUMsSUFBSSxFQUFFQyxLQUFLO1lBQzNDcEIsYUFBYVksU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzlDLElBQUljLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJRSxNQUFNLDhCQUE4QixJQUFJLENBQUNDLFNBQVMsQ0FBQ0g7WUFDL0Q7WUFDQSxJQUFJQyxTQUFTLE1BQU07Z0JBQ2pCLE1BQU0sSUFBSUMsTUFBTSwrQkFBK0IsSUFBSSxDQUFDQyxTQUFTLENBQUNIO1lBQ2hFO1lBQ0EsSUFBSSxDQUFDRCxFQUFFLEdBQUcsQ0FBQyxDQUFDQTtZQUNaLElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQUksQ0FBQ0ksU0FBUyxDQUFDQyxPQUFPLENBQUNMO1lBQ25DLElBQUksQ0FBQ2pCLFNBQVNrQixRQUFRO2dCQUNwQixJQUFJLENBQUNBLEtBQUssR0FBRyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0UsY0FBYyxDQUFDTDtZQUM3QyxPQUFPO2dCQUNMLElBQUksQ0FBQ0EsTUFBTU0sS0FBSyxJQUFJLENBQUNOLE1BQU1PLEtBQUssRUFBRTtvQkFDaEMsTUFBTSxJQUFJTixNQUFNLDJFQUEyRSxJQUFJLENBQUNDLFNBQVMsQ0FBQ0g7Z0JBQzVHO2dCQUNBLElBQUlDLE1BQU1NLEtBQUssSUFBSSxDQUFDTixNQUFNTyxLQUFLLEVBQUU7b0JBQy9CLE1BQU0sSUFBSU4sTUFBTSxpRUFBaUUsSUFBSSxDQUFDQyxTQUFTLENBQUNIO2dCQUNsRztnQkFDQSxJQUFJQyxNQUFNTSxLQUFLLElBQUksTUFBTTtvQkFDdkIsSUFBSSxDQUFDQSxLQUFLLEdBQUcsSUFBSSxDQUFDSCxTQUFTLENBQUNLLFFBQVEsQ0FBQ1IsTUFBTU0sS0FBSztnQkFDbEQ7Z0JBQ0EsSUFBSU4sTUFBTU8sS0FBSyxJQUFJLE1BQU07b0JBQ3ZCLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUksQ0FBQ0osU0FBUyxDQUFDTSxRQUFRLENBQUNULE1BQU1PLEtBQUs7Z0JBQ2xEO2dCQUNBLElBQUlQLE1BQU1VLEtBQUssSUFBSSxNQUFNO29CQUN2QixJQUFJLENBQUNBLEtBQUssR0FBRyxJQUFJLENBQUNQLFNBQVMsQ0FBQ1EsUUFBUSxDQUFDWCxNQUFNVSxLQUFLO2dCQUNsRDtnQkFDQSxJQUFJLElBQUksQ0FBQ1osRUFBRSxJQUFJLElBQUksQ0FBQ1ksS0FBSyxFQUFFO29CQUN6QixNQUFNLElBQUlULE1BQU0sZ0VBQWdFLElBQUksQ0FBQ0MsU0FBUyxDQUFDSDtnQkFDakc7WUFDRjtRQUNGO1FBRUFuQixhQUFhVyxTQUFTLENBQUNxQixRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUNoRCxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0csU0FBUyxDQUFDLElBQUk7UUFDeEQ7UUFFQSxPQUFPcEM7SUFFVCxFQUFHQztBQUVMLEdBQUdPLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEVERFbnRpdHkuanM/YThhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MRFRERW50aXR5LCBYTUxOb2RlLCBpc09iamVjdCxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9VdGlsaXR5JykuaXNPYmplY3Q7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRFRERW50aXR5ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRFRERW50aXR5LCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTERUREVudGl0eShwYXJlbnQsIHBlLCBuYW1lLCB2YWx1ZSkge1xuICAgICAgWE1MRFRERW50aXR5Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGVudGl0eSBuYW1lLiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgRFREIGVudGl0eSB2YWx1ZS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhuYW1lKSk7XG4gICAgICB9XG4gICAgICB0aGlzLnBlID0gISFwZTtcbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUobmFtZSk7XG4gICAgICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuZHRkRW50aXR5VmFsdWUodmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCF2YWx1ZS5wdWJJRCAmJiAhdmFsdWUuc3lzSUQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaWMgYW5kL29yIHN5c3RlbSBpZGVudGlmaWVycyBhcmUgcmVxdWlyZWQgZm9yIGFuIGV4dGVybmFsIGVudGl0eS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhuYW1lKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLnB1YklEICYmICF2YWx1ZS5zeXNJRCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlN5c3RlbSBpZGVudGlmaWVyIGlzIHJlcXVpcmVkIGZvciBhIHB1YmxpYyBleHRlcm5hbCBlbnRpdHkuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZS5wdWJJRCAhPSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5wdWJJRCA9IHRoaXMuc3RyaW5naWZ5LmR0ZFB1YklEKHZhbHVlLnB1YklEKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUuc3lzSUQgIT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMuc3lzSUQgPSB0aGlzLnN0cmluZ2lmeS5kdGRTeXNJRCh2YWx1ZS5zeXNJRCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLm5EYXRhICE9IG51bGwpIHtcbiAgICAgICAgICB0aGlzLm5EYXRhID0gdGhpcy5zdHJpbmdpZnkuZHRkTkRhdGEodmFsdWUubkRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBlICYmIHRoaXMubkRhdGEpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3RhdGlvbiBkZWNsYXJhdGlvbiBpcyBub3QgYWxsb3dlZCBpbiBhIHBhcmFtZXRlciBlbnRpdHkuIFwiICsgdGhpcy5kZWJ1Z0luZm8obmFtZSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MRFRERW50aXR5LnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMud3JpdGVyLnNldChvcHRpb25zKS5kdGRFbnRpdHkodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVERFbnRpdHk7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MRFRERW50aXR5IiwiWE1MTm9kZSIsImlzT2JqZWN0IiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwicGUiLCJuYW1lIiwidmFsdWUiLCJFcnJvciIsImRlYnVnSW5mbyIsInN0cmluZ2lmeSIsImVsZU5hbWUiLCJkdGRFbnRpdHlWYWx1ZSIsInB1YklEIiwic3lzSUQiLCJkdGRQdWJJRCIsImR0ZFN5c0lEIiwibkRhdGEiLCJkdGRORGF0YSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCIsImR0ZEVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js":
/*!*******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDTDNotation.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDNotation, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDTDNotation = function(superClass) {\n        extend(XMLDTDNotation, superClass);\n        function XMLDTDNotation(parent, name, value) {\n            XMLDTDNotation.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n            }\n            if (!value.pubID && !value.sysID) {\n                throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n            }\n            this.name = this.stringify.eleName(name);\n            if (value.pubID != null) {\n                this.pubID = this.stringify.dtdPubID(value.pubID);\n            }\n            if (value.sysID != null) {\n                this.sysID = this.stringify.dtdSysID(value.sysID);\n            }\n        }\n        XMLDTDNotation.prototype.toString = function(options) {\n            return this.options.writer.set(options).dtdNotation(this);\n        };\n        return XMLDTDNotation;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRFRETm90YXRpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGdCQUFnQkMsU0FDbEJDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLGlCQUFpQixTQUFVZ0IsVUFBVTtRQUNwRGQsT0FBT0YsZ0JBQWdCZ0I7UUFFdkIsU0FBU2hCLGVBQWVJLE1BQU0sRUFBRWEsSUFBSSxFQUFFQyxLQUFLO1lBQ3pDbEIsZUFBZVcsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQ2hELElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJRSxNQUFNLGdDQUFnQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0g7WUFDakU7WUFDQSxJQUFJLENBQUNDLE1BQU1HLEtBQUssSUFBSSxDQUFDSCxNQUFNSSxLQUFLLEVBQUU7Z0JBQ2hDLE1BQU0sSUFBSUgsTUFBTSx1RUFBdUUsSUFBSSxDQUFDQyxTQUFTLENBQUNIO1lBQ3hHO1lBQ0EsSUFBSSxDQUFDQSxJQUFJLEdBQUcsSUFBSSxDQUFDTSxTQUFTLENBQUNDLE9BQU8sQ0FBQ1A7WUFDbkMsSUFBSUMsTUFBTUcsS0FBSyxJQUFJLE1BQU07Z0JBQ3ZCLElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUksQ0FBQ0UsU0FBUyxDQUFDRSxRQUFRLENBQUNQLE1BQU1HLEtBQUs7WUFDbEQ7WUFDQSxJQUFJSCxNQUFNSSxLQUFLLElBQUksTUFBTTtnQkFDdkIsSUFBSSxDQUFDQSxLQUFLLEdBQUcsSUFBSSxDQUFDQyxTQUFTLENBQUNHLFFBQVEsQ0FBQ1IsTUFBTUksS0FBSztZQUNsRDtRQUNGO1FBRUF0QixlQUFlVSxTQUFTLENBQUNpQixRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUNsRCxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ0YsU0FBU0csV0FBVyxDQUFDLElBQUk7UUFDMUQ7UUFFQSxPQUFPL0I7SUFFVCxFQUFHQztBQUVMLEdBQUdNLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEVEROb3RhdGlvbi5qcz8xOGViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEVEROb3RhdGlvbiwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTERURE5vdGF0aW9uID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRFRETm90YXRpb24sIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MRFRETm90YXRpb24ocGFyZW50LCBuYW1lLCB2YWx1ZSkge1xuICAgICAgWE1MRFRETm90YXRpb24uX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBEVEQgbm90YXRpb24gbmFtZS4gXCIgKyB0aGlzLmRlYnVnSW5mbyhuYW1lKSk7XG4gICAgICB9XG4gICAgICBpZiAoIXZhbHVlLnB1YklEICYmICF2YWx1ZS5zeXNJRCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQdWJsaWMgb3Igc3lzdGVtIGlkZW50aWZpZXJzIGFyZSByZXF1aXJlZCBmb3IgYW4gZXh0ZXJuYWwgZW50aXR5LiBcIiArIHRoaXMuZGVidWdJbmZvKG5hbWUpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUobmFtZSk7XG4gICAgICBpZiAodmFsdWUucHViSUQgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnB1YklEID0gdGhpcy5zdHJpbmdpZnkuZHRkUHViSUQodmFsdWUucHViSUQpO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlLnN5c0lEICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5zeXNJRCA9IHRoaXMuc3RyaW5naWZ5LmR0ZFN5c0lEKHZhbHVlLnN5c0lEKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBYTUxEVEROb3RhdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZHRkTm90YXRpb24odGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEVEROb3RhdGlvbjtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEVEROb3RhdGlvbiIsIlhNTE5vZGUiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJuYW1lIiwidmFsdWUiLCJFcnJvciIsImRlYnVnSW5mbyIsInB1YklEIiwic3lzSUQiLCJzdHJpbmdpZnkiLCJlbGVOYW1lIiwiZHRkUHViSUQiLCJkdGRTeXNJRCIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCIsImR0ZE5vdGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js":
/*!*******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDeclaration.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDeclaration, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDeclaration = function(superClass) {\n        extend(XMLDeclaration, superClass);\n        function XMLDeclaration(parent, version, encoding, standalone) {\n            var ref;\n            XMLDeclaration.__super__.constructor.call(this, parent);\n            if (isObject(version)) {\n                ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n            }\n            if (!version) {\n                version = \"1.0\";\n            }\n            this.version = this.stringify.xmlVersion(version);\n            if (encoding != null) {\n                this.encoding = this.stringify.xmlEncoding(encoding);\n            }\n            if (standalone != null) {\n                this.standalone = this.stringify.xmlStandalone(standalone);\n            }\n        }\n        XMLDeclaration.prototype.toString = function(options) {\n            return this.options.writer.set(options).declaration(this);\n        };\n        return XMLDeclaration;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRGVjbGFyYXRpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGdCQUFnQkMsU0FBU0MsVUFDM0JDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFdBQVdZLGlHQUE2QjtJQUV4Q2IsVUFBVWEsbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2hCLGlCQUFpQixTQUFVaUIsVUFBVTtRQUNwRGQsT0FBT0gsZ0JBQWdCaUI7UUFFdkIsU0FBU2pCLGVBQWVLLE1BQU0sRUFBRWEsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLFVBQVU7WUFDM0QsSUFBSUM7WUFDSnJCLGVBQWVZLFNBQVMsQ0FBQ0YsV0FBVyxDQUFDRixJQUFJLENBQUMsSUFBSSxFQUFFSDtZQUNoRCxJQUFJSCxTQUFTZ0IsVUFBVTtnQkFDckJHLE1BQU1ILFNBQVNBLFVBQVVHLElBQUlILE9BQU8sRUFBRUMsV0FBV0UsSUFBSUYsUUFBUSxFQUFFQyxhQUFhQyxJQUFJRCxVQUFVO1lBQzVGO1lBQ0EsSUFBSSxDQUFDRixTQUFTO2dCQUNaQSxVQUFVO1lBQ1o7WUFDQSxJQUFJLENBQUNBLE9BQU8sR0FBRyxJQUFJLENBQUNJLFNBQVMsQ0FBQ0MsVUFBVSxDQUFDTDtZQUN6QyxJQUFJQyxZQUFZLE1BQU07Z0JBQ3BCLElBQUksQ0FBQ0EsUUFBUSxHQUFHLElBQUksQ0FBQ0csU0FBUyxDQUFDRSxXQUFXLENBQUNMO1lBQzdDO1lBQ0EsSUFBSUMsY0FBYyxNQUFNO2dCQUN0QixJQUFJLENBQUNBLFVBQVUsR0FBRyxJQUFJLENBQUNFLFNBQVMsQ0FBQ0csYUFBYSxDQUFDTDtZQUNqRDtRQUNGO1FBRUFwQixlQUFlVyxTQUFTLENBQUNlLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQ2xELE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTRyxXQUFXLENBQUMsSUFBSTtRQUMxRDtRQUVBLE9BQU85QjtJQUVULEVBQUdDO0FBRUwsR0FBR08sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTERlY2xhcmF0aW9uLmpzPzcxYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTERlY2xhcmF0aW9uLCBYTUxOb2RlLCBpc09iamVjdCxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9VdGlsaXR5JykuaXNPYmplY3Q7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRGVjbGFyYXRpb24gPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEZWNsYXJhdGlvbiwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEZWNsYXJhdGlvbihwYXJlbnQsIHZlcnNpb24sIGVuY29kaW5nLCBzdGFuZGFsb25lKSB7XG4gICAgICB2YXIgcmVmO1xuICAgICAgWE1MRGVjbGFyYXRpb24uX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmIChpc09iamVjdCh2ZXJzaW9uKSkge1xuICAgICAgICByZWYgPSB2ZXJzaW9uLCB2ZXJzaW9uID0gcmVmLnZlcnNpb24sIGVuY29kaW5nID0gcmVmLmVuY29kaW5nLCBzdGFuZGFsb25lID0gcmVmLnN0YW5kYWxvbmU7XG4gICAgICB9XG4gICAgICBpZiAoIXZlcnNpb24pIHtcbiAgICAgICAgdmVyc2lvbiA9ICcxLjAnO1xuICAgICAgfVxuICAgICAgdGhpcy52ZXJzaW9uID0gdGhpcy5zdHJpbmdpZnkueG1sVmVyc2lvbih2ZXJzaW9uKTtcbiAgICAgIGlmIChlbmNvZGluZyAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuZW5jb2RpbmcgPSB0aGlzLnN0cmluZ2lmeS54bWxFbmNvZGluZyhlbmNvZGluZyk7XG4gICAgICB9XG4gICAgICBpZiAoc3RhbmRhbG9uZSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuc3RhbmRhbG9uZSA9IHRoaXMuc3RyaW5naWZ5LnhtbFN0YW5kYWxvbmUoc3RhbmRhbG9uZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MRGVjbGFyYXRpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmRlY2xhcmF0aW9uKHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRGVjbGFyYXRpb247XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MRGVjbGFyYXRpb24iLCJYTUxOb2RlIiwiaXNPYmplY3QiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJ2ZXJzaW9uIiwiZW5jb2RpbmciLCJzdGFuZGFsb25lIiwicmVmIiwic3RyaW5naWZ5IiwieG1sVmVyc2lvbiIsInhtbEVuY29kaW5nIiwieG1sU3RhbmRhbG9uZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCIsImRlY2xhcmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js":
/*!***************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDocType.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\").isObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    module.exports = XMLDocType = function(superClass) {\n        extend(XMLDocType, superClass);\n        function XMLDocType(parent, pubID, sysID) {\n            var ref, ref1;\n            XMLDocType.__super__.constructor.call(this, parent);\n            this.name = \"!DOCTYPE\";\n            this.documentObject = parent;\n            if (isObject(pubID)) {\n                ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n            }\n            if (sysID == null) {\n                ref1 = [\n                    pubID,\n                    sysID\n                ], sysID = ref1[0], pubID = ref1[1];\n            }\n            if (pubID != null) {\n                this.pubID = this.stringify.dtdPubID(pubID);\n            }\n            if (sysID != null) {\n                this.sysID = this.stringify.dtdSysID(sysID);\n            }\n        }\n        XMLDocType.prototype.element = function(name, value) {\n            var child;\n            child = new XMLDTDElement(this, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            var child;\n            child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.entity = function(name, value) {\n            var child;\n            child = new XMLDTDEntity(this, false, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.pEntity = function(name, value) {\n            var child;\n            child = new XMLDTDEntity(this, true, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.notation = function(name, value) {\n            var child;\n            child = new XMLDTDNotation(this, name, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLDocType.prototype.toString = function(options) {\n            return this.options.writer.set(options).docType(this);\n        };\n        XMLDocType.prototype.ele = function(name, value) {\n            return this.element(name, value);\n        };\n        XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n        };\n        XMLDocType.prototype.ent = function(name, value) {\n            return this.entity(name, value);\n        };\n        XMLDocType.prototype.pent = function(name, value) {\n            return this.pEntity(name, value);\n        };\n        XMLDocType.prototype.not = function(name, value) {\n            return this.notation(name, value);\n        };\n        XMLDocType.prototype.up = function() {\n            return this.root() || this.documentObject;\n        };\n        return XMLDocType;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDocument.js":
/*!****************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDocument.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    isPlainObject = (__webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\").isPlainObject);\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStringifier.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    module.exports = XMLDocument = function(superClass) {\n        extend(XMLDocument, superClass);\n        function XMLDocument(options) {\n            XMLDocument.__super__.constructor.call(this, null);\n            this.name = \"?xml\";\n            options || (options = {});\n            if (!options.writer) {\n                options.writer = new XMLStringWriter();\n            }\n            this.options = options;\n            this.stringify = new XMLStringifier(options);\n            this.isDocument = true;\n        }\n        XMLDocument.prototype.end = function(writer) {\n            var writerOptions;\n            if (!writer) {\n                writer = this.options.writer;\n            } else if (isPlainObject(writer)) {\n                writerOptions = writer;\n                writer = this.options.writer.set(writerOptions);\n            }\n            return writer.document(this);\n        };\n        XMLDocument.prototype.toString = function(options) {\n            return this.options.writer.set(options).document(this);\n        };\n        return XMLDocument;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRG9jdW1lbnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGFBQWFDLFNBQVNDLGlCQUFpQkMsZ0JBQWdCQyxlQUN6REMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlgsZ0JBQWdCWSxzR0FBa0M7SUFFbERmLFVBQVVlLG1CQUFPQSxDQUFDO0lBRWxCYixpQkFBaUJhLG1CQUFPQSxDQUFDO0lBRXpCZCxrQkFBa0JjLG1CQUFPQSxDQUFDO0lBRTFCQyxPQUFPQyxPQUFPLEdBQUdsQixjQUFjLFNBQVVtQixVQUFVO1FBQ2pEZCxPQUFPTCxhQUFhbUI7UUFFcEIsU0FBU25CLFlBQVlvQixPQUFPO1lBQzFCcEIsWUFBWWMsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDN0MsSUFBSSxDQUFDVyxJQUFJLEdBQUc7WUFDWkQsV0FBWUEsQ0FBQUEsVUFBVSxDQUFDO1lBQ3ZCLElBQUksQ0FBQ0EsUUFBUUUsTUFBTSxFQUFFO2dCQUNuQkYsUUFBUUUsTUFBTSxHQUFHLElBQUlwQjtZQUN2QjtZQUNBLElBQUksQ0FBQ2tCLE9BQU8sR0FBR0E7WUFDZixJQUFJLENBQUNHLFNBQVMsR0FBRyxJQUFJcEIsZUFBZWlCO1lBQ3BDLElBQUksQ0FBQ0ksVUFBVSxHQUFHO1FBQ3BCO1FBRUF4QixZQUFZYSxTQUFTLENBQUNZLEdBQUcsR0FBRyxTQUFTSCxNQUFNO1lBQ3pDLElBQUlJO1lBQ0osSUFBSSxDQUFDSixRQUFRO2dCQUNYQSxTQUFTLElBQUksQ0FBQ0YsT0FBTyxDQUFDRSxNQUFNO1lBQzlCLE9BQU8sSUFBSWxCLGNBQWNrQixTQUFTO2dCQUNoQ0ksZ0JBQWdCSjtnQkFDaEJBLFNBQVMsSUFBSSxDQUFDRixPQUFPLENBQUNFLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDRDtZQUNuQztZQUNBLE9BQU9KLE9BQU9NLFFBQVEsQ0FBQyxJQUFJO1FBQzdCO1FBRUE1QixZQUFZYSxTQUFTLENBQUNnQixRQUFRLEdBQUcsU0FBU1QsT0FBTztZQUMvQyxPQUFPLElBQUksQ0FBQ0EsT0FBTyxDQUFDRSxNQUFNLENBQUNLLEdBQUcsQ0FBQ1AsU0FBU1EsUUFBUSxDQUFDLElBQUk7UUFDdkQ7UUFFQSxPQUFPNUI7SUFFVCxFQUFHQztBQUVMLEdBQUdTLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEb2N1bWVudC5qcz81MjhmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEb2N1bWVudCwgWE1MTm9kZSwgWE1MU3RyaW5nV3JpdGVyLCBYTUxTdHJpbmdpZmllciwgaXNQbGFpbk9iamVjdCxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIGlzUGxhaW5PYmplY3QgPSByZXF1aXJlKCcuL1V0aWxpdHknKS5pc1BsYWluT2JqZWN0O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBYTUxTdHJpbmdpZmllciA9IHJlcXVpcmUoJy4vWE1MU3RyaW5naWZpZXInKTtcblxuICBYTUxTdHJpbmdXcml0ZXIgPSByZXF1aXJlKCcuL1hNTFN0cmluZ1dyaXRlcicpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MRG9jdW1lbnQgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxEb2N1bWVudCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxEb2N1bWVudChvcHRpb25zKSB7XG4gICAgICBYTUxEb2N1bWVudC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBudWxsKTtcbiAgICAgIHRoaXMubmFtZSA9IFwiP3htbFwiO1xuICAgICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICAgIGlmICghb3B0aW9ucy53cml0ZXIpIHtcbiAgICAgICAgb3B0aW9ucy53cml0ZXIgPSBuZXcgWE1MU3RyaW5nV3JpdGVyKCk7XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgdGhpcy5zdHJpbmdpZnkgPSBuZXcgWE1MU3RyaW5naWZpZXIob3B0aW9ucyk7XG4gICAgICB0aGlzLmlzRG9jdW1lbnQgPSB0cnVlO1xuICAgIH1cblxuICAgIFhNTERvY3VtZW50LnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbih3cml0ZXIpIHtcbiAgICAgIHZhciB3cml0ZXJPcHRpb25zO1xuICAgICAgaWYgKCF3cml0ZXIpIHtcbiAgICAgICAgd3JpdGVyID0gdGhpcy5vcHRpb25zLndyaXRlcjtcbiAgICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdCh3cml0ZXIpKSB7XG4gICAgICAgIHdyaXRlck9wdGlvbnMgPSB3cml0ZXI7XG4gICAgICAgIHdyaXRlciA9IHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KHdyaXRlck9wdGlvbnMpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHdyaXRlci5kb2N1bWVudCh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MRG9jdW1lbnQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLmRvY3VtZW50KHRoaXMpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MRG9jdW1lbnQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MRG9jdW1lbnQiLCJYTUxOb2RlIiwiWE1MU3RyaW5nV3JpdGVyIiwiWE1MU3RyaW5naWZpZXIiLCJpc1BsYWluT2JqZWN0IiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwib3B0aW9ucyIsIm5hbWUiLCJ3cml0ZXIiLCJzdHJpbmdpZnkiLCJpc0RvY3VtZW50IiwiZW5kIiwid3JpdGVyT3B0aW9ucyIsInNldCIsImRvY3VtZW50IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDocument.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDocumentCB.js":
/*!******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDocumentCB.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLAttribute.js\");\n    XMLStringifier = __webpack_require__(/*! ./XMLStringifier */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStringifier.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    module.exports = XMLDocumentCB = function() {\n        function XMLDocumentCB(options, onData, onEnd) {\n            var writerOptions;\n            this.name = \"?xml\";\n            options || (options = {});\n            if (!options.writer) {\n                options.writer = new XMLStringWriter(options);\n            } else if (isPlainObject(options.writer)) {\n                writerOptions = options.writer;\n                options.writer = new XMLStringWriter(writerOptions);\n            }\n            this.options = options;\n            this.writer = options.writer;\n            this.stringify = new XMLStringifier(options);\n            this.onDataCallback = onData || function() {};\n            this.onEndCallback = onEnd || function() {};\n            this.currentNode = null;\n            this.currentLevel = -1;\n            this.openTags = {};\n            this.documentStarted = false;\n            this.documentCompleted = false;\n            this.root = null;\n        }\n        XMLDocumentCB.prototype.node = function(name, attributes, text) {\n            var ref1, ref2;\n            if (name == null) {\n                throw new Error(\"Missing node name.\");\n            }\n            if (this.root && this.currentLevel === -1) {\n                throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n            }\n            this.openCurrent();\n            name = getValue(name);\n            if (attributes === null && text == null) {\n                ref1 = [\n                    {},\n                    null\n                ], attributes = ref1[0], text = ref1[1];\n            }\n            if (attributes == null) {\n                attributes = {};\n            }\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref2 = [\n                    attributes,\n                    text\n                ], text = ref2[0], attributes = ref2[1];\n            }\n            this.currentNode = new XMLElement(this, name, attributes);\n            this.currentNode.children = false;\n            this.currentLevel++;\n            this.openTags[this.currentLevel] = this.currentNode;\n            if (text != null) {\n                this.text(text);\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.element = function(name, attributes, text) {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.dtdElement.apply(this, arguments);\n            } else {\n                return this.node(name, attributes, text);\n            }\n        };\n        XMLDocumentCB.prototype.attribute = function(name, value) {\n            var attName, attValue;\n            if (!this.currentNode || this.currentNode.children) {\n                throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n            }\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (isObject(name)) {\n                for(attName in name){\n                    if (!hasProp.call(name, attName)) continue;\n                    attValue = name[attName];\n                    this.attribute(attName, attValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                if (!this.options.skipNullAttributes || value != null) {\n                    this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n                }\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.text = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLText(this, value);\n            this.onData(this.writer.text(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.cdata = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLCData(this, value);\n            this.onData(this.writer.cdata(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.comment = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLComment(this, value);\n            this.onData(this.writer.comment(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.raw = function(value) {\n            var node;\n            this.openCurrent();\n            node = new XMLRaw(this, value);\n            this.onData(this.writer.raw(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.instruction = function(target, value) {\n            var i, insTarget, insValue, len, node;\n            this.openCurrent();\n            if (target != null) {\n                target = getValue(target);\n            }\n            if (value != null) {\n                value = getValue(value);\n            }\n            if (Array.isArray(target)) {\n                for(i = 0, len = target.length; i < len; i++){\n                    insTarget = target[i];\n                    this.instruction(insTarget);\n                }\n            } else if (isObject(target)) {\n                for(insTarget in target){\n                    if (!hasProp.call(target, insTarget)) continue;\n                    insValue = target[insTarget];\n                    this.instruction(insTarget, insValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                node = new XMLProcessingInstruction(this, target, value);\n                this.onData(this.writer.processingInstruction(node, this.currentLevel + 1), this.currentLevel + 1);\n            }\n            return this;\n        };\n        XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n            var node;\n            this.openCurrent();\n            if (this.documentStarted) {\n                throw new Error(\"declaration() must be the first node.\");\n            }\n            node = new XMLDeclaration(this, version, encoding, standalone);\n            this.onData(this.writer.declaration(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n            this.openCurrent();\n            if (root == null) {\n                throw new Error(\"Missing root node name.\");\n            }\n            if (this.root) {\n                throw new Error(\"dtd() must come before the root node.\");\n            }\n            this.currentNode = new XMLDocType(this, pubID, sysID);\n            this.currentNode.rootNodeName = root;\n            this.currentNode.children = false;\n            this.currentLevel++;\n            this.openTags[this.currentLevel] = this.currentNode;\n            return this;\n        };\n        XMLDocumentCB.prototype.dtdElement = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDElement(this, name, value);\n            this.onData(this.writer.dtdElement(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n            this.onData(this.writer.dtdAttList(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.entity = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDEntity(this, false, name, value);\n            this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.pEntity = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDEntity(this, true, name, value);\n            this.onData(this.writer.dtdEntity(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.notation = function(name, value) {\n            var node;\n            this.openCurrent();\n            node = new XMLDTDNotation(this, name, value);\n            this.onData(this.writer.dtdNotation(node, this.currentLevel + 1), this.currentLevel + 1);\n            return this;\n        };\n        XMLDocumentCB.prototype.up = function() {\n            if (this.currentLevel < 0) {\n                throw new Error(\"The document node has no parent.\");\n            }\n            if (this.currentNode) {\n                if (this.currentNode.children) {\n                    this.closeNode(this.currentNode);\n                } else {\n                    this.openNode(this.currentNode);\n                }\n                this.currentNode = null;\n            } else {\n                this.closeNode(this.openTags[this.currentLevel]);\n            }\n            delete this.openTags[this.currentLevel];\n            this.currentLevel--;\n            return this;\n        };\n        XMLDocumentCB.prototype.end = function() {\n            while(this.currentLevel >= 0){\n                this.up();\n            }\n            return this.onEnd();\n        };\n        XMLDocumentCB.prototype.openCurrent = function() {\n            if (this.currentNode) {\n                this.currentNode.children = true;\n                return this.openNode(this.currentNode);\n            }\n        };\n        XMLDocumentCB.prototype.openNode = function(node) {\n            if (!node.isOpen) {\n                if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n                    this.root = node;\n                }\n                this.onData(this.writer.openNode(node, this.currentLevel), this.currentLevel);\n                return node.isOpen = true;\n            }\n        };\n        XMLDocumentCB.prototype.closeNode = function(node) {\n            if (!node.isClosed) {\n                this.onData(this.writer.closeNode(node, this.currentLevel), this.currentLevel);\n                return node.isClosed = true;\n            }\n        };\n        XMLDocumentCB.prototype.onData = function(chunk, level) {\n            this.documentStarted = true;\n            return this.onDataCallback(chunk, level + 1);\n        };\n        XMLDocumentCB.prototype.onEnd = function() {\n            this.documentCompleted = true;\n            return this.onEndCallback();\n        };\n        XMLDocumentCB.prototype.debugInfo = function(name) {\n            if (name == null) {\n                return \"\";\n            } else {\n                return \"node: <\" + name + \">\";\n            }\n        };\n        XMLDocumentCB.prototype.ele = function() {\n            return this.element.apply(this, arguments);\n        };\n        XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.txt = function(value) {\n            return this.text(value);\n        };\n        XMLDocumentCB.prototype.dat = function(value) {\n            return this.cdata(value);\n        };\n        XMLDocumentCB.prototype.com = function(value) {\n            return this.comment(value);\n        };\n        XMLDocumentCB.prototype.ins = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n            return this.declaration(version, encoding, standalone);\n        };\n        XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n            return this.doctype(root, pubID, sysID);\n        };\n        XMLDocumentCB.prototype.e = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.n = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLDocumentCB.prototype.t = function(value) {\n            return this.text(value);\n        };\n        XMLDocumentCB.prototype.d = function(value) {\n            return this.cdata(value);\n        };\n        XMLDocumentCB.prototype.c = function(value) {\n            return this.comment(value);\n        };\n        XMLDocumentCB.prototype.r = function(value) {\n            return this.raw(value);\n        };\n        XMLDocumentCB.prototype.i = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLDocumentCB.prototype.att = function() {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.attList.apply(this, arguments);\n            } else {\n                return this.attribute.apply(this, arguments);\n            }\n        };\n        XMLDocumentCB.prototype.a = function() {\n            if (this.currentNode && this.currentNode instanceof XMLDocType) {\n                return this.attList.apply(this, arguments);\n            } else {\n                return this.attribute.apply(this, arguments);\n            }\n        };\n        XMLDocumentCB.prototype.ent = function(name, value) {\n            return this.entity(name, value);\n        };\n        XMLDocumentCB.prototype.pent = function(name, value) {\n            return this.pEntity(name, value);\n        };\n        XMLDocumentCB.prototype.not = function(name, value) {\n            return this.notation(name, value);\n        };\n        return XMLDocumentCB;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDocumentCB.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLDummy.js":
/*!*************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLDummy.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDummy, XMLNode, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLDummy = function(superClass) {\n        extend(XMLDummy, superClass);\n        function XMLDummy(parent) {\n            XMLDummy.__super__.constructor.call(this, parent);\n            this.isDummy = true;\n        }\n        XMLDummy.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLDummy.prototype.toString = function(options) {\n            return \"\";\n        };\n        return XMLDummy;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRHVtbXkuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLFVBQVVDLFNBQ1pDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLFVBQVVZLG1CQUFPQSxDQUFDO0lBRWxCQyxPQUFPQyxPQUFPLEdBQUdmLFdBQVcsU0FBVWdCLFVBQVU7UUFDOUNkLE9BQU9GLFVBQVVnQjtRQUVqQixTQUFTaEIsU0FBU0ksTUFBTTtZQUN0QkosU0FBU1csU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzFDLElBQUksQ0FBQ2EsT0FBTyxHQUFHO1FBQ2pCO1FBRUFqQixTQUFTVSxTQUFTLENBQUNRLEtBQUssR0FBRztZQUN6QixPQUFPQyxPQUFPQyxNQUFNLENBQUMsSUFBSTtRQUMzQjtRQUVBcEIsU0FBU1UsU0FBUyxDQUFDVyxRQUFRLEdBQUcsU0FBU0MsT0FBTztZQUM1QyxPQUFPO1FBQ1Q7UUFFQSxPQUFPdEI7SUFFVCxFQUFHQztBQUVMLEdBQUdNLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxEdW1teS5qcz8wZDBlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEdW1teSwgWE1MTm9kZSxcbiAgICBleHRlbmQgPSBmdW5jdGlvbihjaGlsZCwgcGFyZW50KSB7IGZvciAodmFyIGtleSBpbiBwYXJlbnQpIHsgaWYgKGhhc1Byb3AuY2FsbChwYXJlbnQsIGtleSkpIGNoaWxkW2tleV0gPSBwYXJlbnRba2V5XTsgfSBmdW5jdGlvbiBjdG9yKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7IH0gY3Rvci5wcm90b3R5cGUgPSBwYXJlbnQucHJvdG90eXBlOyBjaGlsZC5wcm90b3R5cGUgPSBuZXcgY3RvcigpOyBjaGlsZC5fX3N1cGVyX18gPSBwYXJlbnQucHJvdG90eXBlOyByZXR1cm4gY2hpbGQ7IH0sXG4gICAgaGFzUHJvcCA9IHt9Lmhhc093blByb3BlcnR5O1xuXG4gIFhNTE5vZGUgPSByZXF1aXJlKCcuL1hNTE5vZGUnKTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTER1bW15ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRHVtbXksIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MRHVtbXkocGFyZW50KSB7XG4gICAgICBYTUxEdW1teS5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgdGhpcy5pc0R1bW15ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBYTUxEdW1teS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxEdW1teS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxEdW1teTtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEdW1teSIsIlhNTE5vZGUiLCJleHRlbmQiLCJjaGlsZCIsInBhcmVudCIsImtleSIsImhhc1Byb3AiLCJjYWxsIiwiY3RvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX19zdXBlcl9fIiwiaGFzT3duUHJvcGVydHkiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN1cGVyQ2xhc3MiLCJpc0R1bW15IiwiY2xvbmUiLCJPYmplY3QiLCJjcmVhdGUiLCJ0b1N0cmluZyIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLDummy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js":
/*!***************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLElement.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLAttribute, XMLElement, XMLNode, getValue, isFunction, isObject, ref, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    XMLAttribute = __webpack_require__(/*! ./XMLAttribute */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLAttribute.js\");\n    module.exports = XMLElement = function(superClass) {\n        extend(XMLElement, superClass);\n        function XMLElement(parent, name, attributes) {\n            XMLElement.__super__.constructor.call(this, parent);\n            if (name == null) {\n                throw new Error(\"Missing element name. \" + this.debugInfo());\n            }\n            this.name = this.stringify.eleName(name);\n            this.attributes = {};\n            if (attributes != null) {\n                this.attribute(attributes);\n            }\n            if (parent.isDocument) {\n                this.isRoot = true;\n                this.documentObject = parent;\n                parent.rootObject = this;\n            }\n        }\n        XMLElement.prototype.clone = function() {\n            var att, attName, clonedSelf, ref1;\n            clonedSelf = Object.create(this);\n            if (clonedSelf.isRoot) {\n                clonedSelf.documentObject = null;\n            }\n            clonedSelf.attributes = {};\n            ref1 = this.attributes;\n            for(attName in ref1){\n                if (!hasProp.call(ref1, attName)) continue;\n                att = ref1[attName];\n                clonedSelf.attributes[attName] = att.clone();\n            }\n            clonedSelf.children = [];\n            this.children.forEach(function(child) {\n                var clonedChild;\n                clonedChild = child.clone();\n                clonedChild.parent = clonedSelf;\n                return clonedSelf.children.push(clonedChild);\n            });\n            return clonedSelf;\n        };\n        XMLElement.prototype.attribute = function(name, value) {\n            var attName, attValue;\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (isObject(name)) {\n                for(attName in name){\n                    if (!hasProp.call(name, attName)) continue;\n                    attValue = name[attName];\n                    this.attribute(attName, attValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                if (!this.options.skipNullAttributes || value != null) {\n                    this.attributes[name] = new XMLAttribute(this, name, value);\n                }\n            }\n            return this;\n        };\n        XMLElement.prototype.removeAttribute = function(name) {\n            var attName, i, len;\n            if (name == null) {\n                throw new Error(\"Missing attribute name. \" + this.debugInfo());\n            }\n            name = getValue(name);\n            if (Array.isArray(name)) {\n                for(i = 0, len = name.length; i < len; i++){\n                    attName = name[i];\n                    delete this.attributes[attName];\n                }\n            } else {\n                delete this.attributes[name];\n            }\n            return this;\n        };\n        XMLElement.prototype.toString = function(options) {\n            return this.options.writer.set(options).element(this);\n        };\n        XMLElement.prototype.att = function(name, value) {\n            return this.attribute(name, value);\n        };\n        XMLElement.prototype.a = function(name, value) {\n            return this.attribute(name, value);\n        };\n        return XMLElement;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MRWxlbWVudC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsY0FBY0MsWUFBWUMsU0FBU0MsVUFBVUMsWUFBWUMsVUFBVUMsS0FDckVDLFNBQVMsU0FBU0MsS0FBSyxFQUFFQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxPQUFPRCxPQUFRO1lBQUUsSUFBSUUsUUFBUUMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNRixLQUFLLENBQUNFLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7UUFBRSxTQUFTRztZQUFTLElBQUksQ0FBQ0MsV0FBVyxHQUFHTjtRQUFPO1FBQUVLLEtBQUtFLFNBQVMsR0FBR04sT0FBT00sU0FBUztRQUFFUCxNQUFNTyxTQUFTLEdBQUcsSUFBSUY7UUFBUUwsTUFBTVEsU0FBUyxHQUFHUCxPQUFPTSxTQUFTO1FBQUUsT0FBT1A7SUFBTyxHQUN6UkcsVUFBVSxDQUFDLEVBQUVNLGNBQWM7SUFFN0JYLE1BQU1ZLG1CQUFPQSxDQUFDLG9FQUFjYixXQUFXQyxJQUFJRCxRQUFRLEVBQUVELGFBQWFFLElBQUlGLFVBQVUsRUFBRUQsV0FBV0csSUFBSUgsUUFBUTtJQUV6R0QsVUFBVWdCLG1CQUFPQSxDQUFDO0lBRWxCbEIsZUFBZWtCLG1CQUFPQSxDQUFDO0lBRXZCQyxPQUFPQyxPQUFPLEdBQUduQixhQUFhLFNBQVVvQixVQUFVO1FBQ2hEZCxPQUFPTixZQUFZb0I7UUFFbkIsU0FBU3BCLFdBQVdRLE1BQU0sRUFBRWEsSUFBSSxFQUFFQyxVQUFVO1lBQzFDdEIsV0FBV2UsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzVDLElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJRSxNQUFNLDJCQUEyQixJQUFJLENBQUNDLFNBQVM7WUFDM0Q7WUFDQSxJQUFJLENBQUNILElBQUksR0FBRyxJQUFJLENBQUNJLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDTDtZQUNuQyxJQUFJLENBQUNDLFVBQVUsR0FBRyxDQUFDO1lBQ25CLElBQUlBLGNBQWMsTUFBTTtnQkFDdEIsSUFBSSxDQUFDSyxTQUFTLENBQUNMO1lBQ2pCO1lBQ0EsSUFBSWQsT0FBT29CLFVBQVUsRUFBRTtnQkFDckIsSUFBSSxDQUFDQyxNQUFNLEdBQUc7Z0JBQ2QsSUFBSSxDQUFDQyxjQUFjLEdBQUd0QjtnQkFDdEJBLE9BQU91QixVQUFVLEdBQUcsSUFBSTtZQUMxQjtRQUNGO1FBRUEvQixXQUFXYyxTQUFTLENBQUNrQixLQUFLLEdBQUc7WUFDM0IsSUFBSUMsS0FBS0MsU0FBU0MsWUFBWUM7WUFDOUJELGFBQWFFLE9BQU9DLE1BQU0sQ0FBQyxJQUFJO1lBQy9CLElBQUlILFdBQVdOLE1BQU0sRUFBRTtnQkFDckJNLFdBQVdMLGNBQWMsR0FBRztZQUM5QjtZQUNBSyxXQUFXYixVQUFVLEdBQUcsQ0FBQztZQUN6QmMsT0FBTyxJQUFJLENBQUNkLFVBQVU7WUFDdEIsSUFBS1ksV0FBV0UsS0FBTTtnQkFDcEIsSUFBSSxDQUFDMUIsUUFBUUMsSUFBSSxDQUFDeUIsTUFBTUYsVUFBVTtnQkFDbENELE1BQU1HLElBQUksQ0FBQ0YsUUFBUTtnQkFDbkJDLFdBQVdiLFVBQVUsQ0FBQ1ksUUFBUSxHQUFHRCxJQUFJRCxLQUFLO1lBQzVDO1lBQ0FHLFdBQVdJLFFBQVEsR0FBRyxFQUFFO1lBQ3hCLElBQUksQ0FBQ0EsUUFBUSxDQUFDQyxPQUFPLENBQUMsU0FBU2pDLEtBQUs7Z0JBQ2xDLElBQUlrQztnQkFDSkEsY0FBY2xDLE1BQU15QixLQUFLO2dCQUN6QlMsWUFBWWpDLE1BQU0sR0FBRzJCO2dCQUNyQixPQUFPQSxXQUFXSSxRQUFRLENBQUNHLElBQUksQ0FBQ0Q7WUFDbEM7WUFDQSxPQUFPTjtRQUNUO1FBRUFuQyxXQUFXYyxTQUFTLENBQUNhLFNBQVMsR0FBRyxTQUFTTixJQUFJLEVBQUVzQixLQUFLO1lBQ25ELElBQUlULFNBQVNVO1lBQ2IsSUFBSXZCLFFBQVEsTUFBTTtnQkFDaEJBLE9BQU9uQixTQUFTbUI7WUFDbEI7WUFDQSxJQUFJakIsU0FBU2lCLE9BQU87Z0JBQ2xCLElBQUthLFdBQVdiLEtBQU07b0JBQ3BCLElBQUksQ0FBQ1gsUUFBUUMsSUFBSSxDQUFDVSxNQUFNYSxVQUFVO29CQUNsQ1UsV0FBV3ZCLElBQUksQ0FBQ2EsUUFBUTtvQkFDeEIsSUFBSSxDQUFDUCxTQUFTLENBQUNPLFNBQVNVO2dCQUMxQjtZQUNGLE9BQU87Z0JBQ0wsSUFBSXpDLFdBQVd3QyxRQUFRO29CQUNyQkEsUUFBUUEsTUFBTUUsS0FBSztnQkFDckI7Z0JBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxrQkFBa0IsSUFBS0osU0FBUyxNQUFPO29CQUN2RCxJQUFJLENBQUNyQixVQUFVLENBQUNELEtBQUssR0FBRyxJQUFJdEIsYUFBYSxJQUFJLEVBQUVzQixNQUFNc0I7Z0JBQ3ZEO1lBQ0Y7WUFDQSxPQUFPLElBQUk7UUFDYjtRQUVBM0MsV0FBV2MsU0FBUyxDQUFDa0MsZUFBZSxHQUFHLFNBQVMzQixJQUFJO1lBQ2xELElBQUlhLFNBQVNlLEdBQUdDO1lBQ2hCLElBQUk3QixRQUFRLE1BQU07Z0JBQ2hCLE1BQU0sSUFBSUUsTUFBTSw2QkFBNkIsSUFBSSxDQUFDQyxTQUFTO1lBQzdEO1lBQ0FILE9BQU9uQixTQUFTbUI7WUFDaEIsSUFBSThCLE1BQU1DLE9BQU8sQ0FBQy9CLE9BQU87Z0JBQ3ZCLElBQUs0QixJQUFJLEdBQUdDLE1BQU03QixLQUFLZ0MsTUFBTSxFQUFFSixJQUFJQyxLQUFLRCxJQUFLO29CQUMzQ2YsVUFBVWIsSUFBSSxDQUFDNEIsRUFBRTtvQkFDakIsT0FBTyxJQUFJLENBQUMzQixVQUFVLENBQUNZLFFBQVE7Z0JBQ2pDO1lBQ0YsT0FBTztnQkFDTCxPQUFPLElBQUksQ0FBQ1osVUFBVSxDQUFDRCxLQUFLO1lBQzlCO1lBQ0EsT0FBTyxJQUFJO1FBQ2I7UUFFQXJCLFdBQVdjLFNBQVMsQ0FBQ3dDLFFBQVEsR0FBRyxTQUFTUixPQUFPO1lBQzlDLE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNTLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDVixTQUFTVyxPQUFPLENBQUMsSUFBSTtRQUN0RDtRQUVBekQsV0FBV2MsU0FBUyxDQUFDbUIsR0FBRyxHQUFHLFNBQVNaLElBQUksRUFBRXNCLEtBQUs7WUFDN0MsT0FBTyxJQUFJLENBQUNoQixTQUFTLENBQUNOLE1BQU1zQjtRQUM5QjtRQUVBM0MsV0FBV2MsU0FBUyxDQUFDNEMsQ0FBQyxHQUFHLFNBQVNyQyxJQUFJLEVBQUVzQixLQUFLO1lBQzNDLE9BQU8sSUFBSSxDQUFDaEIsU0FBUyxDQUFDTixNQUFNc0I7UUFDOUI7UUFFQSxPQUFPM0M7SUFFVCxFQUFHQztBQUVMLEdBQUdVLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxFbGVtZW50LmpzP2U5NjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTEF0dHJpYnV0ZSwgWE1MRWxlbWVudCwgWE1MTm9kZSwgZ2V0VmFsdWUsIGlzRnVuY3Rpb24sIGlzT2JqZWN0LCByZWYsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICByZWYgPSByZXF1aXJlKCcuL1V0aWxpdHknKSwgaXNPYmplY3QgPSByZWYuaXNPYmplY3QsIGlzRnVuY3Rpb24gPSByZWYuaXNGdW5jdGlvbiwgZ2V0VmFsdWUgPSByZWYuZ2V0VmFsdWU7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIFhNTEF0dHJpYnV0ZSA9IHJlcXVpcmUoJy4vWE1MQXR0cmlidXRlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxFbGVtZW50ID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MRWxlbWVudCwgc3VwZXJDbGFzcyk7XG5cbiAgICBmdW5jdGlvbiBYTUxFbGVtZW50KHBhcmVudCwgbmFtZSwgYXR0cmlidXRlcykge1xuICAgICAgWE1MRWxlbWVudC5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGVsZW1lbnQgbmFtZS4gXCIgKyB0aGlzLmRlYnVnSW5mbygpKTtcbiAgICAgIH1cbiAgICAgIHRoaXMubmFtZSA9IHRoaXMuc3RyaW5naWZ5LmVsZU5hbWUobmFtZSk7XG4gICAgICB0aGlzLmF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgIGlmIChhdHRyaWJ1dGVzICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGUoYXR0cmlidXRlcyk7XG4gICAgICB9XG4gICAgICBpZiAocGFyZW50LmlzRG9jdW1lbnQpIHtcbiAgICAgICAgdGhpcy5pc1Jvb3QgPSB0cnVlO1xuICAgICAgICB0aGlzLmRvY3VtZW50T2JqZWN0ID0gcGFyZW50O1xuICAgICAgICBwYXJlbnQucm9vdE9iamVjdCA9IHRoaXM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgWE1MRWxlbWVudC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBhdHQsIGF0dE5hbWUsIGNsb25lZFNlbGYsIHJlZjE7XG4gICAgICBjbG9uZWRTZWxmID0gT2JqZWN0LmNyZWF0ZSh0aGlzKTtcbiAgICAgIGlmIChjbG9uZWRTZWxmLmlzUm9vdCkge1xuICAgICAgICBjbG9uZWRTZWxmLmRvY3VtZW50T2JqZWN0ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIGNsb25lZFNlbGYuYXR0cmlidXRlcyA9IHt9O1xuICAgICAgcmVmMSA9IHRoaXMuYXR0cmlidXRlcztcbiAgICAgIGZvciAoYXR0TmFtZSBpbiByZWYxKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZjEsIGF0dE5hbWUpKSBjb250aW51ZTtcbiAgICAgICAgYXR0ID0gcmVmMVthdHROYW1lXTtcbiAgICAgICAgY2xvbmVkU2VsZi5hdHRyaWJ1dGVzW2F0dE5hbWVdID0gYXR0LmNsb25lKCk7XG4gICAgICB9XG4gICAgICBjbG9uZWRTZWxmLmNoaWxkcmVuID0gW107XG4gICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgdmFyIGNsb25lZENoaWxkO1xuICAgICAgICBjbG9uZWRDaGlsZCA9IGNoaWxkLmNsb25lKCk7XG4gICAgICAgIGNsb25lZENoaWxkLnBhcmVudCA9IGNsb25lZFNlbGY7XG4gICAgICAgIHJldHVybiBjbG9uZWRTZWxmLmNoaWxkcmVuLnB1c2goY2xvbmVkQ2hpbGQpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY2xvbmVkU2VsZjtcbiAgICB9O1xuXG4gICAgWE1MRWxlbWVudC5wcm90b3R5cGUuYXR0cmlidXRlID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIHZhciBhdHROYW1lLCBhdHRWYWx1ZTtcbiAgICAgIGlmIChuYW1lICE9IG51bGwpIHtcbiAgICAgICAgbmFtZSA9IGdldFZhbHVlKG5hbWUpO1xuICAgICAgfVxuICAgICAgaWYgKGlzT2JqZWN0KG5hbWUpKSB7XG4gICAgICAgIGZvciAoYXR0TmFtZSBpbiBuYW1lKSB7XG4gICAgICAgICAgaWYgKCFoYXNQcm9wLmNhbGwobmFtZSwgYXR0TmFtZSkpIGNvbnRpbnVlO1xuICAgICAgICAgIGF0dFZhbHVlID0gbmFtZVthdHROYW1lXTtcbiAgICAgICAgICB0aGlzLmF0dHJpYnV0ZShhdHROYW1lLCBhdHRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpc0Z1bmN0aW9uKHZhbHVlKSkge1xuICAgICAgICAgIHZhbHVlID0gdmFsdWUuYXBwbHkoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMub3B0aW9ucy5za2lwTnVsbEF0dHJpYnV0ZXMgfHwgKHZhbHVlICE9IG51bGwpKSB7XG4gICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW25hbWVdID0gbmV3IFhNTEF0dHJpYnV0ZSh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG5cbiAgICBYTUxFbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGUgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgICB2YXIgYXR0TmFtZSwgaSwgbGVuO1xuICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGF0dHJpYnV0ZSBuYW1lLiBcIiArIHRoaXMuZGVidWdJbmZvKCkpO1xuICAgICAgfVxuICAgICAgbmFtZSA9IGdldFZhbHVlKG5hbWUpO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkobmFtZSkpIHtcbiAgICAgICAgZm9yIChpID0gMCwgbGVuID0gbmFtZS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgIGF0dE5hbWUgPSBuYW1lW2ldO1xuICAgICAgICAgIGRlbGV0ZSB0aGlzLmF0dHJpYnV0ZXNbYXR0TmFtZV07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLmF0dHJpYnV0ZXNbbmFtZV07XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4gICAgWE1MRWxlbWVudC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLndyaXRlci5zZXQob3B0aW9ucykuZWxlbWVudCh0aGlzKTtcbiAgICB9O1xuXG4gICAgWE1MRWxlbWVudC5wcm90b3R5cGUuYXR0ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gICAgfTtcblxuICAgIFhNTEVsZW1lbnQucHJvdG90eXBlLmEgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTEVsZW1lbnQ7XG5cbiAgfSkoWE1MTm9kZSk7XG5cbn0pLmNhbGwodGhpcyk7XG4iXSwibmFtZXMiOlsiWE1MQXR0cmlidXRlIiwiWE1MRWxlbWVudCIsIlhNTE5vZGUiLCJnZXRWYWx1ZSIsImlzRnVuY3Rpb24iLCJpc09iamVjdCIsInJlZiIsImV4dGVuZCIsImNoaWxkIiwicGFyZW50Iiwia2V5IiwiaGFzUHJvcCIsImNhbGwiLCJjdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX3N1cGVyX18iLCJoYXNPd25Qcm9wZXJ0eSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3VwZXJDbGFzcyIsIm5hbWUiLCJhdHRyaWJ1dGVzIiwiRXJyb3IiLCJkZWJ1Z0luZm8iLCJzdHJpbmdpZnkiLCJlbGVOYW1lIiwiYXR0cmlidXRlIiwiaXNEb2N1bWVudCIsImlzUm9vdCIsImRvY3VtZW50T2JqZWN0Iiwicm9vdE9iamVjdCIsImNsb25lIiwiYXR0IiwiYXR0TmFtZSIsImNsb25lZFNlbGYiLCJyZWYxIiwiT2JqZWN0IiwiY3JlYXRlIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY2xvbmVkQ2hpbGQiLCJwdXNoIiwidmFsdWUiLCJhdHRWYWx1ZSIsImFwcGx5Iiwib3B0aW9ucyIsInNraXBOdWxsQXR0cmlidXRlcyIsInJlbW92ZUF0dHJpYnV0ZSIsImkiLCJsZW4iLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJ0b1N0cmluZyIsIndyaXRlciIsInNldCIsImVsZW1lbnQiLCJhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js":
/*!************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLNode.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref, hasProp = {}.hasOwnProperty;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\"), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty, getValue = ref.getValue;\n    XMLElement = null;\n    XMLCData = null;\n    XMLComment = null;\n    XMLDeclaration = null;\n    XMLDocType = null;\n    XMLRaw = null;\n    XMLText = null;\n    XMLProcessingInstruction = null;\n    XMLDummy = null;\n    module.exports = XMLNode = function() {\n        function XMLNode(parent) {\n            this.parent = parent;\n            if (this.parent) {\n                this.options = this.parent.options;\n                this.stringify = this.parent.stringify;\n            }\n            this.children = [];\n            if (!XMLElement) {\n                XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js\");\n                XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js\");\n                XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js\");\n                XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n                XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js\");\n                XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js\");\n                XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLText.js\");\n                XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n                XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDummy.js\");\n            }\n        }\n        XMLNode.prototype.element = function(name, attributes, text) {\n            var childNode, item, j, k, key, lastChild, len, len1, ref1, ref2, val;\n            lastChild = null;\n            if (attributes === null && text == null) {\n                ref1 = [\n                    {},\n                    null\n                ], attributes = ref1[0], text = ref1[1];\n            }\n            if (attributes == null) {\n                attributes = {};\n            }\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref2 = [\n                    attributes,\n                    text\n                ], text = ref2[0], attributes = ref2[1];\n            }\n            if (name != null) {\n                name = getValue(name);\n            }\n            if (Array.isArray(name)) {\n                for(j = 0, len = name.length; j < len; j++){\n                    item = name[j];\n                    lastChild = this.element(item);\n                }\n            } else if (isFunction(name)) {\n                lastChild = this.element(name.apply());\n            } else if (isObject(name)) {\n                for(key in name){\n                    if (!hasProp.call(name, key)) continue;\n                    val = name[key];\n                    if (isFunction(val)) {\n                        val = val.apply();\n                    }\n                    if (isObject(val) && isEmpty(val)) {\n                        val = null;\n                    }\n                    if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n                        lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n                    } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n                        for(k = 0, len1 = val.length; k < len1; k++){\n                            item = val[k];\n                            childNode = {};\n                            childNode[key] = item;\n                            lastChild = this.element(childNode);\n                        }\n                    } else if (isObject(val)) {\n                        lastChild = this.element(key);\n                        lastChild.element(val);\n                    } else {\n                        lastChild = this.element(key, val);\n                    }\n                }\n            } else if (this.options.skipNullNodes && text === null) {\n                lastChild = this.dummy();\n            } else {\n                if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n                    lastChild = this.text(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n                    lastChild = this.cdata(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n                    lastChild = this.comment(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n                    lastChild = this.raw(text);\n                } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n                    lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n                } else {\n                    lastChild = this.node(name, attributes, text);\n                }\n            }\n            if (lastChild == null) {\n                throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n            }\n            return lastChild;\n        };\n        XMLNode.prototype.insertBefore = function(name, attributes, text) {\n            var child, i, removed;\n            if (this.isRoot) {\n                throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n            }\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.element(name, attributes, text);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return child;\n        };\n        XMLNode.prototype.insertAfter = function(name, attributes, text) {\n            var child, i, removed;\n            if (this.isRoot) {\n                throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n            }\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.element(name, attributes, text);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return child;\n        };\n        XMLNode.prototype.remove = function() {\n            var i, ref1;\n            if (this.isRoot) {\n                throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n            }\n            i = this.parent.children.indexOf(this);\n            [].splice.apply(this.parent.children, [\n                i,\n                i - i + 1\n            ].concat(ref1 = [])), ref1;\n            return this.parent;\n        };\n        XMLNode.prototype.node = function(name, attributes, text) {\n            var child, ref1;\n            if (name != null) {\n                name = getValue(name);\n            }\n            attributes || (attributes = {});\n            attributes = getValue(attributes);\n            if (!isObject(attributes)) {\n                ref1 = [\n                    attributes,\n                    text\n                ], text = ref1[0], attributes = ref1[1];\n            }\n            child = new XMLElement(this, name, attributes);\n            if (text != null) {\n                child.text(text);\n            }\n            this.children.push(child);\n            return child;\n        };\n        XMLNode.prototype.text = function(value) {\n            var child;\n            child = new XMLText(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.cdata = function(value) {\n            var child;\n            child = new XMLCData(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.comment = function(value) {\n            var child;\n            child = new XMLComment(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.commentBefore = function(value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.comment(value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.commentAfter = function(value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.comment(value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.raw = function(value) {\n            var child;\n            child = new XMLRaw(this, value);\n            this.children.push(child);\n            return this;\n        };\n        XMLNode.prototype.dummy = function() {\n            var child;\n            child = new XMLDummy(this);\n            this.children.push(child);\n            return child;\n        };\n        XMLNode.prototype.instruction = function(target, value) {\n            var insTarget, insValue, instruction, j, len;\n            if (target != null) {\n                target = getValue(target);\n            }\n            if (value != null) {\n                value = getValue(value);\n            }\n            if (Array.isArray(target)) {\n                for(j = 0, len = target.length; j < len; j++){\n                    insTarget = target[j];\n                    this.instruction(insTarget);\n                }\n            } else if (isObject(target)) {\n                for(insTarget in target){\n                    if (!hasProp.call(target, insTarget)) continue;\n                    insValue = target[insTarget];\n                    this.instruction(insTarget, insValue);\n                }\n            } else {\n                if (isFunction(value)) {\n                    value = value.apply();\n                }\n                instruction = new XMLProcessingInstruction(this, target, value);\n                this.children.push(instruction);\n            }\n            return this;\n        };\n        XMLNode.prototype.instructionBefore = function(target, value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i);\n            child = this.parent.instruction(target, value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.instructionAfter = function(target, value) {\n            var child, i, removed;\n            i = this.parent.children.indexOf(this);\n            removed = this.parent.children.splice(i + 1);\n            child = this.parent.instruction(target, value);\n            Array.prototype.push.apply(this.parent.children, removed);\n            return this;\n        };\n        XMLNode.prototype.declaration = function(version, encoding, standalone) {\n            var doc, xmldec;\n            doc = this.document();\n            xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n            if (doc.children[0] instanceof XMLDeclaration) {\n                doc.children[0] = xmldec;\n            } else {\n                doc.children.unshift(xmldec);\n            }\n            return doc.root() || doc;\n        };\n        XMLNode.prototype.doctype = function(pubID, sysID) {\n            var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n            doc = this.document();\n            doctype = new XMLDocType(doc, pubID, sysID);\n            ref1 = doc.children;\n            for(i = j = 0, len = ref1.length; j < len; i = ++j){\n                child = ref1[i];\n                if (child instanceof XMLDocType) {\n                    doc.children[i] = doctype;\n                    return doctype;\n                }\n            }\n            ref2 = doc.children;\n            for(i = k = 0, len1 = ref2.length; k < len1; i = ++k){\n                child = ref2[i];\n                if (child.isRoot) {\n                    doc.children.splice(i, 0, doctype);\n                    return doctype;\n                }\n            }\n            doc.children.push(doctype);\n            return doctype;\n        };\n        XMLNode.prototype.up = function() {\n            if (this.isRoot) {\n                throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n            }\n            return this.parent;\n        };\n        XMLNode.prototype.root = function() {\n            var node;\n            node = this;\n            while(node){\n                if (node.isDocument) {\n                    return node.rootObject;\n                } else if (node.isRoot) {\n                    return node;\n                } else {\n                    node = node.parent;\n                }\n            }\n        };\n        XMLNode.prototype.document = function() {\n            var node;\n            node = this;\n            while(node){\n                if (node.isDocument) {\n                    return node;\n                } else {\n                    node = node.parent;\n                }\n            }\n        };\n        XMLNode.prototype.end = function(options) {\n            return this.document().end(options);\n        };\n        XMLNode.prototype.prev = function() {\n            var i;\n            i = this.parent.children.indexOf(this);\n            while(i > 0 && this.parent.children[i - 1].isDummy){\n                i = i - 1;\n            }\n            if (i < 1) {\n                throw new Error(\"Already at the first node. \" + this.debugInfo());\n            }\n            return this.parent.children[i - 1];\n        };\n        XMLNode.prototype.next = function() {\n            var i;\n            i = this.parent.children.indexOf(this);\n            while(i < this.parent.children.length - 1 && this.parent.children[i + 1].isDummy){\n                i = i + 1;\n            }\n            if (i === -1 || i === this.parent.children.length - 1) {\n                throw new Error(\"Already at the last node. \" + this.debugInfo());\n            }\n            return this.parent.children[i + 1];\n        };\n        XMLNode.prototype.importDocument = function(doc) {\n            var clonedRoot;\n            clonedRoot = doc.root().clone();\n            clonedRoot.parent = this;\n            clonedRoot.isRoot = false;\n            this.children.push(clonedRoot);\n            return this;\n        };\n        XMLNode.prototype.debugInfo = function(name) {\n            var ref1, ref2;\n            name = name || this.name;\n            if (name == null && !((ref1 = this.parent) != null ? ref1.name : void 0)) {\n                return \"\";\n            } else if (name == null) {\n                return \"parent: <\" + this.parent.name + \">\";\n            } else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) {\n                return \"node: <\" + name + \">\";\n            } else {\n                return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n            }\n        };\n        XMLNode.prototype.ele = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLNode.prototype.nod = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLNode.prototype.txt = function(value) {\n            return this.text(value);\n        };\n        XMLNode.prototype.dat = function(value) {\n            return this.cdata(value);\n        };\n        XMLNode.prototype.com = function(value) {\n            return this.comment(value);\n        };\n        XMLNode.prototype.ins = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLNode.prototype.doc = function() {\n            return this.document();\n        };\n        XMLNode.prototype.dec = function(version, encoding, standalone) {\n            return this.declaration(version, encoding, standalone);\n        };\n        XMLNode.prototype.dtd = function(pubID, sysID) {\n            return this.doctype(pubID, sysID);\n        };\n        XMLNode.prototype.e = function(name, attributes, text) {\n            return this.element(name, attributes, text);\n        };\n        XMLNode.prototype.n = function(name, attributes, text) {\n            return this.node(name, attributes, text);\n        };\n        XMLNode.prototype.t = function(value) {\n            return this.text(value);\n        };\n        XMLNode.prototype.d = function(value) {\n            return this.cdata(value);\n        };\n        XMLNode.prototype.c = function(value) {\n            return this.comment(value);\n        };\n        XMLNode.prototype.r = function(value) {\n            return this.raw(value);\n        };\n        XMLNode.prototype.i = function(target, value) {\n            return this.instruction(target, value);\n        };\n        XMLNode.prototype.u = function() {\n            return this.up();\n        };\n        XMLNode.prototype.importXMLBuilder = function(doc) {\n            return this.importDocument(doc);\n        };\n        return XMLNode;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLProcessingInstruction, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLProcessingInstruction = function(superClass) {\n        extend(XMLProcessingInstruction, superClass);\n        function XMLProcessingInstruction(parent, target, value) {\n            XMLProcessingInstruction.__super__.constructor.call(this, parent);\n            if (target == null) {\n                throw new Error(\"Missing instruction target. \" + this.debugInfo());\n            }\n            this.target = this.stringify.insTarget(target);\n            if (value) {\n                this.value = this.stringify.insValue(value);\n            }\n        }\n        XMLProcessingInstruction.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLProcessingInstruction.prototype.toString = function(options) {\n            return this.options.writer.set(options).processingInstruction(this);\n        };\n        return XMLProcessingInstruction;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxTQUFTQywwQkFDWEMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlosVUFBVWEsbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2QsMkJBQTJCLFNBQVVlLFVBQVU7UUFDOURkLE9BQU9ELDBCQUEwQmU7UUFFakMsU0FBU2YseUJBQXlCRyxNQUFNLEVBQUVhLE1BQU0sRUFBRUMsS0FBSztZQUNyRGpCLHlCQUF5QlUsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQzFELElBQUlhLFVBQVUsTUFBTTtnQkFDbEIsTUFBTSxJQUFJRSxNQUFNLGlDQUFpQyxJQUFJLENBQUNDLFNBQVM7WUFDakU7WUFDQSxJQUFJLENBQUNILE1BQU0sR0FBRyxJQUFJLENBQUNJLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDTDtZQUN2QyxJQUFJQyxPQUFPO2dCQUNULElBQUksQ0FBQ0EsS0FBSyxHQUFHLElBQUksQ0FBQ0csU0FBUyxDQUFDRSxRQUFRLENBQUNMO1lBQ3ZDO1FBQ0Y7UUFFQWpCLHlCQUF5QlMsU0FBUyxDQUFDYyxLQUFLLEdBQUc7WUFDekMsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXpCLHlCQUF5QlMsU0FBUyxDQUFDaUIsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDNUQsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNHLHFCQUFxQixDQUFDLElBQUk7UUFDcEU7UUFFQSxPQUFPOUI7SUFFVCxFQUFHRDtBQUVMLEdBQUdPLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9YTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24uanM/YzhmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgQ29mZmVlU2NyaXB0IDEuMTIuN1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgWE1MTm9kZSwgWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gKGZ1bmN0aW9uKHN1cGVyQ2xhc3MpIHtcbiAgICBleHRlbmQoWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uLCBzdXBlckNsYXNzKTtcblxuICAgIGZ1bmN0aW9uIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbihwYXJlbnQsIHRhcmdldCwgdmFsdWUpIHtcbiAgICAgIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5fX3N1cGVyX18uY29uc3RydWN0b3IuY2FsbCh0aGlzLCBwYXJlbnQpO1xuICAgICAgaWYgKHRhcmdldCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgaW5zdHJ1Y3Rpb24gdGFyZ2V0LiBcIiArIHRoaXMuZGVidWdJbmZvKCkpO1xuICAgICAgfVxuICAgICAgdGhpcy50YXJnZXQgPSB0aGlzLnN0cmluZ2lmeS5pbnNUYXJnZXQodGFyZ2V0KTtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuaW5zVmFsdWUodmFsdWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLnByb2Nlc3NpbmdJbnN0cnVjdGlvbih0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTFByb2Nlc3NpbmdJbnN0cnVjdGlvbjtcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxOb2RlIiwiWE1MUHJvY2Vzc2luZ0luc3RydWN0aW9uIiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwidGFyZ2V0IiwidmFsdWUiLCJFcnJvciIsImRlYnVnSW5mbyIsInN0cmluZ2lmeSIsImluc1RhcmdldCIsImluc1ZhbHVlIiwiY2xvbmUiLCJPYmplY3QiLCJjcmVhdGUiLCJ0b1N0cmluZyIsIm9wdGlvbnMiLCJ3cml0ZXIiLCJzZXQiLCJwcm9jZXNzaW5nSW5zdHJ1Y3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js":
/*!***********************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLRaw.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLRaw, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLRaw = function(superClass) {\n        extend(XMLRaw, superClass);\n        function XMLRaw(parent, text) {\n            XMLRaw.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing raw text. \" + this.debugInfo());\n            }\n            this.value = this.stringify.raw(text);\n        }\n        XMLRaw.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLRaw.prototype.toString = function(options) {\n            return this.options.writer.set(options).raw(this);\n        };\n        return XMLRaw;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MUmF3LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxtQ0FBbUM7QUFDbEM7SUFDQyxJQUFJQSxTQUFTQyxRQUNYQyxTQUFTLFNBQVNDLEtBQUssRUFBRUMsTUFBTTtRQUFJLElBQUssSUFBSUMsT0FBT0QsT0FBUTtZQUFFLElBQUlFLFFBQVFDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTUYsS0FBSyxDQUFDRSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO1FBQUUsU0FBU0c7WUFBUyxJQUFJLENBQUNDLFdBQVcsR0FBR047UUFBTztRQUFFSyxLQUFLRSxTQUFTLEdBQUdOLE9BQU9NLFNBQVM7UUFBRVAsTUFBTU8sU0FBUyxHQUFHLElBQUlGO1FBQVFMLE1BQU1RLFNBQVMsR0FBR1AsT0FBT00sU0FBUztRQUFFLE9BQU9QO0lBQU8sR0FDelJHLFVBQVUsQ0FBQyxFQUFFTSxjQUFjO0lBRTdCWixVQUFVYSxtQkFBT0EsQ0FBQztJQUVsQkMsT0FBT0MsT0FBTyxHQUFHZCxTQUFTLFNBQVVlLFVBQVU7UUFDNUNkLE9BQU9ELFFBQVFlO1FBRWYsU0FBU2YsT0FBT0csTUFBTSxFQUFFYSxJQUFJO1lBQzFCaEIsT0FBT1UsU0FBUyxDQUFDRixXQUFXLENBQUNGLElBQUksQ0FBQyxJQUFJLEVBQUVIO1lBQ3hDLElBQUlhLFFBQVEsTUFBTTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QixJQUFJLENBQUNDLFNBQVM7WUFDdkQ7WUFDQSxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDTDtRQUNsQztRQUVBaEIsT0FBT1MsU0FBUyxDQUFDYSxLQUFLLEdBQUc7WUFDdkIsT0FBT0MsT0FBT0MsTUFBTSxDQUFDLElBQUk7UUFDM0I7UUFFQXhCLE9BQU9TLFNBQVMsQ0FBQ2dCLFFBQVEsR0FBRyxTQUFTQyxPQUFPO1lBQzFDLE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDRixTQUFTTCxHQUFHLENBQUMsSUFBSTtRQUNsRDtRQUVBLE9BQU9yQjtJQUVULEVBQUdEO0FBRUwsR0FBR08sSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFJhdy5qcz9kMzI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxOb2RlLCBYTUxSYXcsXG4gICAgZXh0ZW5kID0gZnVuY3Rpb24oY2hpbGQsIHBhcmVudCkgeyBmb3IgKHZhciBrZXkgaW4gcGFyZW50KSB7IGlmIChoYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH0gZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9IGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3IoKTsgY2hpbGQuX19zdXBlcl9fID0gcGFyZW50LnByb3RvdHlwZTsgcmV0dXJuIGNoaWxkOyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBYTUxOb2RlID0gcmVxdWlyZSgnLi9YTUxOb2RlJyk7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBYTUxSYXcgPSAoZnVuY3Rpb24oc3VwZXJDbGFzcykge1xuICAgIGV4dGVuZChYTUxSYXcsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MUmF3KHBhcmVudCwgdGV4dCkge1xuICAgICAgWE1MUmF3Ll9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsIHBhcmVudCk7XG4gICAgICBpZiAodGV4dCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgcmF3IHRleHQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oKSk7XG4gICAgICB9XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkucmF3KHRleHQpO1xuICAgIH1cblxuICAgIFhNTFJhdy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QuY3JlYXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICBYTUxSYXcucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLnJhdyh0aGlzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFhNTFJhdztcblxuICB9KShYTUxOb2RlKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxOb2RlIiwiWE1MUmF3IiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwidGV4dCIsIkVycm9yIiwiZGVidWdJbmZvIiwidmFsdWUiLCJzdHJpbmdpZnkiLCJyYXciLCJjbG9uZSIsIk9iamVjdCIsImNyZWF0ZSIsInRvU3RyaW5nIiwib3B0aW9ucyIsIndyaXRlciIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLStreamWriter.js":
/*!********************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLStreamWriter.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDummy.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n    module.exports = XMLStreamWriter = function(superClass) {\n        extend(XMLStreamWriter, superClass);\n        function XMLStreamWriter(stream, options) {\n            XMLStreamWriter.__super__.constructor.call(this, options);\n            this.stream = stream;\n        }\n        XMLStreamWriter.prototype.document = function(doc) {\n            var child, i, j, len, len1, ref, ref1, results;\n            ref = doc.children;\n            for(i = 0, len = ref.length; i < len; i++){\n                child = ref[i];\n                child.isLastRootNode = false;\n            }\n            doc.children[doc.children.length - 1].isLastRootNode = true;\n            ref1 = doc.children;\n            results = [];\n            for(j = 0, len1 = ref1.length; j < len1; j++){\n                child = ref1[j];\n                if (child instanceof XMLDummy) {\n                    continue;\n                }\n                switch(false){\n                    case !(child instanceof XMLDeclaration):\n                        results.push(this.declaration(child));\n                        break;\n                    case !(child instanceof XMLDocType):\n                        results.push(this.docType(child));\n                        break;\n                    case !(child instanceof XMLComment):\n                        results.push(this.comment(child));\n                        break;\n                    case !(child instanceof XMLProcessingInstruction):\n                        results.push(this.processingInstruction(child));\n                        break;\n                    default:\n                        results.push(this.element(child));\n                }\n            }\n            return results;\n        };\n        XMLStreamWriter.prototype.attribute = function(att) {\n            return this.stream.write(\" \" + att.name + '=\"' + att.value + '\"');\n        };\n        XMLStreamWriter.prototype.cdata = function(node, level) {\n            return this.stream.write(this.space(level) + \"<![CDATA[\" + node.text + \"]]>\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.comment = function(node, level) {\n            return this.stream.write(this.space(level) + \"<!-- \" + node.text + \" -->\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.declaration = function(node, level) {\n            this.stream.write(this.space(level));\n            this.stream.write('<?xml version=\"' + node.version + '\"');\n            if (node.encoding != null) {\n                this.stream.write(' encoding=\"' + node.encoding + '\"');\n            }\n            if (node.standalone != null) {\n                this.stream.write(' standalone=\"' + node.standalone + '\"');\n            }\n            this.stream.write(this.spacebeforeslash + \"?>\");\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.docType = function(node, level) {\n            var child, i, len, ref;\n            level || (level = 0);\n            this.stream.write(this.space(level));\n            this.stream.write(\"<!DOCTYPE \" + node.root().name);\n            if (node.pubID && node.sysID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n            } else if (node.sysID) {\n                this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n            }\n            if (node.children.length > 0) {\n                this.stream.write(\" [\");\n                this.stream.write(this.endline(node));\n                ref = node.children;\n                for(i = 0, len = ref.length; i < len; i++){\n                    child = ref[i];\n                    switch(false){\n                        case !(child instanceof XMLDTDAttList):\n                            this.dtdAttList(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDElement):\n                            this.dtdElement(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDEntity):\n                            this.dtdEntity(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDTDNotation):\n                            this.dtdNotation(child, level + 1);\n                            break;\n                        case !(child instanceof XMLCData):\n                            this.cdata(child, level + 1);\n                            break;\n                        case !(child instanceof XMLComment):\n                            this.comment(child, level + 1);\n                            break;\n                        case !(child instanceof XMLProcessingInstruction):\n                            this.processingInstruction(child, level + 1);\n                            break;\n                        default:\n                            throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n                    }\n                }\n                this.stream.write(\"]\");\n            }\n            this.stream.write(this.spacebeforeslash + \">\");\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.element = function(node, level) {\n            var att, child, i, len, name, ref, ref1, space;\n            level || (level = 0);\n            space = this.space(level);\n            this.stream.write(space + \"<\" + node.name);\n            ref = node.attributes;\n            for(name in ref){\n                if (!hasProp.call(ref, name)) continue;\n                att = ref[name];\n                this.attribute(att);\n            }\n            if (node.children.length === 0 || node.children.every(function(e) {\n                return e.value === \"\";\n            })) {\n                if (this.allowEmpty) {\n                    this.stream.write(\"></\" + node.name + \">\");\n                } else {\n                    this.stream.write(this.spacebeforeslash + \"/>\");\n                }\n            } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n                this.stream.write(\">\");\n                this.stream.write(node.children[0].value);\n                this.stream.write(\"</\" + node.name + \">\");\n            } else {\n                this.stream.write(\">\" + this.newline);\n                ref1 = node.children;\n                for(i = 0, len = ref1.length; i < len; i++){\n                    child = ref1[i];\n                    switch(false){\n                        case !(child instanceof XMLCData):\n                            this.cdata(child, level + 1);\n                            break;\n                        case !(child instanceof XMLComment):\n                            this.comment(child, level + 1);\n                            break;\n                        case !(child instanceof XMLElement):\n                            this.element(child, level + 1);\n                            break;\n                        case !(child instanceof XMLRaw):\n                            this.raw(child, level + 1);\n                            break;\n                        case !(child instanceof XMLText):\n                            this.text(child, level + 1);\n                            break;\n                        case !(child instanceof XMLProcessingInstruction):\n                            this.processingInstruction(child, level + 1);\n                            break;\n                        case !(child instanceof XMLDummy):\n                            \"\";\n                            break;\n                        default:\n                            throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n                    }\n                }\n                this.stream.write(space + \"</\" + node.name + \">\");\n            }\n            return this.stream.write(this.endline(node));\n        };\n        XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n            this.stream.write(this.space(level) + \"<?\" + node.target);\n            if (node.value) {\n                this.stream.write(\" \" + node.value);\n            }\n            return this.stream.write(this.spacebeforeslash + \"?>\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.raw = function(node, level) {\n            return this.stream.write(this.space(level) + node.value + this.endline(node));\n        };\n        XMLStreamWriter.prototype.text = function(node, level) {\n            return this.stream.write(this.space(level) + node.value + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ATTLIST \" + node.elementName + \" \" + node.attributeName + \" \" + node.attributeType);\n            if (node.defaultValueType !== \"#DEFAULT\") {\n                this.stream.write(\" \" + node.defaultValueType);\n            }\n            if (node.defaultValue) {\n                this.stream.write(' \"' + node.defaultValue + '\"');\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdElement = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ELEMENT \" + node.name + \" \" + node.value);\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n            this.stream.write(this.space(level) + \"<!ENTITY\");\n            if (node.pe) {\n                this.stream.write(\" %\");\n            }\n            this.stream.write(\" \" + node.name);\n            if (node.value) {\n                this.stream.write(' \"' + node.value + '\"');\n            } else {\n                if (node.pubID && node.sysID) {\n                    this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n                } else if (node.sysID) {\n                    this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n                }\n                if (node.nData) {\n                    this.stream.write(\" NDATA \" + node.nData);\n                }\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n            this.stream.write(this.space(level) + \"<!NOTATION \" + node.name);\n            if (node.pubID && node.sysID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n            } else if (node.pubID) {\n                this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n            } else if (node.sysID) {\n                this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n            }\n            return this.stream.write(this.spacebeforeslash + \">\" + this.endline(node));\n        };\n        XMLStreamWriter.prototype.endline = function(node) {\n            if (!node.isLastRootNode) {\n                return this.newline;\n            } else {\n                return \"\";\n            }\n        };\n        return XMLStreamWriter;\n    }(XMLWriterBase);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLStreamWriter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLStringWriter.js":
/*!********************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLStringWriter.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLDeclaration = __webpack_require__(/*! ./XMLDeclaration */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDeclaration.js\");\n    XMLDocType = __webpack_require__(/*! ./XMLDocType */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocType.js\");\n    XMLCData = __webpack_require__(/*! ./XMLCData */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLCData.js\");\n    XMLComment = __webpack_require__(/*! ./XMLComment */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLComment.js\");\n    XMLElement = __webpack_require__(/*! ./XMLElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLElement.js\");\n    XMLRaw = __webpack_require__(/*! ./XMLRaw */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLRaw.js\");\n    XMLText = __webpack_require__(/*! ./XMLText */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLText.js\");\n    XMLProcessingInstruction = __webpack_require__(/*! ./XMLProcessingInstruction */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js\");\n    XMLDummy = __webpack_require__(/*! ./XMLDummy */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDummy.js\");\n    XMLDTDAttList = __webpack_require__(/*! ./XMLDTDAttList */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDAttList.js\");\n    XMLDTDElement = __webpack_require__(/*! ./XMLDTDElement */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDElement.js\");\n    XMLDTDEntity = __webpack_require__(/*! ./XMLDTDEntity */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDEntity.js\");\n    XMLDTDNotation = __webpack_require__(/*! ./XMLDTDNotation */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDTDNotation.js\");\n    XMLWriterBase = __webpack_require__(/*! ./XMLWriterBase */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLWriterBase.js\");\n    module.exports = XMLStringWriter = function(superClass) {\n        extend(XMLStringWriter, superClass);\n        function XMLStringWriter(options) {\n            XMLStringWriter.__super__.constructor.call(this, options);\n        }\n        XMLStringWriter.prototype.document = function(doc) {\n            var child, i, len, r, ref;\n            this.textispresent = false;\n            r = \"\";\n            ref = doc.children;\n            for(i = 0, len = ref.length; i < len; i++){\n                child = ref[i];\n                if (child instanceof XMLDummy) {\n                    continue;\n                }\n                r += (function() {\n                    switch(false){\n                        case !(child instanceof XMLDeclaration):\n                            return this.declaration(child);\n                        case !(child instanceof XMLDocType):\n                            return this.docType(child);\n                        case !(child instanceof XMLComment):\n                            return this.comment(child);\n                        case !(child instanceof XMLProcessingInstruction):\n                            return this.processingInstruction(child);\n                        default:\n                            return this.element(child, 0);\n                    }\n                }).call(this);\n            }\n            if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n                r = r.slice(0, -this.newline.length);\n            }\n            return r;\n        };\n        XMLStringWriter.prototype.attribute = function(att) {\n            return \" \" + att.name + '=\"' + att.value + '\"';\n        };\n        XMLStringWriter.prototype.cdata = function(node, level) {\n            return this.space(level) + \"<![CDATA[\" + node.text + \"]]>\" + this.newline;\n        };\n        XMLStringWriter.prototype.comment = function(node, level) {\n            return this.space(level) + \"<!-- \" + node.text + \" -->\" + this.newline;\n        };\n        XMLStringWriter.prototype.declaration = function(node, level) {\n            var r;\n            r = this.space(level);\n            r += '<?xml version=\"' + node.version + '\"';\n            if (node.encoding != null) {\n                r += ' encoding=\"' + node.encoding + '\"';\n            }\n            if (node.standalone != null) {\n                r += ' standalone=\"' + node.standalone + '\"';\n            }\n            r += this.spacebeforeslash + \"?>\";\n            r += this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.docType = function(node, level) {\n            var child, i, len, r, ref;\n            level || (level = 0);\n            r = this.space(level);\n            r += \"<!DOCTYPE \" + node.root().name;\n            if (node.pubID && node.sysID) {\n                r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n            } else if (node.sysID) {\n                r += ' SYSTEM \"' + node.sysID + '\"';\n            }\n            if (node.children.length > 0) {\n                r += \" [\";\n                r += this.newline;\n                ref = node.children;\n                for(i = 0, len = ref.length; i < len; i++){\n                    child = ref[i];\n                    r += (function() {\n                        switch(false){\n                            case !(child instanceof XMLDTDAttList):\n                                return this.dtdAttList(child, level + 1);\n                            case !(child instanceof XMLDTDElement):\n                                return this.dtdElement(child, level + 1);\n                            case !(child instanceof XMLDTDEntity):\n                                return this.dtdEntity(child, level + 1);\n                            case !(child instanceof XMLDTDNotation):\n                                return this.dtdNotation(child, level + 1);\n                            case !(child instanceof XMLCData):\n                                return this.cdata(child, level + 1);\n                            case !(child instanceof XMLComment):\n                                return this.comment(child, level + 1);\n                            case !(child instanceof XMLProcessingInstruction):\n                                return this.processingInstruction(child, level + 1);\n                            default:\n                                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n                        }\n                    }).call(this);\n                }\n                r += \"]\";\n            }\n            r += this.spacebeforeslash + \">\";\n            r += this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.element = function(node, level) {\n            var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n            level || (level = 0);\n            textispresentwasset = false;\n            if (this.textispresent) {\n                this.newline = \"\";\n                this.pretty = false;\n            } else {\n                this.newline = this.newlinedefault;\n                this.pretty = this.prettydefault;\n            }\n            space = this.space(level);\n            r = \"\";\n            r += space + \"<\" + node.name;\n            ref = node.attributes;\n            for(name in ref){\n                if (!hasProp.call(ref, name)) continue;\n                att = ref[name];\n                r += this.attribute(att);\n            }\n            if (node.children.length === 0 || node.children.every(function(e) {\n                return e.value === \"\";\n            })) {\n                if (this.allowEmpty) {\n                    r += \"></\" + node.name + \">\" + this.newline;\n                } else {\n                    r += this.spacebeforeslash + \"/>\" + this.newline;\n                }\n            } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n                r += \">\";\n                r += node.children[0].value;\n                r += \"</\" + node.name + \">\" + this.newline;\n            } else {\n                if (this.dontprettytextnodes) {\n                    ref1 = node.children;\n                    for(i = 0, len = ref1.length; i < len; i++){\n                        child = ref1[i];\n                        if (child.value != null) {\n                            this.textispresent++;\n                            textispresentwasset = true;\n                            break;\n                        }\n                    }\n                }\n                if (this.textispresent) {\n                    this.newline = \"\";\n                    this.pretty = false;\n                    space = this.space(level);\n                }\n                r += \">\" + this.newline;\n                ref2 = node.children;\n                for(j = 0, len1 = ref2.length; j < len1; j++){\n                    child = ref2[j];\n                    r += (function() {\n                        switch(false){\n                            case !(child instanceof XMLCData):\n                                return this.cdata(child, level + 1);\n                            case !(child instanceof XMLComment):\n                                return this.comment(child, level + 1);\n                            case !(child instanceof XMLElement):\n                                return this.element(child, level + 1);\n                            case !(child instanceof XMLRaw):\n                                return this.raw(child, level + 1);\n                            case !(child instanceof XMLText):\n                                return this.text(child, level + 1);\n                            case !(child instanceof XMLProcessingInstruction):\n                                return this.processingInstruction(child, level + 1);\n                            case !(child instanceof XMLDummy):\n                                return \"\";\n                            default:\n                                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n                        }\n                    }).call(this);\n                }\n                if (textispresentwasset) {\n                    this.textispresent--;\n                }\n                if (!this.textispresent) {\n                    this.newline = this.newlinedefault;\n                    this.pretty = this.prettydefault;\n                }\n                r += space + \"</\" + node.name + \">\" + this.newline;\n            }\n            return r;\n        };\n        XMLStringWriter.prototype.processingInstruction = function(node, level) {\n            var r;\n            r = this.space(level) + \"<?\" + node.target;\n            if (node.value) {\n                r += \" \" + node.value;\n            }\n            r += this.spacebeforeslash + \"?>\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.raw = function(node, level) {\n            return this.space(level) + node.value + this.newline;\n        };\n        XMLStringWriter.prototype.text = function(node, level) {\n            return this.space(level) + node.value + this.newline;\n        };\n        XMLStringWriter.prototype.dtdAttList = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!ATTLIST \" + node.elementName + \" \" + node.attributeName + \" \" + node.attributeType;\n            if (node.defaultValueType !== \"#DEFAULT\") {\n                r += \" \" + node.defaultValueType;\n            }\n            if (node.defaultValue) {\n                r += ' \"' + node.defaultValue + '\"';\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.dtdElement = function(node, level) {\n            return this.space(level) + \"<!ELEMENT \" + node.name + \" \" + node.value + this.spacebeforeslash + \">\" + this.newline;\n        };\n        XMLStringWriter.prototype.dtdEntity = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!ENTITY\";\n            if (node.pe) {\n                r += \" %\";\n            }\n            r += \" \" + node.name;\n            if (node.value) {\n                r += ' \"' + node.value + '\"';\n            } else {\n                if (node.pubID && node.sysID) {\n                    r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n                } else if (node.sysID) {\n                    r += ' SYSTEM \"' + node.sysID + '\"';\n                }\n                if (node.nData) {\n                    r += \" NDATA \" + node.nData;\n                }\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.dtdNotation = function(node, level) {\n            var r;\n            r = this.space(level) + \"<!NOTATION \" + node.name;\n            if (node.pubID && node.sysID) {\n                r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n            } else if (node.pubID) {\n                r += ' PUBLIC \"' + node.pubID + '\"';\n            } else if (node.sysID) {\n                r += ' SYSTEM \"' + node.sysID + '\"';\n            }\n            r += this.spacebeforeslash + \">\" + this.newline;\n            return r;\n        };\n        XMLStringWriter.prototype.openNode = function(node, level) {\n            var att, name, r, ref;\n            level || (level = 0);\n            if (node instanceof XMLElement) {\n                r = this.space(level) + \"<\" + node.name;\n                ref = node.attributes;\n                for(name in ref){\n                    if (!hasProp.call(ref, name)) continue;\n                    att = ref[name];\n                    r += this.attribute(att);\n                }\n                r += (node.children ? \">\" : \"/>\") + this.newline;\n                return r;\n            } else {\n                r = this.space(level) + \"<!DOCTYPE \" + node.rootNodeName;\n                if (node.pubID && node.sysID) {\n                    r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n                } else if (node.sysID) {\n                    r += ' SYSTEM \"' + node.sysID + '\"';\n                }\n                r += (node.children ? \" [\" : \">\") + this.newline;\n                return r;\n            }\n        };\n        XMLStringWriter.prototype.closeNode = function(node, level) {\n            level || (level = 0);\n            switch(false){\n                case !(node instanceof XMLElement):\n                    return this.space(level) + \"</\" + node.name + \">\" + this.newline;\n                case !(node instanceof XMLDocType):\n                    return this.space(level) + \"]>\" + this.newline;\n            }\n        };\n        return XMLStringWriter;\n    }(XMLWriterBase);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLStringWriter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLStringifier.js":
/*!*******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLStringifier.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLStringifier, bind = function(fn, me) {\n        return function() {\n            return fn.apply(me, arguments);\n        };\n    }, hasProp = {}.hasOwnProperty;\n    module.exports = XMLStringifier = function() {\n        function XMLStringifier(options) {\n            this.assertLegalChar = bind(this.assertLegalChar, this);\n            var key, ref, value;\n            options || (options = {});\n            this.noDoubleEncoding = options.noDoubleEncoding;\n            ref = options.stringify || {};\n            for(key in ref){\n                if (!hasProp.call(ref, key)) continue;\n                value = ref[key];\n                this[key] = value;\n            }\n        }\n        XMLStringifier.prototype.eleName = function(val) {\n            val = \"\" + val || \"\";\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.eleText = function(val) {\n            val = \"\" + val || \"\";\n            return this.assertLegalChar(this.elEscape(val));\n        };\n        XMLStringifier.prototype.cdata = function(val) {\n            val = \"\" + val || \"\";\n            val = val.replace(\"]]>\", \"]]]]><![CDATA[>\");\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.comment = function(val) {\n            val = \"\" + val || \"\";\n            if (val.match(/--/)) {\n                throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n            }\n            return this.assertLegalChar(val);\n        };\n        XMLStringifier.prototype.raw = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.attName = function(val) {\n            return val = \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.attValue = function(val) {\n            val = \"\" + val || \"\";\n            return this.attEscape(val);\n        };\n        XMLStringifier.prototype.insTarget = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.insValue = function(val) {\n            val = \"\" + val || \"\";\n            if (val.match(/\\?>/)) {\n                throw new Error(\"Invalid processing instruction value: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlVersion = function(val) {\n            val = \"\" + val || \"\";\n            if (!val.match(/1\\.[0-9]+/)) {\n                throw new Error(\"Invalid version number: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlEncoding = function(val) {\n            val = \"\" + val || \"\";\n            if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n                throw new Error(\"Invalid encoding: \" + val);\n            }\n            return val;\n        };\n        XMLStringifier.prototype.xmlStandalone = function(val) {\n            if (val) {\n                return \"yes\";\n            } else {\n                return \"no\";\n            }\n        };\n        XMLStringifier.prototype.dtdPubID = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdSysID = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdElementValue = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdAttType = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdAttDefault = function(val) {\n            if (val != null) {\n                return \"\" + val || \"\";\n            } else {\n                return val;\n            }\n        };\n        XMLStringifier.prototype.dtdEntityValue = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.dtdNData = function(val) {\n            return \"\" + val || \"\";\n        };\n        XMLStringifier.prototype.convertAttKey = \"@\";\n        XMLStringifier.prototype.convertPIKey = \"?\";\n        XMLStringifier.prototype.convertTextKey = \"#text\";\n        XMLStringifier.prototype.convertCDataKey = \"#cdata\";\n        XMLStringifier.prototype.convertCommentKey = \"#comment\";\n        XMLStringifier.prototype.convertRawKey = \"#raw\";\n        XMLStringifier.prototype.assertLegalChar = function(str) {\n            var res;\n            res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n            if (res) {\n                throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n            }\n            return str;\n        };\n        XMLStringifier.prototype.elEscape = function(str) {\n            var ampregex;\n            ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n            return str.replace(ampregex, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\r/g, \"&#xD;\");\n        };\n        XMLStringifier.prototype.attEscape = function(str) {\n            var ampregex;\n            ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n            return str.replace(ampregex, \"&amp;\").replace(/</g, \"&lt;\").replace(/\"/g, \"&quot;\").replace(/\\t/g, \"&#x9;\").replace(/\\n/g, \"&#xA;\").replace(/\\r/g, \"&#xD;\");\n        };\n        return XMLStringifier;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MU3RyaW5naWZpZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGdCQUNGQyxPQUFPLFNBQVNDLEVBQUUsRUFBRUMsRUFBRTtRQUFHLE9BQU87WUFBWSxPQUFPRCxHQUFHRSxLQUFLLENBQUNELElBQUlFO1FBQVk7SUFBRyxHQUMvRUMsVUFBVSxDQUFDLEVBQUVDLGNBQWM7SUFFN0JDLE9BQU9DLE9BQU8sR0FBR1QsaUJBQWlCO1FBQ2hDLFNBQVNBLGVBQWVVLE9BQU87WUFDN0IsSUFBSSxDQUFDQyxlQUFlLEdBQUdWLEtBQUssSUFBSSxDQUFDVSxlQUFlLEVBQUUsSUFBSTtZQUN0RCxJQUFJQyxLQUFLQyxLQUFLQztZQUNkSixXQUFZQSxDQUFBQSxVQUFVLENBQUM7WUFDdkIsSUFBSSxDQUFDSyxnQkFBZ0IsR0FBR0wsUUFBUUssZ0JBQWdCO1lBQ2hERixNQUFNSCxRQUFRTSxTQUFTLElBQUksQ0FBQztZQUM1QixJQUFLSixPQUFPQyxJQUFLO2dCQUNmLElBQUksQ0FBQ1AsUUFBUVcsSUFBSSxDQUFDSixLQUFLRCxNQUFNO2dCQUM3QkUsUUFBUUQsR0FBRyxDQUFDRCxJQUFJO2dCQUNoQixJQUFJLENBQUNBLElBQUksR0FBR0U7WUFDZDtRQUNGO1FBRUFkLGVBQWVrQixTQUFTLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxHQUFHO1lBQzdDQSxNQUFNLEtBQUtBLE9BQU87WUFDbEIsT0FBTyxJQUFJLENBQUNULGVBQWUsQ0FBQ1M7UUFDOUI7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNHLE9BQU8sR0FBRyxTQUFTRCxHQUFHO1lBQzdDQSxNQUFNLEtBQUtBLE9BQU87WUFDbEIsT0FBTyxJQUFJLENBQUNULGVBQWUsQ0FBQyxJQUFJLENBQUNXLFFBQVEsQ0FBQ0Y7UUFDNUM7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNLLEtBQUssR0FBRyxTQUFTSCxHQUFHO1lBQzNDQSxNQUFNLEtBQUtBLE9BQU87WUFDbEJBLE1BQU1BLElBQUlJLE9BQU8sQ0FBQyxPQUFPO1lBQ3pCLE9BQU8sSUFBSSxDQUFDYixlQUFlLENBQUNTO1FBQzlCO1FBRUFwQixlQUFla0IsU0FBUyxDQUFDTyxPQUFPLEdBQUcsU0FBU0wsR0FBRztZQUM3Q0EsTUFBTSxLQUFLQSxPQUFPO1lBQ2xCLElBQUlBLElBQUlNLEtBQUssQ0FBQyxPQUFPO2dCQUNuQixNQUFNLElBQUlDLE1BQU0sK0NBQStDUDtZQUNqRTtZQUNBLE9BQU8sSUFBSSxDQUFDVCxlQUFlLENBQUNTO1FBQzlCO1FBRUFwQixlQUFla0IsU0FBUyxDQUFDVSxHQUFHLEdBQUcsU0FBU1IsR0FBRztZQUN6QyxPQUFPLEtBQUtBLE9BQU87UUFDckI7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNXLE9BQU8sR0FBRyxTQUFTVCxHQUFHO1lBQzdDLE9BQU9BLE1BQU0sS0FBS0EsT0FBTztRQUMzQjtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ1ksUUFBUSxHQUFHLFNBQVNWLEdBQUc7WUFDOUNBLE1BQU0sS0FBS0EsT0FBTztZQUNsQixPQUFPLElBQUksQ0FBQ1csU0FBUyxDQUFDWDtRQUN4QjtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ2MsU0FBUyxHQUFHLFNBQVNaLEdBQUc7WUFDL0MsT0FBTyxLQUFLQSxPQUFPO1FBQ3JCO1FBRUFwQixlQUFla0IsU0FBUyxDQUFDZSxRQUFRLEdBQUcsU0FBU2IsR0FBRztZQUM5Q0EsTUFBTSxLQUFLQSxPQUFPO1lBQ2xCLElBQUlBLElBQUlNLEtBQUssQ0FBQyxRQUFRO2dCQUNwQixNQUFNLElBQUlDLE1BQU0sMkNBQTJDUDtZQUM3RDtZQUNBLE9BQU9BO1FBQ1Q7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNnQixVQUFVLEdBQUcsU0FBU2QsR0FBRztZQUNoREEsTUFBTSxLQUFLQSxPQUFPO1lBQ2xCLElBQUksQ0FBQ0EsSUFBSU0sS0FBSyxDQUFDLGNBQWM7Z0JBQzNCLE1BQU0sSUFBSUMsTUFBTSw2QkFBNkJQO1lBQy9DO1lBQ0EsT0FBT0E7UUFDVDtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ2lCLFdBQVcsR0FBRyxTQUFTZixHQUFHO1lBQ2pEQSxNQUFNLEtBQUtBLE9BQU87WUFDbEIsSUFBSSxDQUFDQSxJQUFJTSxLQUFLLENBQUMsa0NBQWtDO2dCQUMvQyxNQUFNLElBQUlDLE1BQU0sdUJBQXVCUDtZQUN6QztZQUNBLE9BQU9BO1FBQ1Q7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNrQixhQUFhLEdBQUcsU0FBU2hCLEdBQUc7WUFDbkQsSUFBSUEsS0FBSztnQkFDUCxPQUFPO1lBQ1QsT0FBTztnQkFDTCxPQUFPO1lBQ1Q7UUFDRjtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ21CLFFBQVEsR0FBRyxTQUFTakIsR0FBRztZQUM5QyxPQUFPLEtBQUtBLE9BQU87UUFDckI7UUFFQXBCLGVBQWVrQixTQUFTLENBQUNvQixRQUFRLEdBQUcsU0FBU2xCLEdBQUc7WUFDOUMsT0FBTyxLQUFLQSxPQUFPO1FBQ3JCO1FBRUFwQixlQUFla0IsU0FBUyxDQUFDcUIsZUFBZSxHQUFHLFNBQVNuQixHQUFHO1lBQ3JELE9BQU8sS0FBS0EsT0FBTztRQUNyQjtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ3NCLFVBQVUsR0FBRyxTQUFTcEIsR0FBRztZQUNoRCxPQUFPLEtBQUtBLE9BQU87UUFDckI7UUFFQXBCLGVBQWVrQixTQUFTLENBQUN1QixhQUFhLEdBQUcsU0FBU3JCLEdBQUc7WUFDbkQsSUFBSUEsT0FBTyxNQUFNO2dCQUNmLE9BQU8sS0FBS0EsT0FBTztZQUNyQixPQUFPO2dCQUNMLE9BQU9BO1lBQ1Q7UUFDRjtRQUVBcEIsZUFBZWtCLFNBQVMsQ0FBQ3dCLGNBQWMsR0FBRyxTQUFTdEIsR0FBRztZQUNwRCxPQUFPLEtBQUtBLE9BQU87UUFDckI7UUFFQXBCLGVBQWVrQixTQUFTLENBQUN5QixRQUFRLEdBQUcsU0FBU3ZCLEdBQUc7WUFDOUMsT0FBTyxLQUFLQSxPQUFPO1FBQ3JCO1FBRUFwQixlQUFla0IsU0FBUyxDQUFDMEIsYUFBYSxHQUFHO1FBRXpDNUMsZUFBZWtCLFNBQVMsQ0FBQzJCLFlBQVksR0FBRztRQUV4QzdDLGVBQWVrQixTQUFTLENBQUM0QixjQUFjLEdBQUc7UUFFMUM5QyxlQUFla0IsU0FBUyxDQUFDNkIsZUFBZSxHQUFHO1FBRTNDL0MsZUFBZWtCLFNBQVMsQ0FBQzhCLGlCQUFpQixHQUFHO1FBRTdDaEQsZUFBZWtCLFNBQVMsQ0FBQytCLGFBQWEsR0FBRztRQUV6Q2pELGVBQWVrQixTQUFTLENBQUNQLGVBQWUsR0FBRyxTQUFTdUMsR0FBRztZQUNyRCxJQUFJQztZQUNKQSxNQUFNRCxJQUFJeEIsS0FBSyxDQUFDO1lBQ2hCLElBQUl5QixLQUFLO2dCQUNQLE1BQU0sSUFBSXhCLE1BQU0sa0NBQWtDdUIsTUFBTSxlQUFlQyxJQUFJQyxLQUFLO1lBQ2xGO1lBQ0EsT0FBT0Y7UUFDVDtRQUVBbEQsZUFBZWtCLFNBQVMsQ0FBQ0ksUUFBUSxHQUFHLFNBQVM0QixHQUFHO1lBQzlDLElBQUlHO1lBQ0pBLFdBQVcsSUFBSSxDQUFDdEMsZ0JBQWdCLEdBQUcsZ0JBQWdCO1lBQ25ELE9BQU9tQyxJQUFJMUIsT0FBTyxDQUFDNkIsVUFBVSxTQUFTN0IsT0FBTyxDQUFDLE1BQU0sUUFBUUEsT0FBTyxDQUFDLE1BQU0sUUFBUUEsT0FBTyxDQUFDLE9BQU87UUFDbkc7UUFFQXhCLGVBQWVrQixTQUFTLENBQUNhLFNBQVMsR0FBRyxTQUFTbUIsR0FBRztZQUMvQyxJQUFJRztZQUNKQSxXQUFXLElBQUksQ0FBQ3RDLGdCQUFnQixHQUFHLGdCQUFnQjtZQUNuRCxPQUFPbUMsSUFBSTFCLE9BQU8sQ0FBQzZCLFVBQVUsU0FBUzdCLE9BQU8sQ0FBQyxNQUFNLFFBQVFBLE9BQU8sQ0FBQyxNQUFNLFVBQVVBLE9BQU8sQ0FBQyxPQUFPLFNBQVNBLE9BQU8sQ0FBQyxPQUFPLFNBQVNBLE9BQU8sQ0FBQyxPQUFPO1FBQ3JKO1FBRUEsT0FBT3hCO0lBRVQ7QUFFRixHQUFHaUIsSUFBSSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL3htbGJ1aWxkZXIvbGliL1hNTFN0cmluZ2lmaWVyLmpzPzgwMGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IENvZmZlZVNjcmlwdCAxLjEyLjdcbihmdW5jdGlvbigpIHtcbiAgdmFyIFhNTFN0cmluZ2lmaWVyLFxuICAgIGJpbmQgPSBmdW5jdGlvbihmbiwgbWUpeyByZXR1cm4gZnVuY3Rpb24oKXsgcmV0dXJuIGZuLmFwcGx5KG1lLCBhcmd1bWVudHMpOyB9OyB9LFxuICAgIGhhc1Byb3AgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuICBtb2R1bGUuZXhwb3J0cyA9IFhNTFN0cmluZ2lmaWVyID0gKGZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIFhNTFN0cmluZ2lmaWVyKG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuYXNzZXJ0TGVnYWxDaGFyID0gYmluZCh0aGlzLmFzc2VydExlZ2FsQ2hhciwgdGhpcyk7XG4gICAgICB2YXIga2V5LCByZWYsIHZhbHVlO1xuICAgICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICAgIHRoaXMubm9Eb3VibGVFbmNvZGluZyA9IG9wdGlvbnMubm9Eb3VibGVFbmNvZGluZztcbiAgICAgIHJlZiA9IG9wdGlvbnMuc3RyaW5naWZ5IHx8IHt9O1xuICAgICAgZm9yIChrZXkgaW4gcmVmKSB7XG4gICAgICAgIGlmICghaGFzUHJvcC5jYWxsKHJlZiwga2V5KSkgY29udGludWU7XG4gICAgICAgIHZhbHVlID0gcmVmW2tleV07XG4gICAgICAgIHRoaXNba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5lbGVOYW1lID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIHJldHVybiB0aGlzLmFzc2VydExlZ2FsQ2hhcih2YWwpO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuZWxlVGV4dCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgdmFsID0gJycgKyB2YWwgfHwgJyc7XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodGhpcy5lbEVzY2FwZSh2YWwpKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNkYXRhID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIHZhbCA9IHZhbC5yZXBsYWNlKCddXT4nLCAnXV1dXT48IVtDREFUQVs+Jyk7XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodmFsKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgICAgaWYgKHZhbC5tYXRjaCgvLS0vKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb21tZW50IHRleHQgY2Fubm90IGNvbnRhaW4gZG91YmxlLWh5cGVuOiBcIiArIHZhbCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5hc3NlcnRMZWdhbENoYXIodmFsKTtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLnJhdyA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuYXR0TmFtZSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuYXR0VmFsdWUgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHZhbCA9ICcnICsgdmFsIHx8ICcnO1xuICAgICAgcmV0dXJuIHRoaXMuYXR0RXNjYXBlKHZhbCk7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5pbnNUYXJnZXQgPSBmdW5jdGlvbih2YWwpIHtcbiAgICAgIHJldHVybiAnJyArIHZhbCB8fCAnJztcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmluc1ZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICh2YWwubWF0Y2goL1xcPz4vKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gdmFsdWU6IFwiICsgdmFsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWw7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS54bWxWZXJzaW9uID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICghdmFsLm1hdGNoKC8xXFwuWzAtOV0rLykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2ZXJzaW9uIG51bWJlcjogXCIgKyB2YWwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLnhtbEVuY29kaW5nID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YWwgPSAnJyArIHZhbCB8fCAnJztcbiAgICAgIGlmICghdmFsLm1hdGNoKC9eW0EtWmEtel0oPzpbQS1aYS16MC05Ll8tXSkqJC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZW5jb2Rpbmc6IFwiICsgdmFsKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWw7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS54bWxTdGFuZGFsb25lID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICBpZiAodmFsKSB7XG4gICAgICAgIHJldHVybiBcInllc1wiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwibm9cIjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmR0ZFB1YklEID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRTeXNJRCA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuZHRkRWxlbWVudFZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRBdHRUeXBlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRBdHREZWZhdWx0ID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICBpZiAodmFsICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmR0ZEVudGl0eVZhbHVlID0gZnVuY3Rpb24odmFsKSB7XG4gICAgICByZXR1cm4gJycgKyB2YWwgfHwgJyc7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5kdGRORGF0YSA9IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgcmV0dXJuICcnICsgdmFsIHx8ICcnO1xuICAgIH07XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuY29udmVydEF0dEtleSA9ICdAJztcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5jb252ZXJ0UElLZXkgPSAnPyc7XG5cbiAgICBYTUxTdHJpbmdpZmllci5wcm90b3R5cGUuY29udmVydFRleHRLZXkgPSAnI3RleHQnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbnZlcnRDRGF0YUtleSA9ICcjY2RhdGEnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmNvbnZlcnRDb21tZW50S2V5ID0gJyNjb21tZW50JztcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5jb252ZXJ0UmF3S2V5ID0gJyNyYXcnO1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmFzc2VydExlZ2FsQ2hhciA9IGZ1bmN0aW9uKHN0cikge1xuICAgICAgdmFyIHJlcztcbiAgICAgIHJlcyA9IHN0ci5tYXRjaCgvW1xcMFxcdUZGRkVcXHVGRkZGXXxbXFx1RDgwMC1cXHVEQkZGXSg/IVtcXHVEQzAwLVxcdURGRkZdKXwoPzpbXlxcdUQ4MDAtXFx1REJGRl18XilbXFx1REMwMC1cXHVERkZGXS8pO1xuICAgICAgaWYgKHJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBzdHJpbmc6IFwiICsgc3RyICsgXCIgYXQgaW5kZXggXCIgKyByZXMuaW5kZXgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9O1xuXG4gICAgWE1MU3RyaW5naWZpZXIucHJvdG90eXBlLmVsRXNjYXBlID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgICB2YXIgYW1wcmVnZXg7XG4gICAgICBhbXByZWdleCA9IHRoaXMubm9Eb3VibGVFbmNvZGluZyA/IC8oPyEmXFxTKzspJi9nIDogLyYvZztcbiAgICAgIHJldHVybiBzdHIucmVwbGFjZShhbXByZWdleCwgJyZhbXA7JykucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKS5yZXBsYWNlKC9cXHIvZywgJyYjeEQ7Jyk7XG4gICAgfTtcblxuICAgIFhNTFN0cmluZ2lmaWVyLnByb3RvdHlwZS5hdHRFc2NhcGUgPSBmdW5jdGlvbihzdHIpIHtcbiAgICAgIHZhciBhbXByZWdleDtcbiAgICAgIGFtcHJlZ2V4ID0gdGhpcy5ub0RvdWJsZUVuY29kaW5nID8gLyg/ISZcXFMrOykmL2cgOiAvJi9nO1xuICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKGFtcHJlZ2V4LCAnJmFtcDsnKS5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvXCIvZywgJyZxdW90OycpLnJlcGxhY2UoL1xcdC9nLCAnJiN4OTsnKS5yZXBsYWNlKC9cXG4vZywgJyYjeEE7JykucmVwbGFjZSgvXFxyL2csICcmI3hEOycpO1xuICAgIH07XG5cbiAgICByZXR1cm4gWE1MU3RyaW5naWZpZXI7XG5cbiAgfSkoKTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxTdHJpbmdpZmllciIsImJpbmQiLCJmbiIsIm1lIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJoYXNQcm9wIiwiaGFzT3duUHJvcGVydHkiLCJtb2R1bGUiLCJleHBvcnRzIiwib3B0aW9ucyIsImFzc2VydExlZ2FsQ2hhciIsImtleSIsInJlZiIsInZhbHVlIiwibm9Eb3VibGVFbmNvZGluZyIsInN0cmluZ2lmeSIsImNhbGwiLCJwcm90b3R5cGUiLCJlbGVOYW1lIiwidmFsIiwiZWxlVGV4dCIsImVsRXNjYXBlIiwiY2RhdGEiLCJyZXBsYWNlIiwiY29tbWVudCIsIm1hdGNoIiwiRXJyb3IiLCJyYXciLCJhdHROYW1lIiwiYXR0VmFsdWUiLCJhdHRFc2NhcGUiLCJpbnNUYXJnZXQiLCJpbnNWYWx1ZSIsInhtbFZlcnNpb24iLCJ4bWxFbmNvZGluZyIsInhtbFN0YW5kYWxvbmUiLCJkdGRQdWJJRCIsImR0ZFN5c0lEIiwiZHRkRWxlbWVudFZhbHVlIiwiZHRkQXR0VHlwZSIsImR0ZEF0dERlZmF1bHQiLCJkdGRFbnRpdHlWYWx1ZSIsImR0ZE5EYXRhIiwiY29udmVydEF0dEtleSIsImNvbnZlcnRQSUtleSIsImNvbnZlcnRUZXh0S2V5IiwiY29udmVydENEYXRhS2V5IiwiY29udmVydENvbW1lbnRLZXkiLCJjb252ZXJ0UmF3S2V5Iiwic3RyIiwicmVzIiwiaW5kZXgiLCJhbXByZWdleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLStringifier.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLText.js":
/*!************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLText.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLNode, XMLText, extend = function(child, parent) {\n        for(var key in parent){\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n        }\n        function ctor() {\n            this.constructor = child;\n        }\n        ctor.prototype = parent.prototype;\n        child.prototype = new ctor();\n        child.__super__ = parent.prototype;\n        return child;\n    }, hasProp = {}.hasOwnProperty;\n    XMLNode = __webpack_require__(/*! ./XMLNode */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLNode.js\");\n    module.exports = XMLText = function(superClass) {\n        extend(XMLText, superClass);\n        function XMLText(parent, text) {\n            XMLText.__super__.constructor.call(this, parent);\n            if (text == null) {\n                throw new Error(\"Missing element text. \" + this.debugInfo());\n            }\n            this.value = this.stringify.eleText(text);\n        }\n        XMLText.prototype.clone = function() {\n            return Object.create(this);\n        };\n        XMLText.prototype.toString = function(options) {\n            return this.options.writer.set(options).text(this);\n        };\n        return XMLText;\n    }(XMLNode);\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MVGV4dC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsbUNBQW1DO0FBQ2xDO0lBQ0MsSUFBSUEsU0FBU0MsU0FDWEMsU0FBUyxTQUFTQyxLQUFLLEVBQUVDLE1BQU07UUFBSSxJQUFLLElBQUlDLE9BQU9ELE9BQVE7WUFBRSxJQUFJRSxRQUFRQyxJQUFJLENBQUNILFFBQVFDLE1BQU1GLEtBQUssQ0FBQ0UsSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtRQUFFLFNBQVNHO1lBQVMsSUFBSSxDQUFDQyxXQUFXLEdBQUdOO1FBQU87UUFBRUssS0FBS0UsU0FBUyxHQUFHTixPQUFPTSxTQUFTO1FBQUVQLE1BQU1PLFNBQVMsR0FBRyxJQUFJRjtRQUFRTCxNQUFNUSxTQUFTLEdBQUdQLE9BQU9NLFNBQVM7UUFBRSxPQUFPUDtJQUFPLEdBQ3pSRyxVQUFVLENBQUMsRUFBRU0sY0FBYztJQUU3QlosVUFBVWEsbUJBQU9BLENBQUM7SUFFbEJDLE9BQU9DLE9BQU8sR0FBR2QsVUFBVSxTQUFVZSxVQUFVO1FBQzdDZCxPQUFPRCxTQUFTZTtRQUVoQixTQUFTZixRQUFRRyxNQUFNLEVBQUVhLElBQUk7WUFDM0JoQixRQUFRVSxTQUFTLENBQUNGLFdBQVcsQ0FBQ0YsSUFBSSxDQUFDLElBQUksRUFBRUg7WUFDekMsSUFBSWEsUUFBUSxNQUFNO2dCQUNoQixNQUFNLElBQUlDLE1BQU0sMkJBQTJCLElBQUksQ0FBQ0MsU0FBUztZQUMzRDtZQUNBLElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxPQUFPLENBQUNMO1FBQ3RDO1FBRUFoQixRQUFRUyxTQUFTLENBQUNhLEtBQUssR0FBRztZQUN4QixPQUFPQyxPQUFPQyxNQUFNLENBQUMsSUFBSTtRQUMzQjtRQUVBeEIsUUFBUVMsU0FBUyxDQUFDZ0IsUUFBUSxHQUFHLFNBQVNDLE9BQU87WUFDM0MsT0FBTyxJQUFJLENBQUNBLE9BQU8sQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNGLFNBQVNWLElBQUksQ0FBQyxJQUFJO1FBQ25EO1FBRUEsT0FBT2hCO0lBRVQsRUFBR0Q7QUFFTCxHQUFHTyxJQUFJLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvWE1MVGV4dC5qcz9hZDcxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxOb2RlLCBYTUxUZXh0LFxuICAgIGV4dGVuZCA9IGZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHsgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoaGFzUHJvcC5jYWxsKHBhcmVudCwga2V5KSkgY2hpbGRba2V5XSA9IHBhcmVudFtrZXldOyB9IGZ1bmN0aW9uIGN0b3IoKSB7IHRoaXMuY29uc3RydWN0b3IgPSBjaGlsZDsgfSBjdG9yLnByb3RvdHlwZSA9IHBhcmVudC5wcm90b3R5cGU7IGNoaWxkLnByb3RvdHlwZSA9IG5ldyBjdG9yKCk7IGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7IHJldHVybiBjaGlsZDsgfSxcbiAgICBoYXNQcm9wID0ge30uaGFzT3duUHJvcGVydHk7XG5cbiAgWE1MTm9kZSA9IHJlcXVpcmUoJy4vWE1MTm9kZScpO1xuXG4gIG1vZHVsZS5leHBvcnRzID0gWE1MVGV4dCA9IChmdW5jdGlvbihzdXBlckNsYXNzKSB7XG4gICAgZXh0ZW5kKFhNTFRleHQsIHN1cGVyQ2xhc3MpO1xuXG4gICAgZnVuY3Rpb24gWE1MVGV4dChwYXJlbnQsIHRleHQpIHtcbiAgICAgIFhNTFRleHQuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgcGFyZW50KTtcbiAgICAgIGlmICh0ZXh0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBlbGVtZW50IHRleHQuIFwiICsgdGhpcy5kZWJ1Z0luZm8oKSk7XG4gICAgICB9XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5zdHJpbmdpZnkuZWxlVGV4dCh0ZXh0KTtcbiAgICB9XG5cbiAgICBYTUxUZXh0LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5jcmVhdGUodGhpcyk7XG4gICAgfTtcblxuICAgIFhNTFRleHQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy53cml0ZXIuc2V0KG9wdGlvbnMpLnRleHQodGhpcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBYTUxUZXh0O1xuXG4gIH0pKFhNTE5vZGUpO1xuXG59KS5jYWxsKHRoaXMpO1xuIl0sIm5hbWVzIjpbIlhNTE5vZGUiLCJYTUxUZXh0IiwiZXh0ZW5kIiwiY2hpbGQiLCJwYXJlbnQiLCJrZXkiLCJoYXNQcm9wIiwiY2FsbCIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fc3VwZXJfXyIsImhhc093blByb3BlcnR5IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdXBlckNsYXNzIiwidGV4dCIsIkVycm9yIiwiZGVidWdJbmZvIiwidmFsdWUiLCJzdHJpbmdpZnkiLCJlbGVUZXh0IiwiY2xvbmUiLCJPYmplY3QiLCJjcmVhdGUiLCJ0b1N0cmluZyIsIm9wdGlvbnMiLCJ3cml0ZXIiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLText.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/XMLWriterBase.js":
/*!******************************************************!*\
  !*** ./node_modules/xmlbuilder/lib/XMLWriterBase.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLWriterBase, hasProp = {}.hasOwnProperty;\n    module.exports = XMLWriterBase = function() {\n        function XMLWriterBase(options) {\n            var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n            options || (options = {});\n            this.pretty = options.pretty || false;\n            this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n            if (this.pretty) {\n                this.indent = (ref1 = options.indent) != null ? ref1 : \"  \";\n                this.newline = (ref2 = options.newline) != null ? ref2 : \"\\n\";\n                this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n                this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n            } else {\n                this.indent = \"\";\n                this.newline = \"\";\n                this.offset = 0;\n                this.dontprettytextnodes = 0;\n            }\n            this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : \"\";\n            if (this.spacebeforeslash === true) {\n                this.spacebeforeslash = \" \";\n            }\n            this.newlinedefault = this.newline;\n            this.prettydefault = this.pretty;\n            ref6 = options.writer || {};\n            for(key in ref6){\n                if (!hasProp.call(ref6, key)) continue;\n                value = ref6[key];\n                this[key] = value;\n            }\n        }\n        XMLWriterBase.prototype.set = function(options) {\n            var key, ref, value;\n            options || (options = {});\n            if (\"pretty\" in options) {\n                this.pretty = options.pretty;\n            }\n            if (\"allowEmpty\" in options) {\n                this.allowEmpty = options.allowEmpty;\n            }\n            if (this.pretty) {\n                this.indent = \"indent\" in options ? options.indent : \"  \";\n                this.newline = \"newline\" in options ? options.newline : \"\\n\";\n                this.offset = \"offset\" in options ? options.offset : 0;\n                this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n            } else {\n                this.indent = \"\";\n                this.newline = \"\";\n                this.offset = 0;\n                this.dontprettytextnodes = 0;\n            }\n            this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : \"\";\n            if (this.spacebeforeslash === true) {\n                this.spacebeforeslash = \" \";\n            }\n            this.newlinedefault = this.newline;\n            this.prettydefault = this.pretty;\n            ref = options.writer || {};\n            for(key in ref){\n                if (!hasProp.call(ref, key)) continue;\n                value = ref[key];\n                this[key] = value;\n            }\n            return this;\n        };\n        XMLWriterBase.prototype.space = function(level) {\n            var indent;\n            if (this.pretty) {\n                indent = (level || 0) + this.offset + 1;\n                if (indent > 0) {\n                    return new Array(indent).join(this.indent);\n                } else {\n                    return \"\";\n                }\n            } else {\n                return \"\";\n            }\n        };\n        return XMLWriterBase;\n    }();\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/XMLWriterBase.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlbuilder/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/xmlbuilder/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Generated by CoffeeScript 1.12.7\n(function() {\n    var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n    ref = __webpack_require__(/*! ./Utility */ \"(ssr)/./node_modules/xmlbuilder/lib/Utility.js\"), assign = ref.assign, isFunction = ref.isFunction;\n    XMLDocument = __webpack_require__(/*! ./XMLDocument */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocument.js\");\n    XMLDocumentCB = __webpack_require__(/*! ./XMLDocumentCB */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLDocumentCB.js\");\n    XMLStringWriter = __webpack_require__(/*! ./XMLStringWriter */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStringWriter.js\");\n    XMLStreamWriter = __webpack_require__(/*! ./XMLStreamWriter */ \"(ssr)/./node_modules/xmlbuilder/lib/XMLStreamWriter.js\");\n    module.exports.create = function(name, xmldec, doctype, options) {\n        var doc, root;\n        if (name == null) {\n            throw new Error(\"Root element needs a name.\");\n        }\n        options = assign({}, xmldec, doctype, options);\n        doc = new XMLDocument(options);\n        root = doc.element(name);\n        if (!options.headless) {\n            doc.declaration(options);\n            if (options.pubID != null || options.sysID != null) {\n                doc.doctype(options);\n            }\n        }\n        return root;\n    };\n    module.exports.begin = function(options, onData, onEnd) {\n        var ref1;\n        if (isFunction(options)) {\n            ref1 = [\n                options,\n                onData\n            ], onData = ref1[0], onEnd = ref1[1];\n            options = {};\n        }\n        if (onData) {\n            return new XMLDocumentCB(options, onData, onEnd);\n        } else {\n            return new XMLDocument(options);\n        }\n    };\n    module.exports.stringWriter = function(options) {\n        return new XMLStringWriter(options);\n    };\n    module.exports.streamWriter = function(stream, options) {\n        return new XMLStreamWriter(stream, options);\n    };\n}).call(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sYnVpbGRlci9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLG1DQUFtQztBQUNsQztJQUNDLElBQUlBLGFBQWFDLGVBQWVDLGlCQUFpQkMsaUJBQWlCQyxRQUFRQyxZQUFZQztJQUV0RkEsTUFBTUMsbUJBQU9BLENBQUMsb0VBQWNILFNBQVNFLElBQUlGLE1BQU0sRUFBRUMsYUFBYUMsSUFBSUQsVUFBVTtJQUU1RUwsY0FBY08sbUJBQU9BLENBQUM7SUFFdEJOLGdCQUFnQk0sbUJBQU9BLENBQUM7SUFFeEJKLGtCQUFrQkksbUJBQU9BLENBQUM7SUFFMUJMLGtCQUFrQkssbUJBQU9BLENBQUM7SUFFMUJDLHFCQUFxQixHQUFHLFNBQVNHLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLE9BQU87UUFDN0QsSUFBSUMsS0FBS0M7UUFDVCxJQUFJTCxRQUFRLE1BQU07WUFDaEIsTUFBTSxJQUFJTSxNQUFNO1FBQ2xCO1FBQ0FILFVBQVVWLE9BQU8sQ0FBQyxHQUFHUSxRQUFRQyxTQUFTQztRQUN0Q0MsTUFBTSxJQUFJZixZQUFZYztRQUN0QkUsT0FBT0QsSUFBSUcsT0FBTyxDQUFDUDtRQUNuQixJQUFJLENBQUNHLFFBQVFLLFFBQVEsRUFBRTtZQUNyQkosSUFBSUssV0FBVyxDQUFDTjtZQUNoQixJQUFJLFFBQVNPLEtBQUssSUFBSSxRQUFVUCxRQUFRUSxLQUFLLElBQUksTUFBTztnQkFDdERQLElBQUlGLE9BQU8sQ0FBQ0M7WUFDZDtRQUNGO1FBQ0EsT0FBT0U7SUFDVDtJQUVBUixvQkFBb0IsR0FBRyxTQUFTTSxPQUFPLEVBQUVVLE1BQU0sRUFBRUMsS0FBSztRQUNwRCxJQUFJQztRQUNKLElBQUlyQixXQUFXUyxVQUFVO1lBQ3ZCWSxPQUFPO2dCQUFDWjtnQkFBU1U7YUFBTyxFQUFFQSxTQUFTRSxJQUFJLENBQUMsRUFBRSxFQUFFRCxRQUFRQyxJQUFJLENBQUMsRUFBRTtZQUMzRFosVUFBVSxDQUFDO1FBQ2I7UUFDQSxJQUFJVSxRQUFRO1lBQ1YsT0FBTyxJQUFJdkIsY0FBY2EsU0FBU1UsUUFBUUM7UUFDNUMsT0FBTztZQUNMLE9BQU8sSUFBSXpCLFlBQVljO1FBQ3pCO0lBQ0Y7SUFFQU4sMkJBQTJCLEdBQUcsU0FBU00sT0FBTztRQUM1QyxPQUFPLElBQUlYLGdCQUFnQlc7SUFDN0I7SUFFQU4sMkJBQTJCLEdBQUcsU0FBU3FCLE1BQU0sRUFBRWYsT0FBTztRQUNwRCxPQUFPLElBQUlaLGdCQUFnQjJCLFFBQVFmO0lBQ3JDO0FBRUYsR0FBR2dCLElBQUksQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy94bWxidWlsZGVyL2xpYi9pbmRleC5qcz82MWU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCBieSBDb2ZmZWVTY3JpcHQgMS4xMi43XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBYTUxEb2N1bWVudCwgWE1MRG9jdW1lbnRDQiwgWE1MU3RyZWFtV3JpdGVyLCBYTUxTdHJpbmdXcml0ZXIsIGFzc2lnbiwgaXNGdW5jdGlvbiwgcmVmO1xuXG4gIHJlZiA9IHJlcXVpcmUoJy4vVXRpbGl0eScpLCBhc3NpZ24gPSByZWYuYXNzaWduLCBpc0Z1bmN0aW9uID0gcmVmLmlzRnVuY3Rpb247XG5cbiAgWE1MRG9jdW1lbnQgPSByZXF1aXJlKCcuL1hNTERvY3VtZW50Jyk7XG5cbiAgWE1MRG9jdW1lbnRDQiA9IHJlcXVpcmUoJy4vWE1MRG9jdW1lbnRDQicpO1xuXG4gIFhNTFN0cmluZ1dyaXRlciA9IHJlcXVpcmUoJy4vWE1MU3RyaW5nV3JpdGVyJyk7XG5cbiAgWE1MU3RyZWFtV3JpdGVyID0gcmVxdWlyZSgnLi9YTUxTdHJlYW1Xcml0ZXInKTtcblxuICBtb2R1bGUuZXhwb3J0cy5jcmVhdGUgPSBmdW5jdGlvbihuYW1lLCB4bWxkZWMsIGRvY3R5cGUsIG9wdGlvbnMpIHtcbiAgICB2YXIgZG9jLCByb290O1xuICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJvb3QgZWxlbWVudCBuZWVkcyBhIG5hbWUuXCIpO1xuICAgIH1cbiAgICBvcHRpb25zID0gYXNzaWduKHt9LCB4bWxkZWMsIGRvY3R5cGUsIG9wdGlvbnMpO1xuICAgIGRvYyA9IG5ldyBYTUxEb2N1bWVudChvcHRpb25zKTtcbiAgICByb290ID0gZG9jLmVsZW1lbnQobmFtZSk7XG4gICAgaWYgKCFvcHRpb25zLmhlYWRsZXNzKSB7XG4gICAgICBkb2MuZGVjbGFyYXRpb24ob3B0aW9ucyk7XG4gICAgICBpZiAoKG9wdGlvbnMucHViSUQgIT0gbnVsbCkgfHwgKG9wdGlvbnMuc3lzSUQgIT0gbnVsbCkpIHtcbiAgICAgICAgZG9jLmRvY3R5cGUob3B0aW9ucyk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByb290O1xuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzLmJlZ2luID0gZnVuY3Rpb24ob3B0aW9ucywgb25EYXRhLCBvbkVuZCkge1xuICAgIHZhciByZWYxO1xuICAgIGlmIChpc0Z1bmN0aW9uKG9wdGlvbnMpKSB7XG4gICAgICByZWYxID0gW29wdGlvbnMsIG9uRGF0YV0sIG9uRGF0YSA9IHJlZjFbMF0sIG9uRW5kID0gcmVmMVsxXTtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG4gICAgaWYgKG9uRGF0YSkge1xuICAgICAgcmV0dXJuIG5ldyBYTUxEb2N1bWVudENCKG9wdGlvbnMsIG9uRGF0YSwgb25FbmQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbmV3IFhNTERvY3VtZW50KG9wdGlvbnMpO1xuICAgIH1cbiAgfTtcblxuICBtb2R1bGUuZXhwb3J0cy5zdHJpbmdXcml0ZXIgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBYTUxTdHJpbmdXcml0ZXIob3B0aW9ucyk7XG4gIH07XG5cbiAgbW9kdWxlLmV4cG9ydHMuc3RyZWFtV3JpdGVyID0gZnVuY3Rpb24oc3RyZWFtLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBYTUxTdHJlYW1Xcml0ZXIoc3RyZWFtLCBvcHRpb25zKTtcbiAgfTtcblxufSkuY2FsbCh0aGlzKTtcbiJdLCJuYW1lcyI6WyJYTUxEb2N1bWVudCIsIlhNTERvY3VtZW50Q0IiLCJYTUxTdHJlYW1Xcml0ZXIiLCJYTUxTdHJpbmdXcml0ZXIiLCJhc3NpZ24iLCJpc0Z1bmN0aW9uIiwicmVmIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGUiLCJuYW1lIiwieG1sZGVjIiwiZG9jdHlwZSIsIm9wdGlvbnMiLCJkb2MiLCJyb290IiwiRXJyb3IiLCJlbGVtZW50IiwiaGVhZGxlc3MiLCJkZWNsYXJhdGlvbiIsInB1YklEIiwic3lzSUQiLCJiZWdpbiIsIm9uRGF0YSIsIm9uRW5kIiwicmVmMSIsInN0cmluZ1dyaXRlciIsInN0cmVhbVdyaXRlciIsInN0cmVhbSIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlbuilder/lib/index.js\n");

/***/ })

};
;