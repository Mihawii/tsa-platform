/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mammoth";
exports.ids = ["vendor-chunks/mammoth"];
exports.modules = {

/***/ "(ssr)/./node_modules/mammoth/lib/document-to-html.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/document-to-html.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar documents = __webpack_require__(/*! ./documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(ssr)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar results = __webpack_require__(/*! ./results */ \"(ssr)/./node_modules/mammoth/lib/results.js\");\nvar images = __webpack_require__(/*! ./images */ \"(ssr)/./node_modules/mammoth/lib/images.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(ssr)/./node_modules/mammoth/lib/html/index.js\");\nvar writers = __webpack_require__(/*! ./writers */ \"(ssr)/./node_modules/mammoth/lib/writers/index.js\");\nexports.DocumentConverter = DocumentConverter;\nfunction DocumentConverter(options) {\n    return {\n        convertToHtml: function(element) {\n            var comments = _.indexBy(element.type === documents.types.document ? element.comments : [], \"commentId\");\n            var conversion = new DocumentConversion(options, comments);\n            return conversion.convertToHtml(element);\n        }\n    };\n}\nfunction DocumentConversion(options, comments) {\n    var noteNumber = 1;\n    var noteReferences = [];\n    var referencedComments = [];\n    options = _.extend({\n        ignoreEmptyParagraphs: true\n    }, options);\n    var idPrefix = options.idPrefix === undefined ? \"\" : options.idPrefix;\n    var ignoreEmptyParagraphs = options.ignoreEmptyParagraphs;\n    var defaultParagraphStyle = htmlPaths.topLevelElement(\"p\");\n    var styleMap = options.styleMap || [];\n    function convertToHtml(document) {\n        var messages = [];\n        var html = elementToHtml(document, messages, {});\n        var deferredNodes = [];\n        walkHtml(html, function(node) {\n            if (node.type === \"deferred\") {\n                deferredNodes.push(node);\n            }\n        });\n        var deferredValues = {};\n        return promises.mapSeries(deferredNodes, function(deferred) {\n            return deferred.value().then(function(value) {\n                deferredValues[deferred.id] = value;\n            });\n        }).then(function() {\n            function replaceDeferred(nodes) {\n                return flatMap(nodes, function(node) {\n                    if (node.type === \"deferred\") {\n                        return deferredValues[node.id];\n                    } else if (node.children) {\n                        return [\n                            _.extend({}, node, {\n                                children: replaceDeferred(node.children)\n                            })\n                        ];\n                    } else {\n                        return [\n                            node\n                        ];\n                    }\n                });\n            }\n            var writer = writers.writer({\n                prettyPrint: options.prettyPrint,\n                outputFormat: options.outputFormat\n            });\n            Html.write(writer, Html.simplify(replaceDeferred(html)));\n            return new results.Result(writer.asString(), messages);\n        });\n    }\n    function convertElements(elements, messages, options) {\n        return flatMap(elements, function(element) {\n            return elementToHtml(element, messages, options);\n        });\n    }\n    function elementToHtml(element, messages, options) {\n        if (!options) {\n            throw new Error(\"options not set\");\n        }\n        var handler = elementConverters[element.type];\n        if (handler) {\n            return handler(element, messages, options);\n        } else {\n            return [];\n        }\n    }\n    function convertParagraph(element, messages, options) {\n        return htmlPathForParagraph(element, messages).wrap(function() {\n            var content = convertElements(element.children, messages, options);\n            if (ignoreEmptyParagraphs) {\n                return content;\n            } else {\n                return [\n                    Html.forceWrite\n                ].concat(content);\n            }\n        });\n    }\n    function htmlPathForParagraph(element, messages) {\n        var style = findStyle(element);\n        if (style) {\n            return style.to;\n        } else {\n            if (element.styleId) {\n                messages.push(unrecognisedStyleWarning(\"paragraph\", element));\n            }\n            return defaultParagraphStyle;\n        }\n    }\n    function convertRun(run, messages, options) {\n        var nodes = function() {\n            return convertElements(run.children, messages, options);\n        };\n        var paths = [];\n        if (run.highlight !== null) {\n            var path = findHtmlPath({\n                type: \"highlight\",\n                color: run.highlight\n            });\n            if (path) {\n                paths.push(path);\n            }\n        }\n        if (run.isSmallCaps) {\n            paths.push(findHtmlPathForRunProperty(\"smallCaps\"));\n        }\n        if (run.isAllCaps) {\n            paths.push(findHtmlPathForRunProperty(\"allCaps\"));\n        }\n        if (run.isStrikethrough) {\n            paths.push(findHtmlPathForRunProperty(\"strikethrough\", \"s\"));\n        }\n        if (run.isUnderline) {\n            paths.push(findHtmlPathForRunProperty(\"underline\"));\n        }\n        if (run.verticalAlignment === documents.verticalAlignment.subscript) {\n            paths.push(htmlPaths.element(\"sub\", {}, {\n                fresh: false\n            }));\n        }\n        if (run.verticalAlignment === documents.verticalAlignment.superscript) {\n            paths.push(htmlPaths.element(\"sup\", {}, {\n                fresh: false\n            }));\n        }\n        if (run.isItalic) {\n            paths.push(findHtmlPathForRunProperty(\"italic\", \"em\"));\n        }\n        if (run.isBold) {\n            paths.push(findHtmlPathForRunProperty(\"bold\", \"strong\"));\n        }\n        var stylePath = htmlPaths.empty;\n        var style = findStyle(run);\n        if (style) {\n            stylePath = style.to;\n        } else if (run.styleId) {\n            messages.push(unrecognisedStyleWarning(\"run\", run));\n        }\n        paths.push(stylePath);\n        paths.forEach(function(path) {\n            nodes = path.wrap.bind(path, nodes);\n        });\n        return nodes();\n    }\n    function findHtmlPathForRunProperty(elementType, defaultTagName) {\n        var path = findHtmlPath({\n            type: elementType\n        });\n        if (path) {\n            return path;\n        } else if (defaultTagName) {\n            return htmlPaths.element(defaultTagName, {}, {\n                fresh: false\n            });\n        } else {\n            return htmlPaths.empty;\n        }\n    }\n    function findHtmlPath(element, defaultPath) {\n        var style = findStyle(element);\n        return style ? style.to : defaultPath;\n    }\n    function findStyle(element) {\n        for(var i = 0; i < styleMap.length; i++){\n            if (styleMap[i].from.matches(element)) {\n                return styleMap[i];\n            }\n        }\n    }\n    function recoveringConvertImage(convertImage) {\n        return function(image, messages) {\n            return promises.attempt(function() {\n                return convertImage(image, messages);\n            }).caught(function(error) {\n                messages.push(results.error(error));\n                return [];\n            });\n        };\n    }\n    function noteHtmlId(note) {\n        return referentHtmlId(note.noteType, note.noteId);\n    }\n    function noteRefHtmlId(note) {\n        return referenceHtmlId(note.noteType, note.noteId);\n    }\n    function referentHtmlId(referenceType, referenceId) {\n        return htmlId(referenceType + \"-\" + referenceId);\n    }\n    function referenceHtmlId(referenceType, referenceId) {\n        return htmlId(referenceType + \"-ref-\" + referenceId);\n    }\n    function htmlId(suffix) {\n        return idPrefix + suffix;\n    }\n    var defaultTablePath = htmlPaths.elements([\n        htmlPaths.element(\"table\", {}, {\n            fresh: true\n        })\n    ]);\n    function convertTable(element, messages, options) {\n        return findHtmlPath(element, defaultTablePath).wrap(function() {\n            return convertTableChildren(element, messages, options);\n        });\n    }\n    function convertTableChildren(element, messages, options) {\n        var bodyIndex = _.findIndex(element.children, function(child) {\n            return !child.type === documents.types.tableRow || !child.isHeader;\n        });\n        if (bodyIndex === -1) {\n            bodyIndex = element.children.length;\n        }\n        var children;\n        if (bodyIndex === 0) {\n            children = convertElements(element.children, messages, _.extend({}, options, {\n                isTableHeader: false\n            }));\n        } else {\n            var headRows = convertElements(element.children.slice(0, bodyIndex), messages, _.extend({}, options, {\n                isTableHeader: true\n            }));\n            var bodyRows = convertElements(element.children.slice(bodyIndex), messages, _.extend({}, options, {\n                isTableHeader: false\n            }));\n            children = [\n                Html.freshElement(\"thead\", {}, headRows),\n                Html.freshElement(\"tbody\", {}, bodyRows)\n            ];\n        }\n        return [\n            Html.forceWrite\n        ].concat(children);\n    }\n    function convertTableRow(element, messages, options) {\n        var children = convertElements(element.children, messages, options);\n        return [\n            Html.freshElement(\"tr\", {}, [\n                Html.forceWrite\n            ].concat(children))\n        ];\n    }\n    function convertTableCell(element, messages, options) {\n        var tagName = options.isTableHeader ? \"th\" : \"td\";\n        var children = convertElements(element.children, messages, options);\n        var attributes = {};\n        if (element.colSpan !== 1) {\n            attributes.colspan = element.colSpan.toString();\n        }\n        if (element.rowSpan !== 1) {\n            attributes.rowspan = element.rowSpan.toString();\n        }\n        return [\n            Html.freshElement(tagName, attributes, [\n                Html.forceWrite\n            ].concat(children))\n        ];\n    }\n    function convertCommentReference(reference, messages, options) {\n        return findHtmlPath(reference, htmlPaths.ignore).wrap(function() {\n            var comment = comments[reference.commentId];\n            var count = referencedComments.length + 1;\n            var label = \"[\" + commentAuthorLabel(comment) + count + \"]\";\n            referencedComments.push({\n                label: label,\n                comment: comment\n            });\n            // TODO: remove duplication with note references\n            return [\n                Html.freshElement(\"a\", {\n                    href: \"#\" + referentHtmlId(\"comment\", reference.commentId),\n                    id: referenceHtmlId(\"comment\", reference.commentId)\n                }, [\n                    Html.text(label)\n                ])\n            ];\n        });\n    }\n    function convertComment(referencedComment, messages, options) {\n        // TODO: remove duplication with note references\n        var label = referencedComment.label;\n        var comment = referencedComment.comment;\n        var body = convertElements(comment.body, messages, options).concat([\n            Html.nonFreshElement(\"p\", {}, [\n                Html.text(\" \"),\n                Html.freshElement(\"a\", {\n                    \"href\": \"#\" + referenceHtmlId(\"comment\", comment.commentId)\n                }, [\n                    Html.text(\"↑\")\n                ])\n            ])\n        ]);\n        return [\n            Html.freshElement(\"dt\", {\n                \"id\": referentHtmlId(\"comment\", comment.commentId)\n            }, [\n                Html.text(\"Comment \" + label)\n            ]),\n            Html.freshElement(\"dd\", {}, body)\n        ];\n    }\n    function convertBreak(element, messages, options) {\n        return htmlPathForBreak(element).wrap(function() {\n            return [];\n        });\n    }\n    function htmlPathForBreak(element) {\n        var style = findStyle(element);\n        if (style) {\n            return style.to;\n        } else if (element.breakType === \"line\") {\n            return htmlPaths.topLevelElement(\"br\");\n        } else {\n            return htmlPaths.empty;\n        }\n    }\n    var elementConverters = {\n        \"document\": function(document, messages, options) {\n            var children = convertElements(document.children, messages, options);\n            var notes = noteReferences.map(function(noteReference) {\n                return document.notes.resolve(noteReference);\n            });\n            var notesNodes = convertElements(notes, messages, options);\n            return children.concat([\n                Html.freshElement(\"ol\", {}, notesNodes),\n                Html.freshElement(\"dl\", {}, flatMap(referencedComments, function(referencedComment) {\n                    return convertComment(referencedComment, messages, options);\n                }))\n            ]);\n        },\n        \"paragraph\": convertParagraph,\n        \"run\": convertRun,\n        \"text\": function(element, messages, options) {\n            return [\n                Html.text(element.value)\n            ];\n        },\n        \"tab\": function(element, messages, options) {\n            return [\n                Html.text(\"\t\")\n            ];\n        },\n        \"hyperlink\": function(element, messages, options) {\n            var href = element.anchor ? \"#\" + htmlId(element.anchor) : element.href;\n            var attributes = {\n                href: href\n            };\n            if (element.targetFrame != null) {\n                attributes.target = element.targetFrame;\n            }\n            var children = convertElements(element.children, messages, options);\n            return [\n                Html.nonFreshElement(\"a\", attributes, children)\n            ];\n        },\n        \"checkbox\": function(element) {\n            var attributes = {\n                type: \"checkbox\"\n            };\n            if (element.checked) {\n                attributes[\"checked\"] = \"checked\";\n            }\n            return [\n                Html.freshElement(\"input\", attributes)\n            ];\n        },\n        \"bookmarkStart\": function(element, messages, options) {\n            var anchor = Html.freshElement(\"a\", {\n                id: htmlId(element.name)\n            }, [\n                Html.forceWrite\n            ]);\n            return [\n                anchor\n            ];\n        },\n        \"noteReference\": function(element, messages, options) {\n            noteReferences.push(element);\n            var anchor = Html.freshElement(\"a\", {\n                href: \"#\" + noteHtmlId(element),\n                id: noteRefHtmlId(element)\n            }, [\n                Html.text(\"[\" + noteNumber++ + \"]\")\n            ]);\n            return [\n                Html.freshElement(\"sup\", {}, [\n                    anchor\n                ])\n            ];\n        },\n        \"note\": function(element, messages, options) {\n            var children = convertElements(element.body, messages, options);\n            var backLink = Html.elementWithTag(htmlPaths.element(\"p\", {}, {\n                fresh: false\n            }), [\n                Html.text(\" \"),\n                Html.freshElement(\"a\", {\n                    href: \"#\" + noteRefHtmlId(element)\n                }, [\n                    Html.text(\"↑\")\n                ])\n            ]);\n            var body = children.concat([\n                backLink\n            ]);\n            return Html.freshElement(\"li\", {\n                id: noteHtmlId(element)\n            }, body);\n        },\n        \"commentReference\": convertCommentReference,\n        \"comment\": convertComment,\n        \"image\": deferredConversion(recoveringConvertImage(options.convertImage || images.dataUri)),\n        \"table\": convertTable,\n        \"tableRow\": convertTableRow,\n        \"tableCell\": convertTableCell,\n        \"break\": convertBreak\n    };\n    return {\n        convertToHtml: convertToHtml\n    };\n}\nvar deferredId = 1;\nfunction deferredConversion(func) {\n    return function(element, messages, options) {\n        return [\n            {\n                type: \"deferred\",\n                id: deferredId++,\n                value: function() {\n                    return func(element, messages, options);\n                }\n            }\n        ];\n    };\n}\nfunction unrecognisedStyleWarning(type, element) {\n    return results.warning(\"Unrecognised \" + type + \" style: '\" + element.styleName + \"'\" + \" (Style ID: \" + element.styleId + \")\");\n}\nfunction flatMap(values, func) {\n    return _.flatten(values.map(func), true);\n}\nfunction walkHtml(nodes, callback) {\n    nodes.forEach(function(node) {\n        callback(node);\n        if (node.children) {\n            walkHtml(node.children, callback);\n        }\n    });\n}\nvar commentAuthorLabel = exports.commentAuthorLabel = function commentAuthorLabel(comment) {\n    return comment.authorInitials || \"\";\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/document-to-html.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/documents.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/documents.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar types = exports.types = {\n    document: \"document\",\n    paragraph: \"paragraph\",\n    run: \"run\",\n    text: \"text\",\n    tab: \"tab\",\n    checkbox: \"checkbox\",\n    hyperlink: \"hyperlink\",\n    noteReference: \"noteReference\",\n    image: \"image\",\n    note: \"note\",\n    commentReference: \"commentReference\",\n    comment: \"comment\",\n    table: \"table\",\n    tableRow: \"tableRow\",\n    tableCell: \"tableCell\",\n    \"break\": \"break\",\n    bookmarkStart: \"bookmarkStart\"\n};\nfunction Document(children, options) {\n    options = options || {};\n    return {\n        type: types.document,\n        children: children,\n        notes: options.notes || new Notes({}),\n        comments: options.comments || []\n    };\n}\nfunction Paragraph(children, properties) {\n    properties = properties || {};\n    var indent = properties.indent || {};\n    return {\n        type: types.paragraph,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null,\n        numbering: properties.numbering || null,\n        alignment: properties.alignment || null,\n        indent: {\n            start: indent.start || null,\n            end: indent.end || null,\n            firstLine: indent.firstLine || null,\n            hanging: indent.hanging || null\n        }\n    };\n}\nfunction Run(children, properties) {\n    properties = properties || {};\n    return {\n        type: types.run,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null,\n        isBold: !!properties.isBold,\n        isUnderline: !!properties.isUnderline,\n        isItalic: !!properties.isItalic,\n        isStrikethrough: !!properties.isStrikethrough,\n        isAllCaps: !!properties.isAllCaps,\n        isSmallCaps: !!properties.isSmallCaps,\n        verticalAlignment: properties.verticalAlignment || verticalAlignment.baseline,\n        font: properties.font || null,\n        fontSize: properties.fontSize || null,\n        highlight: properties.highlight || null\n    };\n}\nvar verticalAlignment = {\n    baseline: \"baseline\",\n    superscript: \"superscript\",\n    subscript: \"subscript\"\n};\nfunction Text(value) {\n    return {\n        type: types.text,\n        value: value\n    };\n}\nfunction Tab() {\n    return {\n        type: types.tab\n    };\n}\nfunction Checkbox(options) {\n    return {\n        type: types.checkbox,\n        checked: options.checked\n    };\n}\nfunction Hyperlink(children, options) {\n    return {\n        type: types.hyperlink,\n        children: children,\n        href: options.href,\n        anchor: options.anchor,\n        targetFrame: options.targetFrame\n    };\n}\nfunction NoteReference(options) {\n    return {\n        type: types.noteReference,\n        noteType: options.noteType,\n        noteId: options.noteId\n    };\n}\nfunction Notes(notes) {\n    this._notes = _.indexBy(notes, function(note) {\n        return noteKey(note.noteType, note.noteId);\n    });\n}\nNotes.prototype.resolve = function(reference) {\n    return this.findNoteByKey(noteKey(reference.noteType, reference.noteId));\n};\nNotes.prototype.findNoteByKey = function(key) {\n    return this._notes[key] || null;\n};\nfunction Note(options) {\n    return {\n        type: types.note,\n        noteType: options.noteType,\n        noteId: options.noteId,\n        body: options.body\n    };\n}\nfunction commentReference(options) {\n    return {\n        type: types.commentReference,\n        commentId: options.commentId\n    };\n}\nfunction comment(options) {\n    return {\n        type: types.comment,\n        commentId: options.commentId,\n        body: options.body,\n        authorName: options.authorName,\n        authorInitials: options.authorInitials\n    };\n}\nfunction noteKey(noteType, id) {\n    return noteType + \"-\" + id;\n}\nfunction Image(options) {\n    return {\n        type: types.image,\n        // `read` is retained for backwards compatibility, but other read\n        // methods should be preferred.\n        read: function(encoding) {\n            if (encoding) {\n                return options.readImage(encoding);\n            } else {\n                return options.readImage().then(function(arrayBuffer) {\n                    return Buffer.from(arrayBuffer);\n                });\n            }\n        },\n        readAsArrayBuffer: function() {\n            return options.readImage();\n        },\n        readAsBase64String: function() {\n            return options.readImage(\"base64\");\n        },\n        readAsBuffer: function() {\n            return options.readImage().then(function(arrayBuffer) {\n                return Buffer.from(arrayBuffer);\n            });\n        },\n        altText: options.altText,\n        contentType: options.contentType\n    };\n}\nfunction Table(children, properties) {\n    properties = properties || {};\n    return {\n        type: types.table,\n        children: children,\n        styleId: properties.styleId || null,\n        styleName: properties.styleName || null\n    };\n}\nfunction TableRow(children, options) {\n    options = options || {};\n    return {\n        type: types.tableRow,\n        children: children,\n        isHeader: options.isHeader || false\n    };\n}\nfunction TableCell(children, options) {\n    options = options || {};\n    return {\n        type: types.tableCell,\n        children: children,\n        colSpan: options.colSpan == null ? 1 : options.colSpan,\n        rowSpan: options.rowSpan == null ? 1 : options.rowSpan\n    };\n}\nfunction Break(breakType) {\n    return {\n        type: types[\"break\"],\n        breakType: breakType\n    };\n}\nfunction BookmarkStart(options) {\n    return {\n        type: types.bookmarkStart,\n        name: options.name\n    };\n}\nexports.document = exports.Document = Document;\nexports.paragraph = exports.Paragraph = Paragraph;\nexports.run = exports.Run = Run;\nexports.text = exports.Text = Text;\nexports.tab = exports.Tab = Tab;\nexports.checkbox = exports.Checkbox = Checkbox;\nexports.Hyperlink = Hyperlink;\nexports.noteReference = exports.NoteReference = NoteReference;\nexports.Notes = Notes;\nexports.Note = Note;\nexports.commentReference = commentReference;\nexports.comment = comment;\nexports.Image = Image;\nexports.Table = Table;\nexports.TableRow = TableRow;\nexports.TableCell = TableCell;\nexports.lineBreak = Break(\"line\");\nexports.pageBreak = Break(\"page\");\nexports.columnBreak = Break(\"column\");\nexports.BookmarkStart = BookmarkStart;\nexports.verticalAlignment = verticalAlignment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/documents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/body-reader.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/body-reader.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.createBodyReader = createBodyReader;\nexports._readNumberingProperties = readNumberingProperties;\nvar dingbatToUnicode = __webpack_require__(/*! dingbat-to-unicode */ \"(ssr)/./node_modules/dingbat-to-unicode/dist/index.js\");\nvar _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar documents = __webpack_require__(/*! ../documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nvar warning = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").warning);\nvar xml = __webpack_require__(/*! ../xml */ \"(ssr)/./node_modules/mammoth/lib/xml/index.js\");\nvar uris = __webpack_require__(/*! ./uris */ \"(ssr)/./node_modules/mammoth/lib/docx/uris.js\");\nfunction createBodyReader(options) {\n    return {\n        readXmlElement: function(element) {\n            return new BodyReader(options).readXmlElement(element);\n        },\n        readXmlElements: function(elements) {\n            return new BodyReader(options).readXmlElements(elements);\n        }\n    };\n}\nfunction BodyReader(options) {\n    var complexFieldStack = [];\n    var currentInstrText = [];\n    // When a paragraph is marked as deleted, its contents should be combined\n    // with the following paragraph. See 17.13.5.15 del (Deleted Paragraph) of\n    // ECMA-376 4th edition Part 1.\n    var deletedParagraphContents = [];\n    var relationships = options.relationships;\n    var contentTypes = options.contentTypes;\n    var docxFile = options.docxFile;\n    var files = options.files;\n    var numbering = options.numbering;\n    var styles = options.styles;\n    function readXmlElements(elements) {\n        var results = elements.map(readXmlElement);\n        return combineResults(results);\n    }\n    function readXmlElement(element) {\n        if (element.type === \"element\") {\n            var handler = xmlElementReaders[element.name];\n            if (handler) {\n                return handler(element);\n            } else if (!Object.prototype.hasOwnProperty.call(ignoreElements, element.name)) {\n                var message = warning(\"An unrecognised element was ignored: \" + element.name);\n                return emptyResultWithMessages([\n                    message\n                ]);\n            }\n        }\n        return emptyResult();\n    }\n    function readParagraphProperties(element) {\n        return readParagraphStyle(element).map(function(style) {\n            return {\n                type: \"paragraphProperties\",\n                styleId: style.styleId,\n                styleName: style.name,\n                alignment: element.firstOrEmpty(\"w:jc\").attributes[\"w:val\"],\n                numbering: readNumberingProperties(style.styleId, element.firstOrEmpty(\"w:numPr\"), numbering),\n                indent: readParagraphIndent(element.firstOrEmpty(\"w:ind\"))\n            };\n        });\n    }\n    function readParagraphIndent(element) {\n        return {\n            start: element.attributes[\"w:start\"] || element.attributes[\"w:left\"],\n            end: element.attributes[\"w:end\"] || element.attributes[\"w:right\"],\n            firstLine: element.attributes[\"w:firstLine\"],\n            hanging: element.attributes[\"w:hanging\"]\n        };\n    }\n    function readRunProperties(element) {\n        return readRunStyle(element).map(function(style) {\n            var fontSizeString = element.firstOrEmpty(\"w:sz\").attributes[\"w:val\"];\n            // w:sz gives the font size in half points, so halve the value to get the size in points\n            var fontSize = /^[0-9]+$/.test(fontSizeString) ? parseInt(fontSizeString, 10) / 2 : null;\n            return {\n                type: \"runProperties\",\n                styleId: style.styleId,\n                styleName: style.name,\n                verticalAlignment: element.firstOrEmpty(\"w:vertAlign\").attributes[\"w:val\"],\n                font: element.firstOrEmpty(\"w:rFonts\").attributes[\"w:ascii\"],\n                fontSize: fontSize,\n                isBold: readBooleanElement(element.first(\"w:b\")),\n                isUnderline: readUnderline(element.first(\"w:u\")),\n                isItalic: readBooleanElement(element.first(\"w:i\")),\n                isStrikethrough: readBooleanElement(element.first(\"w:strike\")),\n                isAllCaps: readBooleanElement(element.first(\"w:caps\")),\n                isSmallCaps: readBooleanElement(element.first(\"w:smallCaps\")),\n                highlight: readHighlightValue(element.firstOrEmpty(\"w:highlight\").attributes[\"w:val\"])\n            };\n        });\n    }\n    function readUnderline(element) {\n        if (element) {\n            var value = element.attributes[\"w:val\"];\n            return value !== undefined && value !== \"false\" && value !== \"0\" && value !== \"none\";\n        } else {\n            return false;\n        }\n    }\n    function readBooleanElement(element) {\n        if (element) {\n            var value = element.attributes[\"w:val\"];\n            return value !== \"false\" && value !== \"0\";\n        } else {\n            return false;\n        }\n    }\n    function readBooleanAttributeValue(value) {\n        return value !== \"false\" && value !== \"0\";\n    }\n    function readHighlightValue(value) {\n        if (!value || value === \"none\") {\n            return null;\n        } else {\n            return value;\n        }\n    }\n    function readParagraphStyle(element) {\n        return readStyle(element, \"w:pStyle\", \"Paragraph\", styles.findParagraphStyleById);\n    }\n    function readRunStyle(element) {\n        return readStyle(element, \"w:rStyle\", \"Run\", styles.findCharacterStyleById);\n    }\n    function readTableStyle(element) {\n        return readStyle(element, \"w:tblStyle\", \"Table\", styles.findTableStyleById);\n    }\n    function readStyle(element, styleTagName, styleType, findStyleById) {\n        var messages = [];\n        var styleElement = element.first(styleTagName);\n        var styleId = null;\n        var name = null;\n        if (styleElement) {\n            styleId = styleElement.attributes[\"w:val\"];\n            if (styleId) {\n                var style = findStyleById(styleId);\n                if (style) {\n                    name = style.name;\n                } else {\n                    messages.push(undefinedStyleWarning(styleType, styleId));\n                }\n            }\n        }\n        return elementResultWithMessages({\n            styleId: styleId,\n            name: name\n        }, messages);\n    }\n    function readFldChar(element) {\n        var type = element.attributes[\"w:fldCharType\"];\n        if (type === \"begin\") {\n            complexFieldStack.push({\n                type: \"begin\",\n                fldChar: element\n            });\n            currentInstrText = [];\n        } else if (type === \"end\") {\n            var complexFieldEnd = complexFieldStack.pop();\n            if (complexFieldEnd.type === \"begin\") {\n                complexFieldEnd = parseCurrentInstrText(complexFieldEnd);\n            }\n            if (complexFieldEnd.type === \"checkbox\") {\n                return elementResult(documents.checkbox({\n                    checked: complexFieldEnd.checked\n                }));\n            }\n        } else if (type === \"separate\") {\n            var complexFieldSeparate = complexFieldStack.pop();\n            var complexField = parseCurrentInstrText(complexFieldSeparate);\n            complexFieldStack.push(complexField);\n        }\n        return emptyResult();\n    }\n    function currentHyperlinkOptions() {\n        var topHyperlink = _.last(complexFieldStack.filter(function(complexField) {\n            return complexField.type === \"hyperlink\";\n        }));\n        return topHyperlink ? topHyperlink.options : null;\n    }\n    function parseCurrentInstrText(complexField) {\n        return parseInstrText(currentInstrText.join(\"\"), complexField.type === \"begin\" ? complexField.fldChar : xml.emptyElement);\n    }\n    function parseInstrText(instrText, fldChar) {\n        var externalLinkResult = /\\s*HYPERLINK \"(.*)\"/.exec(instrText);\n        if (externalLinkResult) {\n            return {\n                type: \"hyperlink\",\n                options: {\n                    href: externalLinkResult[1]\n                }\n            };\n        }\n        var internalLinkResult = /\\s*HYPERLINK\\s+\\\\l\\s+\"(.*)\"/.exec(instrText);\n        if (internalLinkResult) {\n            return {\n                type: \"hyperlink\",\n                options: {\n                    anchor: internalLinkResult[1]\n                }\n            };\n        }\n        var checkboxResult = /\\s*FORMCHECKBOX\\s*/.exec(instrText);\n        if (checkboxResult) {\n            var checkboxElement = fldChar.firstOrEmpty(\"w:ffData\").firstOrEmpty(\"w:checkBox\");\n            var checkedElement = checkboxElement.first(\"w:checked\");\n            var checked = checkedElement == null ? readBooleanElement(checkboxElement.first(\"w:default\")) : readBooleanElement(checkedElement);\n            return {\n                type: \"checkbox\",\n                checked: checked\n            };\n        }\n        return {\n            type: \"unknown\"\n        };\n    }\n    function readInstrText(element) {\n        currentInstrText.push(element.text());\n        return emptyResult();\n    }\n    function readSymbol(element) {\n        // See 17.3.3.30 sym (Symbol Character) of ECMA-376 4th edition Part 1\n        var font = element.attributes[\"w:font\"];\n        var char = element.attributes[\"w:char\"];\n        var unicodeCharacter = dingbatToUnicode.hex(font, char);\n        if (unicodeCharacter == null && /^F0..$/.test(char)) {\n            unicodeCharacter = dingbatToUnicode.hex(font, char.substring(2));\n        }\n        if (unicodeCharacter == null) {\n            return emptyResultWithMessages([\n                warning(\"A w:sym element with an unsupported character was ignored: char \" + char + \" in font \" + font)\n            ]);\n        } else {\n            return elementResult(new documents.Text(unicodeCharacter.string));\n        }\n    }\n    function noteReferenceReader(noteType) {\n        return function(element) {\n            var noteId = element.attributes[\"w:id\"];\n            return elementResult(new documents.NoteReference({\n                noteType: noteType,\n                noteId: noteId\n            }));\n        };\n    }\n    function readCommentReference(element) {\n        return elementResult(documents.commentReference({\n            commentId: element.attributes[\"w:id\"]\n        }));\n    }\n    function readChildElements(element) {\n        return readXmlElements(element.children);\n    }\n    var xmlElementReaders = {\n        \"w:p\": function(element) {\n            var paragraphPropertiesElement = element.firstOrEmpty(\"w:pPr\");\n            var isDeleted = !!paragraphPropertiesElement.firstOrEmpty(\"w:rPr\").first(\"w:del\");\n            if (isDeleted) {\n                element.children.forEach(function(child) {\n                    deletedParagraphContents.push(child);\n                });\n                return emptyResult();\n            } else {\n                var childrenXml = element.children;\n                if (deletedParagraphContents.length > 0) {\n                    childrenXml = deletedParagraphContents.concat(childrenXml);\n                    deletedParagraphContents = [];\n                }\n                return ReadResult.map(readParagraphProperties(paragraphPropertiesElement), readXmlElements(childrenXml), function(properties, children) {\n                    return new documents.Paragraph(children, properties);\n                }).insertExtra();\n            }\n        },\n        \"w:r\": function(element) {\n            return ReadResult.map(readRunProperties(element.firstOrEmpty(\"w:rPr\")), readXmlElements(element.children), function(properties, children) {\n                var hyperlinkOptions = currentHyperlinkOptions();\n                if (hyperlinkOptions !== null) {\n                    children = [\n                        new documents.Hyperlink(children, hyperlinkOptions)\n                    ];\n                }\n                return new documents.Run(children, properties);\n            });\n        },\n        \"w:fldChar\": readFldChar,\n        \"w:instrText\": readInstrText,\n        \"w:t\": function(element) {\n            return elementResult(new documents.Text(element.text()));\n        },\n        \"w:tab\": function(element) {\n            return elementResult(new documents.Tab());\n        },\n        \"w:noBreakHyphen\": function() {\n            return elementResult(new documents.Text(\"‑\"));\n        },\n        \"w:softHyphen\": function(element) {\n            return elementResult(new documents.Text(\"\\xad\"));\n        },\n        \"w:sym\": readSymbol,\n        \"w:hyperlink\": function(element) {\n            var relationshipId = element.attributes[\"r:id\"];\n            var anchor = element.attributes[\"w:anchor\"];\n            return readXmlElements(element.children).map(function(children) {\n                function create(options) {\n                    var targetFrame = element.attributes[\"w:tgtFrame\"] || null;\n                    return new documents.Hyperlink(children, _.extend({\n                        targetFrame: targetFrame\n                    }, options));\n                }\n                if (relationshipId) {\n                    var href = relationships.findTargetByRelationshipId(relationshipId);\n                    if (anchor) {\n                        href = uris.replaceFragment(href, anchor);\n                    }\n                    return create({\n                        href: href\n                    });\n                } else if (anchor) {\n                    return create({\n                        anchor: anchor\n                    });\n                } else {\n                    return children;\n                }\n            });\n        },\n        \"w:tbl\": readTable,\n        \"w:tr\": readTableRow,\n        \"w:tc\": readTableCell,\n        \"w:footnoteReference\": noteReferenceReader(\"footnote\"),\n        \"w:endnoteReference\": noteReferenceReader(\"endnote\"),\n        \"w:commentReference\": readCommentReference,\n        \"w:br\": function(element) {\n            var breakType = element.attributes[\"w:type\"];\n            if (breakType == null || breakType === \"textWrapping\") {\n                return elementResult(documents.lineBreak);\n            } else if (breakType === \"page\") {\n                return elementResult(documents.pageBreak);\n            } else if (breakType === \"column\") {\n                return elementResult(documents.columnBreak);\n            } else {\n                return emptyResultWithMessages([\n                    warning(\"Unsupported break type: \" + breakType)\n                ]);\n            }\n        },\n        \"w:bookmarkStart\": function(element) {\n            var name = element.attributes[\"w:name\"];\n            if (name === \"_GoBack\") {\n                return emptyResult();\n            } else {\n                return elementResult(new documents.BookmarkStart({\n                    name: name\n                }));\n            }\n        },\n        \"mc:AlternateContent\": function(element) {\n            return readChildElements(element.first(\"mc:Fallback\"));\n        },\n        \"w:sdt\": function(element) {\n            var checkbox = element.firstOrEmpty(\"w:sdtPr\").first(\"wordml:checkbox\");\n            if (checkbox) {\n                var checkedElement = checkbox.first(\"wordml:checked\");\n                var isChecked = !!checkedElement && readBooleanAttributeValue(checkedElement.attributes[\"wordml:val\"]);\n                return elementResult(documents.checkbox({\n                    checked: isChecked\n                }));\n            } else {\n                return readXmlElements(element.firstOrEmpty(\"w:sdtContent\").children);\n            }\n        },\n        \"w:ins\": readChildElements,\n        \"w:object\": readChildElements,\n        \"w:smartTag\": readChildElements,\n        \"w:drawing\": readChildElements,\n        \"w:pict\": function(element) {\n            return readChildElements(element).toExtra();\n        },\n        \"v:roundrect\": readChildElements,\n        \"v:shape\": readChildElements,\n        \"v:textbox\": readChildElements,\n        \"w:txbxContent\": readChildElements,\n        \"wp:inline\": readDrawingElement,\n        \"wp:anchor\": readDrawingElement,\n        \"v:imagedata\": readImageData,\n        \"v:group\": readChildElements,\n        \"v:rect\": readChildElements\n    };\n    return {\n        readXmlElement: readXmlElement,\n        readXmlElements: readXmlElements\n    };\n    function readTable(element) {\n        var propertiesResult = readTableProperties(element.firstOrEmpty(\"w:tblPr\"));\n        return readXmlElements(element.children).flatMap(calculateRowSpans).flatMap(function(children) {\n            return propertiesResult.map(function(properties) {\n                return documents.Table(children, properties);\n            });\n        });\n    }\n    function readTableProperties(element) {\n        return readTableStyle(element).map(function(style) {\n            return {\n                styleId: style.styleId,\n                styleName: style.name\n            };\n        });\n    }\n    function readTableRow(element) {\n        var properties = element.firstOrEmpty(\"w:trPr\");\n        var isHeader = !!properties.first(\"w:tblHeader\");\n        return readXmlElements(element.children).map(function(children) {\n            return documents.TableRow(children, {\n                isHeader: isHeader\n            });\n        });\n    }\n    function readTableCell(element) {\n        return readXmlElements(element.children).map(function(children) {\n            var properties = element.firstOrEmpty(\"w:tcPr\");\n            var gridSpan = properties.firstOrEmpty(\"w:gridSpan\").attributes[\"w:val\"];\n            var colSpan = gridSpan ? parseInt(gridSpan, 10) : 1;\n            var cell = documents.TableCell(children, {\n                colSpan: colSpan\n            });\n            cell._vMerge = readVMerge(properties);\n            return cell;\n        });\n    }\n    function readVMerge(properties) {\n        var element = properties.first(\"w:vMerge\");\n        if (element) {\n            var val = element.attributes[\"w:val\"];\n            return val === \"continue\" || !val;\n        } else {\n            return null;\n        }\n    }\n    function calculateRowSpans(rows) {\n        var unexpectedNonRows = _.any(rows, function(row) {\n            return row.type !== documents.types.tableRow;\n        });\n        if (unexpectedNonRows) {\n            return elementResultWithMessages(rows, [\n                warning(\"unexpected non-row element in table, cell merging may be incorrect\")\n            ]);\n        }\n        var unexpectedNonCells = _.any(rows, function(row) {\n            return _.any(row.children, function(cell) {\n                return cell.type !== documents.types.tableCell;\n            });\n        });\n        if (unexpectedNonCells) {\n            return elementResultWithMessages(rows, [\n                warning(\"unexpected non-cell element in table row, cell merging may be incorrect\")\n            ]);\n        }\n        var columns = {};\n        rows.forEach(function(row) {\n            var cellIndex = 0;\n            row.children.forEach(function(cell) {\n                if (cell._vMerge && columns[cellIndex]) {\n                    columns[cellIndex].rowSpan++;\n                } else {\n                    columns[cellIndex] = cell;\n                    cell._vMerge = false;\n                }\n                cellIndex += cell.colSpan;\n            });\n        });\n        rows.forEach(function(row) {\n            row.children = row.children.filter(function(cell) {\n                return !cell._vMerge;\n            });\n            row.children.forEach(function(cell) {\n                delete cell._vMerge;\n            });\n        });\n        return elementResult(rows);\n    }\n    function readDrawingElement(element) {\n        var blips = element.getElementsByTagName(\"a:graphic\").getElementsByTagName(\"a:graphicData\").getElementsByTagName(\"pic:pic\").getElementsByTagName(\"pic:blipFill\").getElementsByTagName(\"a:blip\");\n        return combineResults(blips.map(readBlip.bind(null, element)));\n    }\n    function readBlip(element, blip) {\n        var properties = element.first(\"wp:docPr\").attributes;\n        var altText = isBlank(properties.descr) ? properties.title : properties.descr;\n        var blipImageFile = findBlipImageFile(blip);\n        if (blipImageFile === null) {\n            return emptyResultWithMessages([\n                warning(\"Could not find image file for a:blip element\")\n            ]);\n        } else {\n            return readImage(blipImageFile, altText);\n        }\n    }\n    function isBlank(value) {\n        return value == null || /^\\s*$/.test(value);\n    }\n    function findBlipImageFile(blip) {\n        var embedRelationshipId = blip.attributes[\"r:embed\"];\n        var linkRelationshipId = blip.attributes[\"r:link\"];\n        if (embedRelationshipId) {\n            return findEmbeddedImageFile(embedRelationshipId);\n        } else if (linkRelationshipId) {\n            var imagePath = relationships.findTargetByRelationshipId(linkRelationshipId);\n            return {\n                path: imagePath,\n                read: files.read.bind(files, imagePath)\n            };\n        } else {\n            return null;\n        }\n    }\n    function readImageData(element) {\n        var relationshipId = element.attributes[\"r:id\"];\n        if (relationshipId) {\n            return readImage(findEmbeddedImageFile(relationshipId), element.attributes[\"o:title\"]);\n        } else {\n            return emptyResultWithMessages([\n                warning(\"A v:imagedata element without a relationship ID was ignored\")\n            ]);\n        }\n    }\n    function findEmbeddedImageFile(relationshipId) {\n        var path = uris.uriToZipEntryName(\"word\", relationships.findTargetByRelationshipId(relationshipId));\n        return {\n            path: path,\n            read: docxFile.read.bind(docxFile, path)\n        };\n    }\n    function readImage(imageFile, altText) {\n        var contentType = contentTypes.findContentType(imageFile.path);\n        var image = documents.Image({\n            readImage: imageFile.read,\n            altText: altText,\n            contentType: contentType\n        });\n        var warnings = supportedImageTypes[contentType] ? [] : warning(\"Image of type \" + contentType + \" is unlikely to display in web browsers\");\n        return elementResultWithMessages(image, warnings);\n    }\n    function undefinedStyleWarning(type, styleId) {\n        return warning(type + \" style with ID \" + styleId + \" was referenced but not defined in the document\");\n    }\n}\nfunction readNumberingProperties(styleId, element, numbering) {\n    var level = element.firstOrEmpty(\"w:ilvl\").attributes[\"w:val\"];\n    var numId = element.firstOrEmpty(\"w:numId\").attributes[\"w:val\"];\n    if (level !== undefined && numId !== undefined) {\n        return numbering.findLevel(numId, level);\n    }\n    if (styleId != null) {\n        var levelByStyleId = numbering.findLevelByParagraphStyleId(styleId);\n        if (levelByStyleId != null) {\n            return levelByStyleId;\n        }\n    }\n    return null;\n}\nvar supportedImageTypes = {\n    \"image/png\": true,\n    \"image/gif\": true,\n    \"image/jpeg\": true,\n    \"image/svg+xml\": true,\n    \"image/tiff\": true\n};\nvar ignoreElements = {\n    \"office-word:wrap\": true,\n    \"v:shadow\": true,\n    \"v:shapetype\": true,\n    \"w:annotationRef\": true,\n    \"w:bookmarkEnd\": true,\n    \"w:sectPr\": true,\n    \"w:proofErr\": true,\n    \"w:lastRenderedPageBreak\": true,\n    \"w:commentRangeStart\": true,\n    \"w:commentRangeEnd\": true,\n    \"w:del\": true,\n    \"w:footnoteRef\": true,\n    \"w:endnoteRef\": true,\n    \"w:pPr\": true,\n    \"w:rPr\": true,\n    \"w:tblPr\": true,\n    \"w:tblGrid\": true,\n    \"w:trPr\": true,\n    \"w:tcPr\": true\n};\nfunction emptyResultWithMessages(messages) {\n    return new ReadResult(null, null, messages);\n}\nfunction emptyResult() {\n    return new ReadResult(null);\n}\nfunction elementResult(element) {\n    return new ReadResult(element);\n}\nfunction elementResultWithMessages(element, messages) {\n    return new ReadResult(element, null, messages);\n}\nfunction ReadResult(element, extra, messages) {\n    this.value = element || [];\n    this.extra = extra || [];\n    this._result = new Result({\n        element: this.value,\n        extra: extra\n    }, messages);\n    this.messages = this._result.messages;\n}\nReadResult.prototype.toExtra = function() {\n    return new ReadResult(null, joinElements(this.extra, this.value), this.messages);\n};\nReadResult.prototype.insertExtra = function() {\n    var extra = this.extra;\n    if (extra && extra.length) {\n        return new ReadResult(joinElements(this.value, extra), null, this.messages);\n    } else {\n        return this;\n    }\n};\nReadResult.prototype.map = function(func) {\n    var result = this._result.map(function(value) {\n        return func(value.element);\n    });\n    return new ReadResult(result.value, this.extra, result.messages);\n};\nReadResult.prototype.flatMap = function(func) {\n    var result = this._result.flatMap(function(value) {\n        return func(value.element)._result;\n    });\n    return new ReadResult(result.value.element, joinElements(this.extra, result.value.extra), result.messages);\n};\nReadResult.map = function(first, second, func) {\n    return new ReadResult(func(first.value, second.value), joinElements(first.extra, second.extra), first.messages.concat(second.messages));\n};\nfunction combineResults(results) {\n    var result = Result.combine(_.pluck(results, \"_result\"));\n    return new ReadResult(_.flatten(_.pluck(result.value, \"element\")), _.filter(_.flatten(_.pluck(result.value, \"extra\")), identity), result.messages);\n}\nfunction joinElements(first, second) {\n    return _.flatten([\n        first,\n        second\n    ]);\n}\nfunction identity(value) {\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/body-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/comments-reader.js":
/*!**********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/comments-reader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var documents = __webpack_require__(/*! ../documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nfunction createCommentsReader(bodyReader) {\n    function readCommentsXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:comment\").map(readCommentElement));\n    }\n    function readCommentElement(element) {\n        var id = element.attributes[\"w:id\"];\n        function readOptionalAttribute(name) {\n            return (element.attributes[name] || \"\").trim() || null;\n        }\n        return bodyReader.readXmlElements(element.children).map(function(body) {\n            return documents.comment({\n                commentId: id,\n                body: body,\n                authorName: readOptionalAttribute(\"w:author\"),\n                authorInitials: readOptionalAttribute(\"w:initials\")\n            });\n        });\n    }\n    return readCommentsXml;\n}\nexports.createCommentsReader = createCommentsReader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9jb21tZW50cy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBRXpDLFNBQVNFLHFCQUFxQkMsVUFBVTtJQUNwQyxTQUFTQyxnQkFBZ0JDLE9BQU87UUFDNUIsT0FBT0osT0FBT0ssT0FBTyxDQUFDRCxRQUFRRSxvQkFBb0IsQ0FBQyxhQUM5Q0MsR0FBRyxDQUFDQztJQUNiO0lBRUEsU0FBU0EsbUJBQW1CSixPQUFPO1FBQy9CLElBQUlLLEtBQUtMLFFBQVFNLFVBQVUsQ0FBQyxPQUFPO1FBRW5DLFNBQVNDLHNCQUFzQkMsSUFBSTtZQUMvQixPQUFPLENBQUNSLFFBQVFNLFVBQVUsQ0FBQ0UsS0FBSyxJQUFJLEVBQUMsRUFBR0MsSUFBSSxNQUFNO1FBQ3REO1FBRUEsT0FBT1gsV0FBV1ksZUFBZSxDQUFDVixRQUFRVyxRQUFRLEVBQzdDUixHQUFHLENBQUMsU0FBU1MsSUFBSTtZQUNkLE9BQU9sQixVQUFVbUIsT0FBTyxDQUFDO2dCQUNyQkMsV0FBV1Q7Z0JBQ1hPLE1BQU1BO2dCQUNORyxZQUFZUixzQkFBc0I7Z0JBQ2xDUyxnQkFBZ0JULHNCQUFzQjtZQUMxQztRQUNKO0lBQ1I7SUFFQSxPQUFPUjtBQUNYO0FBRUFrQiw0QkFBNEIsR0FBR3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvY29tbWVudHMtcmVhZGVyLmpzP2JmMjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvY3VtZW50cyA9IHJlcXVpcmUoXCIuLi9kb2N1bWVudHNcIik7XG52YXIgUmVzdWx0ID0gcmVxdWlyZShcIi4uL3Jlc3VsdHNcIikuUmVzdWx0O1xuXG5mdW5jdGlvbiBjcmVhdGVDb21tZW50c1JlYWRlcihib2R5UmVhZGVyKSB7XG4gICAgZnVuY3Rpb24gcmVhZENvbW1lbnRzWG1sKGVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIFJlc3VsdC5jb21iaW5lKGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ3OmNvbW1lbnRcIilcbiAgICAgICAgICAgIC5tYXAocmVhZENvbW1lbnRFbGVtZW50KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVhZENvbW1lbnRFbGVtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGlkID0gZWxlbWVudC5hdHRyaWJ1dGVzW1widzppZFwiXTtcblxuICAgICAgICBmdW5jdGlvbiByZWFkT3B0aW9uYWxBdHRyaWJ1dGUobmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIChlbGVtZW50LmF0dHJpYnV0ZXNbbmFtZV0gfHwgXCJcIikudHJpbSgpIHx8IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYm9keVJlYWRlci5yZWFkWG1sRWxlbWVudHMoZWxlbWVudC5jaGlsZHJlbilcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24oYm9keSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkb2N1bWVudHMuY29tbWVudCh7XG4gICAgICAgICAgICAgICAgICAgIGNvbW1lbnRJZDogaWQsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IGJvZHksXG4gICAgICAgICAgICAgICAgICAgIGF1dGhvck5hbWU6IHJlYWRPcHRpb25hbEF0dHJpYnV0ZShcInc6YXV0aG9yXCIpLFxuICAgICAgICAgICAgICAgICAgICBhdXRob3JJbml0aWFsczogcmVhZE9wdGlvbmFsQXR0cmlidXRlKFwidzppbml0aWFsc1wiKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZWFkQ29tbWVudHNYbWw7XG59XG5cbmV4cG9ydHMuY3JlYXRlQ29tbWVudHNSZWFkZXIgPSBjcmVhdGVDb21tZW50c1JlYWRlcjtcbiJdLCJuYW1lcyI6WyJkb2N1bWVudHMiLCJyZXF1aXJlIiwiUmVzdWx0IiwiY3JlYXRlQ29tbWVudHNSZWFkZXIiLCJib2R5UmVhZGVyIiwicmVhZENvbW1lbnRzWG1sIiwiZWxlbWVudCIsImNvbWJpbmUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIm1hcCIsInJlYWRDb21tZW50RWxlbWVudCIsImlkIiwiYXR0cmlidXRlcyIsInJlYWRPcHRpb25hbEF0dHJpYnV0ZSIsIm5hbWUiLCJ0cmltIiwicmVhZFhtbEVsZW1lbnRzIiwiY2hpbGRyZW4iLCJib2R5IiwiY29tbWVudCIsImNvbW1lbnRJZCIsImF1dGhvck5hbWUiLCJhdXRob3JJbml0aWFscyIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/comments-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/content-types-reader.js":
/*!***************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/content-types-reader.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readContentTypesFromXml = readContentTypesFromXml;\nvar fallbackContentTypes = {\n    \"png\": \"png\",\n    \"gif\": \"gif\",\n    \"jpeg\": \"jpeg\",\n    \"jpg\": \"jpeg\",\n    \"tif\": \"tiff\",\n    \"tiff\": \"tiff\",\n    \"bmp\": \"bmp\"\n};\nexports.defaultContentTypes = contentTypes({}, {});\nfunction readContentTypesFromXml(element) {\n    var extensionDefaults = {};\n    var overrides = {};\n    element.children.forEach(function(child) {\n        if (child.name === \"content-types:Default\") {\n            extensionDefaults[child.attributes.Extension] = child.attributes.ContentType;\n        }\n        if (child.name === \"content-types:Override\") {\n            var name = child.attributes.PartName;\n            if (name.charAt(0) === \"/\") {\n                name = name.substring(1);\n            }\n            overrides[name] = child.attributes.ContentType;\n        }\n    });\n    return contentTypes(overrides, extensionDefaults);\n}\nfunction contentTypes(overrides, extensionDefaults) {\n    return {\n        findContentType: function(path) {\n            var overrideContentType = overrides[path];\n            if (overrideContentType) {\n                return overrideContentType;\n            } else {\n                var pathParts = path.split(\".\");\n                var extension = pathParts[pathParts.length - 1];\n                if (extensionDefaults.hasOwnProperty(extension)) {\n                    return extensionDefaults[extension];\n                } else {\n                    var fallback = fallbackContentTypes[extension.toLowerCase()];\n                    if (fallback) {\n                        return \"image/\" + fallback;\n                    } else {\n                        return null;\n                    }\n                }\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9jb250ZW50LXR5cGVzLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEsK0JBQStCLEdBQUdDO0FBRWxDLElBQUlDLHVCQUF1QjtJQUN2QixPQUFPO0lBQ1AsT0FBTztJQUNQLFFBQVE7SUFDUixPQUFPO0lBQ1AsT0FBTztJQUNQLFFBQVE7SUFDUixPQUFPO0FBQ1g7QUFFQUYsMkJBQTJCLEdBQUdJLGFBQWEsQ0FBQyxHQUFHLENBQUM7QUFHaEQsU0FBU0gsd0JBQXdCSSxPQUFPO0lBQ3BDLElBQUlDLG9CQUFvQixDQUFDO0lBQ3pCLElBQUlDLFlBQVksQ0FBQztJQUVqQkYsUUFBUUcsUUFBUSxDQUFDQyxPQUFPLENBQUMsU0FBU0MsS0FBSztRQUNuQyxJQUFJQSxNQUFNQyxJQUFJLEtBQUsseUJBQXlCO1lBQ3hDTCxpQkFBaUIsQ0FBQ0ksTUFBTUUsVUFBVSxDQUFDQyxTQUFTLENBQUMsR0FBR0gsTUFBTUUsVUFBVSxDQUFDRSxXQUFXO1FBQ2hGO1FBQ0EsSUFBSUosTUFBTUMsSUFBSSxLQUFLLDBCQUEwQjtZQUN6QyxJQUFJQSxPQUFPRCxNQUFNRSxVQUFVLENBQUNHLFFBQVE7WUFDcEMsSUFBSUosS0FBS0ssTUFBTSxDQUFDLE9BQU8sS0FBSztnQkFDeEJMLE9BQU9BLEtBQUtNLFNBQVMsQ0FBQztZQUMxQjtZQUNBVixTQUFTLENBQUNJLEtBQUssR0FBR0QsTUFBTUUsVUFBVSxDQUFDRSxXQUFXO1FBQ2xEO0lBQ0o7SUFDQSxPQUFPVixhQUFhRyxXQUFXRDtBQUNuQztBQUVBLFNBQVNGLGFBQWFHLFNBQVMsRUFBRUQsaUJBQWlCO0lBQzlDLE9BQU87UUFDSFksaUJBQWlCLFNBQVNDLElBQUk7WUFDMUIsSUFBSUMsc0JBQXNCYixTQUFTLENBQUNZLEtBQUs7WUFDekMsSUFBSUMscUJBQXFCO2dCQUNyQixPQUFPQTtZQUNYLE9BQU87Z0JBQ0gsSUFBSUMsWUFBWUYsS0FBS0csS0FBSyxDQUFDO2dCQUMzQixJQUFJQyxZQUFZRixTQUFTLENBQUNBLFVBQVVHLE1BQU0sR0FBRyxFQUFFO2dCQUMvQyxJQUFJbEIsa0JBQWtCbUIsY0FBYyxDQUFDRixZQUFZO29CQUM3QyxPQUFPakIsaUJBQWlCLENBQUNpQixVQUFVO2dCQUN2QyxPQUFPO29CQUNILElBQUlHLFdBQVd4QixvQkFBb0IsQ0FBQ3FCLFVBQVVJLFdBQVcsR0FBRztvQkFDNUQsSUFBSUQsVUFBVTt3QkFDVixPQUFPLFdBQVdBO29CQUN0QixPQUFPO3dCQUNILE9BQU87b0JBQ1g7Z0JBQ0o7WUFDSjtRQUNKO0lBQ0o7QUFFSiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L2NvbnRlbnQtdHlwZXMtcmVhZGVyLmpzP2I5ZTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5yZWFkQ29udGVudFR5cGVzRnJvbVhtbCA9IHJlYWRDb250ZW50VHlwZXNGcm9tWG1sO1xuXG52YXIgZmFsbGJhY2tDb250ZW50VHlwZXMgPSB7XG4gICAgXCJwbmdcIjogXCJwbmdcIixcbiAgICBcImdpZlwiOiBcImdpZlwiLFxuICAgIFwianBlZ1wiOiBcImpwZWdcIixcbiAgICBcImpwZ1wiOiBcImpwZWdcIixcbiAgICBcInRpZlwiOiBcInRpZmZcIixcbiAgICBcInRpZmZcIjogXCJ0aWZmXCIsXG4gICAgXCJibXBcIjogXCJibXBcIlxufTtcblxuZXhwb3J0cy5kZWZhdWx0Q29udGVudFR5cGVzID0gY29udGVudFR5cGVzKHt9LCB7fSk7XG5cblxuZnVuY3Rpb24gcmVhZENvbnRlbnRUeXBlc0Zyb21YbWwoZWxlbWVudCkge1xuICAgIHZhciBleHRlbnNpb25EZWZhdWx0cyA9IHt9O1xuICAgIHZhciBvdmVycmlkZXMgPSB7fTtcbiAgICBcbiAgICBlbGVtZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgaWYgKGNoaWxkLm5hbWUgPT09IFwiY29udGVudC10eXBlczpEZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGV4dGVuc2lvbkRlZmF1bHRzW2NoaWxkLmF0dHJpYnV0ZXMuRXh0ZW5zaW9uXSA9IGNoaWxkLmF0dHJpYnV0ZXMuQ29udGVudFR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoaWxkLm5hbWUgPT09IFwiY29udGVudC10eXBlczpPdmVycmlkZVwiKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IGNoaWxkLmF0dHJpYnV0ZXMuUGFydE5hbWU7XG4gICAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwiL1wiKSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyaW5nKDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3ZlcnJpZGVzW25hbWVdID0gY2hpbGQuYXR0cmlidXRlcy5Db250ZW50VHlwZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBjb250ZW50VHlwZXMob3ZlcnJpZGVzLCBleHRlbnNpb25EZWZhdWx0cyk7XG59XG5cbmZ1bmN0aW9uIGNvbnRlbnRUeXBlcyhvdmVycmlkZXMsIGV4dGVuc2lvbkRlZmF1bHRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZmluZENvbnRlbnRUeXBlOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICAgICAgICB2YXIgb3ZlcnJpZGVDb250ZW50VHlwZSA9IG92ZXJyaWRlc1twYXRoXTtcbiAgICAgICAgICAgIGlmIChvdmVycmlkZUNvbnRlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG92ZXJyaWRlQ29udGVudFR5cGU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBwYXRoUGFydHMgPSBwYXRoLnNwbGl0KFwiLlwiKTtcbiAgICAgICAgICAgICAgICB2YXIgZXh0ZW5zaW9uID0gcGF0aFBhcnRzW3BhdGhQYXJ0cy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgICAgICBpZiAoZXh0ZW5zaW9uRGVmYXVsdHMuaGFzT3duUHJvcGVydHkoZXh0ZW5zaW9uKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXh0ZW5zaW9uRGVmYXVsdHNbZXh0ZW5zaW9uXTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZmFsbGJhY2sgPSBmYWxsYmFja0NvbnRlbnRUeXBlc1tleHRlbnNpb24udG9Mb3dlckNhc2UoKV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChmYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiaW1hZ2UvXCIgKyBmYWxsYmFjaztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwicmVhZENvbnRlbnRUeXBlc0Zyb21YbWwiLCJmYWxsYmFja0NvbnRlbnRUeXBlcyIsImRlZmF1bHRDb250ZW50VHlwZXMiLCJjb250ZW50VHlwZXMiLCJlbGVtZW50IiwiZXh0ZW5zaW9uRGVmYXVsdHMiLCJvdmVycmlkZXMiLCJjaGlsZHJlbiIsImZvckVhY2giLCJjaGlsZCIsIm5hbWUiLCJhdHRyaWJ1dGVzIiwiRXh0ZW5zaW9uIiwiQ29udGVudFR5cGUiLCJQYXJ0TmFtZSIsImNoYXJBdCIsInN1YnN0cmluZyIsImZpbmRDb250ZW50VHlwZSIsInBhdGgiLCJvdmVycmlkZUNvbnRlbnRUeXBlIiwicGF0aFBhcnRzIiwic3BsaXQiLCJleHRlbnNpb24iLCJsZW5ndGgiLCJoYXNPd25Qcm9wZXJ0eSIsImZhbGxiYWNrIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/content-types-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/document-xml-reader.js":
/*!**************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/document-xml-reader.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.DocumentXmlReader = DocumentXmlReader;\nvar documents = __webpack_require__(/*! ../documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nfunction DocumentXmlReader(options) {\n    var bodyReader = options.bodyReader;\n    function convertXmlToDocument(element) {\n        var body = element.first(\"w:body\");\n        if (body == null) {\n            throw new Error(\"Could not find the body element: are you sure this is a docx file?\");\n        }\n        var result = bodyReader.readXmlElements(body.children).map(function(children) {\n            return new documents.Document(children, {\n                notes: options.notes,\n                comments: options.comments\n            });\n        });\n        return new Result(result.value, result.messages);\n    }\n    return {\n        convertXmlToDocument: convertXmlToDocument\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9kb2N1bWVudC14bWwtcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBQSx5QkFBeUIsR0FBR0M7QUFFNUIsSUFBSUMsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBR3pDLFNBQVNGLGtCQUFrQkksT0FBTztJQUM5QixJQUFJQyxhQUFhRCxRQUFRQyxVQUFVO0lBRW5DLFNBQVNDLHFCQUFxQkMsT0FBTztRQUNqQyxJQUFJQyxPQUFPRCxRQUFRRSxLQUFLLENBQUM7UUFFekIsSUFBSUQsUUFBUSxNQUFNO1lBQ2QsTUFBTSxJQUFJRSxNQUFNO1FBQ3BCO1FBRUEsSUFBSUMsU0FBU04sV0FBV08sZUFBZSxDQUFDSixLQUFLSyxRQUFRLEVBQ2hEQyxHQUFHLENBQUMsU0FBU0QsUUFBUTtZQUNsQixPQUFPLElBQUlaLFVBQVVjLFFBQVEsQ0FBQ0YsVUFBVTtnQkFDcENHLE9BQU9aLFFBQVFZLEtBQUs7Z0JBQ3BCQyxVQUFVYixRQUFRYSxRQUFRO1lBQzlCO1FBQ0o7UUFDSixPQUFPLElBQUlkLE9BQU9RLE9BQU9PLEtBQUssRUFBRVAsT0FBT1EsUUFBUTtJQUNuRDtJQUVBLE9BQU87UUFDSGIsc0JBQXNCQTtJQUMxQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvZG9jdW1lbnQteG1sLXJlYWRlci5qcz8xODU2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuRG9jdW1lbnRYbWxSZWFkZXIgPSBEb2N1bWVudFhtbFJlYWRlcjtcblxudmFyIGRvY3VtZW50cyA9IHJlcXVpcmUoXCIuLi9kb2N1bWVudHNcIik7XG52YXIgUmVzdWx0ID0gcmVxdWlyZShcIi4uL3Jlc3VsdHNcIikuUmVzdWx0O1xuXG5cbmZ1bmN0aW9uIERvY3VtZW50WG1sUmVhZGVyKG9wdGlvbnMpIHtcbiAgICB2YXIgYm9keVJlYWRlciA9IG9wdGlvbnMuYm9keVJlYWRlcjtcblxuICAgIGZ1bmN0aW9uIGNvbnZlcnRYbWxUb0RvY3VtZW50KGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGJvZHkgPSBlbGVtZW50LmZpcnN0KFwidzpib2R5XCIpO1xuXG4gICAgICAgIGlmIChib2R5ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBmaW5kIHRoZSBib2R5IGVsZW1lbnQ6IGFyZSB5b3Ugc3VyZSB0aGlzIGlzIGEgZG9jeCBmaWxlP1wiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZXN1bHQgPSBib2R5UmVhZGVyLnJlYWRYbWxFbGVtZW50cyhib2R5LmNoaWxkcmVuKVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbihjaGlsZHJlbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgZG9jdW1lbnRzLkRvY3VtZW50KGNoaWxkcmVuLCB7XG4gICAgICAgICAgICAgICAgICAgIG5vdGVzOiBvcHRpb25zLm5vdGVzLFxuICAgICAgICAgICAgICAgICAgICBjb21tZW50czogb3B0aW9ucy5jb21tZW50c1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgUmVzdWx0KHJlc3VsdC52YWx1ZSwgcmVzdWx0Lm1lc3NhZ2VzKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBjb252ZXJ0WG1sVG9Eb2N1bWVudDogY29udmVydFhtbFRvRG9jdW1lbnRcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJEb2N1bWVudFhtbFJlYWRlciIsImRvY3VtZW50cyIsInJlcXVpcmUiLCJSZXN1bHQiLCJvcHRpb25zIiwiYm9keVJlYWRlciIsImNvbnZlcnRYbWxUb0RvY3VtZW50IiwiZWxlbWVudCIsImJvZHkiLCJmaXJzdCIsIkVycm9yIiwicmVzdWx0IiwicmVhZFhtbEVsZW1lbnRzIiwiY2hpbGRyZW4iLCJtYXAiLCJEb2N1bWVudCIsIm5vdGVzIiwiY29tbWVudHMiLCJ2YWx1ZSIsIm1lc3NhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/document-xml-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/docx-reader.js":
/*!******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/docx-reader.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.read = read;\nexports._findPartPaths = findPartPaths;\nvar promises = __webpack_require__(/*! ../promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar documents = __webpack_require__(/*! ../documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nvar zipfile = __webpack_require__(/*! ../zipfile */ \"(ssr)/./node_modules/mammoth/lib/zipfile.js\");\nvar readXmlFromZipFile = (__webpack_require__(/*! ./office-xml-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/office-xml-reader.js\").readXmlFromZipFile);\nvar createBodyReader = (__webpack_require__(/*! ./body-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/body-reader.js\").createBodyReader);\nvar DocumentXmlReader = (__webpack_require__(/*! ./document-xml-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/document-xml-reader.js\").DocumentXmlReader);\nvar relationshipsReader = __webpack_require__(/*! ./relationships-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/relationships-reader.js\");\nvar contentTypesReader = __webpack_require__(/*! ./content-types-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/content-types-reader.js\");\nvar numberingXml = __webpack_require__(/*! ./numbering-xml */ \"(ssr)/./node_modules/mammoth/lib/docx/numbering-xml.js\");\nvar stylesReader = __webpack_require__(/*! ./styles-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/styles-reader.js\");\nvar notesReader = __webpack_require__(/*! ./notes-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/notes-reader.js\");\nvar commentsReader = __webpack_require__(/*! ./comments-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/comments-reader.js\");\nvar Files = (__webpack_require__(/*! ./files */ \"(ssr)/./node_modules/mammoth/lib/docx/files.js\").Files);\nfunction read(docxFile, input) {\n    input = input || {};\n    return promises.props({\n        contentTypes: readContentTypesFromZipFile(docxFile),\n        partPaths: findPartPaths(docxFile),\n        docxFile: docxFile,\n        files: input.path ? Files.relativeToFile(input.path) : new Files(null)\n    }).also(function(result) {\n        return {\n            styles: readStylesFromZipFile(docxFile, result.partPaths.styles)\n        };\n    }).also(function(result) {\n        return {\n            numbering: readNumberingFromZipFile(docxFile, result.partPaths.numbering, result.styles)\n        };\n    }).also(function(result) {\n        return {\n            footnotes: readXmlFileWithBody(result.partPaths.footnotes, result, function(bodyReader, xml) {\n                if (xml) {\n                    return notesReader.createFootnotesReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            }),\n            endnotes: readXmlFileWithBody(result.partPaths.endnotes, result, function(bodyReader, xml) {\n                if (xml) {\n                    return notesReader.createEndnotesReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            }),\n            comments: readXmlFileWithBody(result.partPaths.comments, result, function(bodyReader, xml) {\n                if (xml) {\n                    return commentsReader.createCommentsReader(bodyReader)(xml);\n                } else {\n                    return new Result([]);\n                }\n            })\n        };\n    }).also(function(result) {\n        return {\n            notes: result.footnotes.flatMap(function(footnotes) {\n                return result.endnotes.map(function(endnotes) {\n                    return new documents.Notes(footnotes.concat(endnotes));\n                });\n            })\n        };\n    }).then(function(result) {\n        return readXmlFileWithBody(result.partPaths.mainDocument, result, function(bodyReader, xml) {\n            return result.notes.flatMap(function(notes) {\n                return result.comments.flatMap(function(comments) {\n                    var reader = new DocumentXmlReader({\n                        bodyReader: bodyReader,\n                        notes: notes,\n                        comments: comments\n                    });\n                    return reader.convertXmlToDocument(xml);\n                });\n            });\n        });\n    });\n}\nfunction findPartPaths(docxFile) {\n    return readPackageRelationships(docxFile).then(function(packageRelationships) {\n        var mainDocumentPath = findPartPath({\n            docxFile: docxFile,\n            relationships: packageRelationships,\n            relationshipType: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n            basePath: \"\",\n            fallbackPath: \"word/document.xml\"\n        });\n        if (!docxFile.exists(mainDocumentPath)) {\n            throw new Error(\"Could not find main document part. Are you sure this is a valid .docx file?\");\n        }\n        return xmlFileReader({\n            filename: relationshipsFilename(mainDocumentPath),\n            readElement: relationshipsReader.readRelationships,\n            defaultValue: relationshipsReader.defaultValue\n        })(docxFile).then(function(documentRelationships) {\n            function findPartRelatedToMainDocument(name) {\n                return findPartPath({\n                    docxFile: docxFile,\n                    relationships: documentRelationships,\n                    relationshipType: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/\" + name,\n                    basePath: zipfile.splitPath(mainDocumentPath).dirname,\n                    fallbackPath: \"word/\" + name + \".xml\"\n                });\n            }\n            return {\n                mainDocument: mainDocumentPath,\n                comments: findPartRelatedToMainDocument(\"comments\"),\n                endnotes: findPartRelatedToMainDocument(\"endnotes\"),\n                footnotes: findPartRelatedToMainDocument(\"footnotes\"),\n                numbering: findPartRelatedToMainDocument(\"numbering\"),\n                styles: findPartRelatedToMainDocument(\"styles\")\n            };\n        });\n    });\n}\nfunction findPartPath(options) {\n    var docxFile = options.docxFile;\n    var relationships = options.relationships;\n    var relationshipType = options.relationshipType;\n    var basePath = options.basePath;\n    var fallbackPath = options.fallbackPath;\n    var targets = relationships.findTargetsByType(relationshipType);\n    var normalisedTargets = targets.map(function(target) {\n        return stripPrefix(zipfile.joinPath(basePath, target), \"/\");\n    });\n    var validTargets = normalisedTargets.filter(function(target) {\n        return docxFile.exists(target);\n    });\n    if (validTargets.length === 0) {\n        return fallbackPath;\n    } else {\n        return validTargets[0];\n    }\n}\nfunction stripPrefix(value, prefix) {\n    if (value.substring(0, prefix.length) === prefix) {\n        return value.substring(prefix.length);\n    } else {\n        return value;\n    }\n}\nfunction xmlFileReader(options) {\n    return function(zipFile) {\n        return readXmlFromZipFile(zipFile, options.filename).then(function(element) {\n            return element ? options.readElement(element) : options.defaultValue;\n        });\n    };\n}\nfunction readXmlFileWithBody(filename, options, func) {\n    var readRelationshipsFromZipFile = xmlFileReader({\n        filename: relationshipsFilename(filename),\n        readElement: relationshipsReader.readRelationships,\n        defaultValue: relationshipsReader.defaultValue\n    });\n    return readRelationshipsFromZipFile(options.docxFile).then(function(relationships) {\n        var bodyReader = new createBodyReader({\n            relationships: relationships,\n            contentTypes: options.contentTypes,\n            docxFile: options.docxFile,\n            numbering: options.numbering,\n            styles: options.styles,\n            files: options.files\n        });\n        return readXmlFromZipFile(options.docxFile, filename).then(function(xml) {\n            return func(bodyReader, xml);\n        });\n    });\n}\nfunction relationshipsFilename(filename) {\n    var split = zipfile.splitPath(filename);\n    return zipfile.joinPath(split.dirname, \"_rels\", split.basename + \".rels\");\n}\nvar readContentTypesFromZipFile = xmlFileReader({\n    filename: \"[Content_Types].xml\",\n    readElement: contentTypesReader.readContentTypesFromXml,\n    defaultValue: contentTypesReader.defaultContentTypes\n});\nfunction readNumberingFromZipFile(zipFile, path, styles) {\n    return xmlFileReader({\n        filename: path,\n        readElement: function(element) {\n            return numberingXml.readNumberingXml(element, {\n                styles: styles\n            });\n        },\n        defaultValue: numberingXml.defaultNumbering\n    })(zipFile);\n}\nfunction readStylesFromZipFile(zipFile, path) {\n    return xmlFileReader({\n        filename: path,\n        readElement: stylesReader.readStylesXml,\n        defaultValue: stylesReader.defaultStyles\n    })(zipFile);\n}\nvar readPackageRelationships = xmlFileReader({\n    filename: \"_rels/.rels\",\n    readElement: relationshipsReader.readRelationships,\n    defaultValue: relationshipsReader.defaultValue\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9kb2N4LXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEsWUFBWSxHQUFHQztBQUNmRCxzQkFBc0IsR0FBR0c7QUFFekIsSUFBSUMsV0FBV0MsbUJBQU9BLENBQUMsaUVBQWE7QUFDcEMsSUFBSUMsWUFBWUQsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUUsU0FBU0YsNkZBQTRCO0FBQ3pDLElBQUlHLFVBQVVILG1CQUFPQSxDQUFDLCtEQUFZO0FBRWxDLElBQUlJLHFCQUFxQkosaUlBQWlEO0FBQzFFLElBQUlLLG1CQUFtQkwsbUhBQXlDO0FBQ2hFLElBQUlNLG9CQUFvQk4sb0lBQWtEO0FBQzFFLElBQUlPLHNCQUFzQlAsbUJBQU9BLENBQUMsNkZBQXdCO0FBQzFELElBQUlRLHFCQUFxQlIsbUJBQU9BLENBQUMsNkZBQXdCO0FBQ3pELElBQUlTLGVBQWVULG1CQUFPQSxDQUFDLCtFQUFpQjtBQUM1QyxJQUFJVSxlQUFlVixtQkFBT0EsQ0FBQywrRUFBaUI7QUFDNUMsSUFBSVcsY0FBY1gsbUJBQU9BLENBQUMsNkVBQWdCO0FBQzFDLElBQUlZLGlCQUFpQlosbUJBQU9BLENBQUMsbUZBQW1CO0FBQ2hELElBQUlhLFFBQVFiLDRGQUF3QjtBQUdwQyxTQUFTSixLQUFLa0IsUUFBUSxFQUFFQyxLQUFLO0lBQ3pCQSxRQUFRQSxTQUFTLENBQUM7SUFFbEIsT0FBT2hCLFNBQVNpQixLQUFLLENBQUM7UUFDbEJDLGNBQWNDLDRCQUE0Qko7UUFDMUNLLFdBQVdyQixjQUFjZ0I7UUFDekJBLFVBQVVBO1FBQ1ZNLE9BQU9MLE1BQU1NLElBQUksR0FBR1IsTUFBTVMsY0FBYyxDQUFDUCxNQUFNTSxJQUFJLElBQUksSUFBSVIsTUFBTTtJQUNyRSxHQUFHVSxJQUFJLENBQUMsU0FBU0MsTUFBTTtRQUNuQixPQUFPO1lBQ0hDLFFBQVFDLHNCQUFzQlosVUFBVVUsT0FBT0wsU0FBUyxDQUFDTSxNQUFNO1FBQ25FO0lBQ0osR0FBR0YsSUFBSSxDQUFDLFNBQVNDLE1BQU07UUFDbkIsT0FBTztZQUNIRyxXQUFXQyx5QkFBeUJkLFVBQVVVLE9BQU9MLFNBQVMsQ0FBQ1EsU0FBUyxFQUFFSCxPQUFPQyxNQUFNO1FBQzNGO0lBQ0osR0FBR0YsSUFBSSxDQUFDLFNBQVNDLE1BQU07UUFDbkIsT0FBTztZQUNISyxXQUFXQyxvQkFBb0JOLE9BQU9MLFNBQVMsQ0FBQ1UsU0FBUyxFQUFFTCxRQUFRLFNBQVNPLFVBQVUsRUFBRUMsR0FBRztnQkFDdkYsSUFBSUEsS0FBSztvQkFDTCxPQUFPckIsWUFBWXNCLHFCQUFxQixDQUFDRixZQUFZQztnQkFDekQsT0FBTztvQkFDSCxPQUFPLElBQUk5QixPQUFPLEVBQUU7Z0JBQ3hCO1lBQ0o7WUFDQWdDLFVBQVVKLG9CQUFvQk4sT0FBT0wsU0FBUyxDQUFDZSxRQUFRLEVBQUVWLFFBQVEsU0FBU08sVUFBVSxFQUFFQyxHQUFHO2dCQUNyRixJQUFJQSxLQUFLO29CQUNMLE9BQU9yQixZQUFZd0Isb0JBQW9CLENBQUNKLFlBQVlDO2dCQUN4RCxPQUFPO29CQUNILE9BQU8sSUFBSTlCLE9BQU8sRUFBRTtnQkFDeEI7WUFDSjtZQUNBa0MsVUFBVU4sb0JBQW9CTixPQUFPTCxTQUFTLENBQUNpQixRQUFRLEVBQUVaLFFBQVEsU0FBU08sVUFBVSxFQUFFQyxHQUFHO2dCQUNyRixJQUFJQSxLQUFLO29CQUNMLE9BQU9wQixlQUFleUIsb0JBQW9CLENBQUNOLFlBQVlDO2dCQUMzRCxPQUFPO29CQUNILE9BQU8sSUFBSTlCLE9BQU8sRUFBRTtnQkFDeEI7WUFDSjtRQUNKO0lBQ0osR0FBR3FCLElBQUksQ0FBQyxTQUFTQyxNQUFNO1FBQ25CLE9BQU87WUFDSGMsT0FBT2QsT0FBT0ssU0FBUyxDQUFDVSxPQUFPLENBQUMsU0FBU1YsU0FBUztnQkFDOUMsT0FBT0wsT0FBT1UsUUFBUSxDQUFDTSxHQUFHLENBQUMsU0FBU04sUUFBUTtvQkFDeEMsT0FBTyxJQUFJakMsVUFBVXdDLEtBQUssQ0FBQ1osVUFBVWEsTUFBTSxDQUFDUjtnQkFDaEQ7WUFDSjtRQUNKO0lBQ0osR0FBR1MsSUFBSSxDQUFDLFNBQVNuQixNQUFNO1FBQ25CLE9BQU9NLG9CQUFvQk4sT0FBT0wsU0FBUyxDQUFDeUIsWUFBWSxFQUFFcEIsUUFBUSxTQUFTTyxVQUFVLEVBQUVDLEdBQUc7WUFDdEYsT0FBT1IsT0FBT2MsS0FBSyxDQUFDQyxPQUFPLENBQUMsU0FBU0QsS0FBSztnQkFDdEMsT0FBT2QsT0FBT1ksUUFBUSxDQUFDRyxPQUFPLENBQUMsU0FBU0gsUUFBUTtvQkFDNUMsSUFBSVMsU0FBUyxJQUFJdkMsa0JBQWtCO3dCQUMvQnlCLFlBQVlBO3dCQUNaTyxPQUFPQTt3QkFDUEYsVUFBVUE7b0JBQ2Q7b0JBQ0EsT0FBT1MsT0FBT0Msb0JBQW9CLENBQUNkO2dCQUN2QztZQUNKO1FBQ0o7SUFDSjtBQUNKO0FBRUEsU0FBU2xDLGNBQWNnQixRQUFRO0lBQzNCLE9BQU9pQyx5QkFBeUJqQyxVQUFVNkIsSUFBSSxDQUFDLFNBQVNLLG9CQUFvQjtRQUN4RSxJQUFJQyxtQkFBbUJDLGFBQWE7WUFDaENwQyxVQUFVQTtZQUNWcUMsZUFBZUg7WUFDZkksa0JBQWtCO1lBQ2xCQyxVQUFVO1lBQ1ZDLGNBQWM7UUFDbEI7UUFFQSxJQUFJLENBQUN4QyxTQUFTeUMsTUFBTSxDQUFDTixtQkFBbUI7WUFDcEMsTUFBTSxJQUFJTyxNQUFNO1FBQ3BCO1FBRUEsT0FBT0MsY0FBYztZQUNqQkMsVUFBVUMsc0JBQXNCVjtZQUNoQ1csYUFBYXJELG9CQUFvQnNELGlCQUFpQjtZQUNsREMsY0FBY3ZELG9CQUFvQnVELFlBQVk7UUFDbEQsR0FBR2hELFVBQVU2QixJQUFJLENBQUMsU0FBU29CLHFCQUFxQjtZQUM1QyxTQUFTQyw4QkFBOEJDLElBQUk7Z0JBQ3ZDLE9BQU9mLGFBQWE7b0JBQ2hCcEMsVUFBVUE7b0JBQ1ZxQyxlQUFlWTtvQkFDZlgsa0JBQWtCLHlFQUF5RWE7b0JBQzNGWixVQUFVbEQsUUFBUStELFNBQVMsQ0FBQ2pCLGtCQUFrQmtCLE9BQU87b0JBQ3JEYixjQUFjLFVBQVVXLE9BQU87Z0JBQ25DO1lBQ0o7WUFFQSxPQUFPO2dCQUNIckIsY0FBY0s7Z0JBQ2RiLFVBQVU0Qiw4QkFBOEI7Z0JBQ3hDOUIsVUFBVThCLDhCQUE4QjtnQkFDeENuQyxXQUFXbUMsOEJBQThCO2dCQUN6Q3JDLFdBQVdxQyw4QkFBOEI7Z0JBQ3pDdkMsUUFBUXVDLDhCQUE4QjtZQUMxQztRQUNKO0lBQ0o7QUFDSjtBQUVBLFNBQVNkLGFBQWFrQixPQUFPO0lBQ3pCLElBQUl0RCxXQUFXc0QsUUFBUXRELFFBQVE7SUFDL0IsSUFBSXFDLGdCQUFnQmlCLFFBQVFqQixhQUFhO0lBQ3pDLElBQUlDLG1CQUFtQmdCLFFBQVFoQixnQkFBZ0I7SUFDL0MsSUFBSUMsV0FBV2UsUUFBUWYsUUFBUTtJQUMvQixJQUFJQyxlQUFlYyxRQUFRZCxZQUFZO0lBRXZDLElBQUllLFVBQVVsQixjQUFjbUIsaUJBQWlCLENBQUNsQjtJQUM5QyxJQUFJbUIsb0JBQW9CRixRQUFRN0IsR0FBRyxDQUFDLFNBQVNnQyxNQUFNO1FBQy9DLE9BQU9DLFlBQVl0RSxRQUFRdUUsUUFBUSxDQUFDckIsVUFBVW1CLFNBQVM7SUFDM0Q7SUFDQSxJQUFJRyxlQUFlSixrQkFBa0JLLE1BQU0sQ0FBQyxTQUFTSixNQUFNO1FBQ3ZELE9BQU8xRCxTQUFTeUMsTUFBTSxDQUFDaUI7SUFDM0I7SUFDQSxJQUFJRyxhQUFhRSxNQUFNLEtBQUssR0FBRztRQUMzQixPQUFPdkI7SUFDWCxPQUFPO1FBQ0gsT0FBT3FCLFlBQVksQ0FBQyxFQUFFO0lBQzFCO0FBQ0o7QUFFQSxTQUFTRixZQUFZSyxLQUFLLEVBQUVDLE1BQU07SUFDOUIsSUFBSUQsTUFBTUUsU0FBUyxDQUFDLEdBQUdELE9BQU9GLE1BQU0sTUFBTUUsUUFBUTtRQUM5QyxPQUFPRCxNQUFNRSxTQUFTLENBQUNELE9BQU9GLE1BQU07SUFDeEMsT0FBTztRQUNILE9BQU9DO0lBQ1g7QUFDSjtBQUVBLFNBQVNyQixjQUFjVyxPQUFPO0lBQzFCLE9BQU8sU0FBU2EsT0FBTztRQUNuQixPQUFPN0UsbUJBQW1CNkUsU0FBU2IsUUFBUVYsUUFBUSxFQUM5Q2YsSUFBSSxDQUFDLFNBQVN1QyxPQUFPO1lBQ2xCLE9BQU9BLFVBQVVkLFFBQVFSLFdBQVcsQ0FBQ3NCLFdBQVdkLFFBQVFOLFlBQVk7UUFDeEU7SUFDUjtBQUNKO0FBRUEsU0FBU2hDLG9CQUFvQjRCLFFBQVEsRUFBRVUsT0FBTyxFQUFFZSxJQUFJO0lBQ2hELElBQUlDLCtCQUErQjNCLGNBQWM7UUFDN0NDLFVBQVVDLHNCQUFzQkQ7UUFDaENFLGFBQWFyRCxvQkFBb0JzRCxpQkFBaUI7UUFDbERDLGNBQWN2RCxvQkFBb0J1RCxZQUFZO0lBQ2xEO0lBRUEsT0FBT3NCLDZCQUE2QmhCLFFBQVF0RCxRQUFRLEVBQUU2QixJQUFJLENBQUMsU0FBU1EsYUFBYTtRQUM3RSxJQUFJcEIsYUFBYSxJQUFJMUIsaUJBQWlCO1lBQ2xDOEMsZUFBZUE7WUFDZmxDLGNBQWNtRCxRQUFRbkQsWUFBWTtZQUNsQ0gsVUFBVXNELFFBQVF0RCxRQUFRO1lBQzFCYSxXQUFXeUMsUUFBUXpDLFNBQVM7WUFDNUJGLFFBQVEyQyxRQUFRM0MsTUFBTTtZQUN0QkwsT0FBT2dELFFBQVFoRCxLQUFLO1FBQ3hCO1FBQ0EsT0FBT2hCLG1CQUFtQmdFLFFBQVF0RCxRQUFRLEVBQUU0QyxVQUN2Q2YsSUFBSSxDQUFDLFNBQVNYLEdBQUc7WUFDZCxPQUFPbUQsS0FBS3BELFlBQVlDO1FBQzVCO0lBQ1I7QUFDSjtBQUVBLFNBQVMyQixzQkFBc0JELFFBQVE7SUFDbkMsSUFBSTJCLFFBQVFsRixRQUFRK0QsU0FBUyxDQUFDUjtJQUM5QixPQUFPdkQsUUFBUXVFLFFBQVEsQ0FBQ1csTUFBTWxCLE9BQU8sRUFBRSxTQUFTa0IsTUFBTUMsUUFBUSxHQUFHO0FBQ3JFO0FBRUEsSUFBSXBFLDhCQUE4QnVDLGNBQWM7SUFDNUNDLFVBQVU7SUFDVkUsYUFBYXBELG1CQUFtQitFLHVCQUF1QjtJQUN2RHpCLGNBQWN0RCxtQkFBbUJnRixtQkFBbUI7QUFDeEQ7QUFFQSxTQUFTNUQseUJBQXlCcUQsT0FBTyxFQUFFNUQsSUFBSSxFQUFFSSxNQUFNO0lBQ25ELE9BQU9nQyxjQUFjO1FBQ2pCQyxVQUFVckM7UUFDVnVDLGFBQWEsU0FBU3NCLE9BQU87WUFDekIsT0FBT3pFLGFBQWFnRixnQkFBZ0IsQ0FBQ1AsU0FBUztnQkFBQ3pELFFBQVFBO1lBQU07UUFDakU7UUFDQXFDLGNBQWNyRCxhQUFhaUYsZ0JBQWdCO0lBQy9DLEdBQUdUO0FBQ1A7QUFFQSxTQUFTdkQsc0JBQXNCdUQsT0FBTyxFQUFFNUQsSUFBSTtJQUN4QyxPQUFPb0MsY0FBYztRQUNqQkMsVUFBVXJDO1FBQ1Z1QyxhQUFhbEQsYUFBYWlGLGFBQWE7UUFDdkM3QixjQUFjcEQsYUFBYWtGLGFBQWE7SUFDNUMsR0FBR1g7QUFDUDtBQUVBLElBQUlsQywyQkFBMkJVLGNBQWM7SUFDekNDLFVBQVU7SUFDVkUsYUFBYXJELG9CQUFvQnNELGlCQUFpQjtJQUNsREMsY0FBY3ZELG9CQUFvQnVELFlBQVk7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9kb2N4LXJlYWRlci5qcz81MDY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMucmVhZCA9IHJlYWQ7XG5leHBvcnRzLl9maW5kUGFydFBhdGhzID0gZmluZFBhcnRQYXRocztcblxudmFyIHByb21pc2VzID0gcmVxdWlyZShcIi4uL3Byb21pc2VzXCIpO1xudmFyIGRvY3VtZW50cyA9IHJlcXVpcmUoXCIuLi9kb2N1bWVudHNcIik7XG52YXIgUmVzdWx0ID0gcmVxdWlyZShcIi4uL3Jlc3VsdHNcIikuUmVzdWx0O1xudmFyIHppcGZpbGUgPSByZXF1aXJlKFwiLi4vemlwZmlsZVwiKTtcblxudmFyIHJlYWRYbWxGcm9tWmlwRmlsZSA9IHJlcXVpcmUoXCIuL29mZmljZS14bWwtcmVhZGVyXCIpLnJlYWRYbWxGcm9tWmlwRmlsZTtcbnZhciBjcmVhdGVCb2R5UmVhZGVyID0gcmVxdWlyZShcIi4vYm9keS1yZWFkZXJcIikuY3JlYXRlQm9keVJlYWRlcjtcbnZhciBEb2N1bWVudFhtbFJlYWRlciA9IHJlcXVpcmUoXCIuL2RvY3VtZW50LXhtbC1yZWFkZXJcIikuRG9jdW1lbnRYbWxSZWFkZXI7XG52YXIgcmVsYXRpb25zaGlwc1JlYWRlciA9IHJlcXVpcmUoXCIuL3JlbGF0aW9uc2hpcHMtcmVhZGVyXCIpO1xudmFyIGNvbnRlbnRUeXBlc1JlYWRlciA9IHJlcXVpcmUoXCIuL2NvbnRlbnQtdHlwZXMtcmVhZGVyXCIpO1xudmFyIG51bWJlcmluZ1htbCA9IHJlcXVpcmUoXCIuL251bWJlcmluZy14bWxcIik7XG52YXIgc3R5bGVzUmVhZGVyID0gcmVxdWlyZShcIi4vc3R5bGVzLXJlYWRlclwiKTtcbnZhciBub3Rlc1JlYWRlciA9IHJlcXVpcmUoXCIuL25vdGVzLXJlYWRlclwiKTtcbnZhciBjb21tZW50c1JlYWRlciA9IHJlcXVpcmUoXCIuL2NvbW1lbnRzLXJlYWRlclwiKTtcbnZhciBGaWxlcyA9IHJlcXVpcmUoXCIuL2ZpbGVzXCIpLkZpbGVzO1xuXG5cbmZ1bmN0aW9uIHJlYWQoZG9jeEZpbGUsIGlucHV0KSB7XG4gICAgaW5wdXQgPSBpbnB1dCB8fCB7fTtcblxuICAgIHJldHVybiBwcm9taXNlcy5wcm9wcyh7XG4gICAgICAgIGNvbnRlbnRUeXBlczogcmVhZENvbnRlbnRUeXBlc0Zyb21aaXBGaWxlKGRvY3hGaWxlKSxcbiAgICAgICAgcGFydFBhdGhzOiBmaW5kUGFydFBhdGhzKGRvY3hGaWxlKSxcbiAgICAgICAgZG9jeEZpbGU6IGRvY3hGaWxlLFxuICAgICAgICBmaWxlczogaW5wdXQucGF0aCA/IEZpbGVzLnJlbGF0aXZlVG9GaWxlKGlucHV0LnBhdGgpIDogbmV3IEZpbGVzKG51bGwpXG4gICAgfSkuYWxzbyhmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0eWxlczogcmVhZFN0eWxlc0Zyb21aaXBGaWxlKGRvY3hGaWxlLCByZXN1bHQucGFydFBhdGhzLnN0eWxlcylcbiAgICAgICAgfTtcbiAgICB9KS5hbHNvKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbnVtYmVyaW5nOiByZWFkTnVtYmVyaW5nRnJvbVppcEZpbGUoZG9jeEZpbGUsIHJlc3VsdC5wYXJ0UGF0aHMubnVtYmVyaW5nLCByZXN1bHQuc3R5bGVzKVxuICAgICAgICB9O1xuICAgIH0pLmFsc28oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmb290bm90ZXM6IHJlYWRYbWxGaWxlV2l0aEJvZHkocmVzdWx0LnBhcnRQYXRocy5mb290bm90ZXMsIHJlc3VsdCwgZnVuY3Rpb24oYm9keVJlYWRlciwgeG1sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHhtbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbm90ZXNSZWFkZXIuY3JlYXRlRm9vdG5vdGVzUmVhZGVyKGJvZHlSZWFkZXIpKHhtbCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXN1bHQoW10pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZW5kbm90ZXM6IHJlYWRYbWxGaWxlV2l0aEJvZHkocmVzdWx0LnBhcnRQYXRocy5lbmRub3RlcywgcmVzdWx0LCBmdW5jdGlvbihib2R5UmVhZGVyLCB4bWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoeG1sKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBub3Rlc1JlYWRlci5jcmVhdGVFbmRub3Rlc1JlYWRlcihib2R5UmVhZGVyKSh4bWwpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVzdWx0KFtdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGNvbW1lbnRzOiByZWFkWG1sRmlsZVdpdGhCb2R5KHJlc3VsdC5wYXJ0UGF0aHMuY29tbWVudHMsIHJlc3VsdCwgZnVuY3Rpb24oYm9keVJlYWRlciwgeG1sKSB7XG4gICAgICAgICAgICAgICAgaWYgKHhtbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tbWVudHNSZWFkZXIuY3JlYXRlQ29tbWVudHNSZWFkZXIoYm9keVJlYWRlcikoeG1sKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlc3VsdChbXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfTtcbiAgICB9KS5hbHNvKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbm90ZXM6IHJlc3VsdC5mb290bm90ZXMuZmxhdE1hcChmdW5jdGlvbihmb290bm90ZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0LmVuZG5vdGVzLm1hcChmdW5jdGlvbihlbmRub3Rlcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IGRvY3VtZW50cy5Ob3Rlcyhmb290bm90ZXMuY29uY2F0KGVuZG5vdGVzKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIHJldHVybiByZWFkWG1sRmlsZVdpdGhCb2R5KHJlc3VsdC5wYXJ0UGF0aHMubWFpbkRvY3VtZW50LCByZXN1bHQsIGZ1bmN0aW9uKGJvZHlSZWFkZXIsIHhtbCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5ub3Rlcy5mbGF0TWFwKGZ1bmN0aW9uKG5vdGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5jb21tZW50cy5mbGF0TWFwKGZ1bmN0aW9uKGNvbW1lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRG9jdW1lbnRYbWxSZWFkZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9keVJlYWRlcjogYm9keVJlYWRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vdGVzOiBub3RlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1lbnRzOiBjb21tZW50c1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRlci5jb252ZXJ0WG1sVG9Eb2N1bWVudCh4bWwpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBmaW5kUGFydFBhdGhzKGRvY3hGaWxlKSB7XG4gICAgcmV0dXJuIHJlYWRQYWNrYWdlUmVsYXRpb25zaGlwcyhkb2N4RmlsZSkudGhlbihmdW5jdGlvbihwYWNrYWdlUmVsYXRpb25zaGlwcykge1xuICAgICAgICB2YXIgbWFpbkRvY3VtZW50UGF0aCA9IGZpbmRQYXJ0UGF0aCh7XG4gICAgICAgICAgICBkb2N4RmlsZTogZG9jeEZpbGUsXG4gICAgICAgICAgICByZWxhdGlvbnNoaXBzOiBwYWNrYWdlUmVsYXRpb25zaGlwcyxcbiAgICAgICAgICAgIHJlbGF0aW9uc2hpcFR5cGU6IFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL29mZmljZURvY3VtZW50LzIwMDYvcmVsYXRpb25zaGlwcy9vZmZpY2VEb2N1bWVudFwiLFxuICAgICAgICAgICAgYmFzZVBhdGg6IFwiXCIsXG4gICAgICAgICAgICBmYWxsYmFja1BhdGg6IFwid29yZC9kb2N1bWVudC54bWxcIlxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWRvY3hGaWxlLmV4aXN0cyhtYWluRG9jdW1lbnRQYXRoKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgbWFpbiBkb2N1bWVudCBwYXJ0LiBBcmUgeW91IHN1cmUgdGhpcyBpcyBhIHZhbGlkIC5kb2N4IGZpbGU/XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHhtbEZpbGVSZWFkZXIoe1xuICAgICAgICAgICAgZmlsZW5hbWU6IHJlbGF0aW9uc2hpcHNGaWxlbmFtZShtYWluRG9jdW1lbnRQYXRoKSxcbiAgICAgICAgICAgIHJlYWRFbGVtZW50OiByZWxhdGlvbnNoaXBzUmVhZGVyLnJlYWRSZWxhdGlvbnNoaXBzLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiByZWxhdGlvbnNoaXBzUmVhZGVyLmRlZmF1bHRWYWx1ZVxuICAgICAgICB9KShkb2N4RmlsZSkudGhlbihmdW5jdGlvbihkb2N1bWVudFJlbGF0aW9uc2hpcHMpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGZpbmRQYXJ0UmVsYXRlZFRvTWFpbkRvY3VtZW50KG5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmluZFBhcnRQYXRoKHtcbiAgICAgICAgICAgICAgICAgICAgZG9jeEZpbGU6IGRvY3hGaWxlLFxuICAgICAgICAgICAgICAgICAgICByZWxhdGlvbnNoaXBzOiBkb2N1bWVudFJlbGF0aW9uc2hpcHMsXG4gICAgICAgICAgICAgICAgICAgIHJlbGF0aW9uc2hpcFR5cGU6IFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL29mZmljZURvY3VtZW50LzIwMDYvcmVsYXRpb25zaGlwcy9cIiArIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGJhc2VQYXRoOiB6aXBmaWxlLnNwbGl0UGF0aChtYWluRG9jdW1lbnRQYXRoKS5kaXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICBmYWxsYmFja1BhdGg6IFwid29yZC9cIiArIG5hbWUgKyBcIi54bWxcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1haW5Eb2N1bWVudDogbWFpbkRvY3VtZW50UGF0aCxcbiAgICAgICAgICAgICAgICBjb21tZW50czogZmluZFBhcnRSZWxhdGVkVG9NYWluRG9jdW1lbnQoXCJjb21tZW50c1wiKSxcbiAgICAgICAgICAgICAgICBlbmRub3RlczogZmluZFBhcnRSZWxhdGVkVG9NYWluRG9jdW1lbnQoXCJlbmRub3Rlc1wiKSxcbiAgICAgICAgICAgICAgICBmb290bm90ZXM6IGZpbmRQYXJ0UmVsYXRlZFRvTWFpbkRvY3VtZW50KFwiZm9vdG5vdGVzXCIpLFxuICAgICAgICAgICAgICAgIG51bWJlcmluZzogZmluZFBhcnRSZWxhdGVkVG9NYWluRG9jdW1lbnQoXCJudW1iZXJpbmdcIiksXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBmaW5kUGFydFJlbGF0ZWRUb01haW5Eb2N1bWVudChcInN0eWxlc1wiKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGZpbmRQYXJ0UGF0aChvcHRpb25zKSB7XG4gICAgdmFyIGRvY3hGaWxlID0gb3B0aW9ucy5kb2N4RmlsZTtcbiAgICB2YXIgcmVsYXRpb25zaGlwcyA9IG9wdGlvbnMucmVsYXRpb25zaGlwcztcbiAgICB2YXIgcmVsYXRpb25zaGlwVHlwZSA9IG9wdGlvbnMucmVsYXRpb25zaGlwVHlwZTtcbiAgICB2YXIgYmFzZVBhdGggPSBvcHRpb25zLmJhc2VQYXRoO1xuICAgIHZhciBmYWxsYmFja1BhdGggPSBvcHRpb25zLmZhbGxiYWNrUGF0aDtcblxuICAgIHZhciB0YXJnZXRzID0gcmVsYXRpb25zaGlwcy5maW5kVGFyZ2V0c0J5VHlwZShyZWxhdGlvbnNoaXBUeXBlKTtcbiAgICB2YXIgbm9ybWFsaXNlZFRhcmdldHMgPSB0YXJnZXRzLm1hcChmdW5jdGlvbih0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIHN0cmlwUHJlZml4KHppcGZpbGUuam9pblBhdGgoYmFzZVBhdGgsIHRhcmdldCksIFwiL1wiKTtcbiAgICB9KTtcbiAgICB2YXIgdmFsaWRUYXJnZXRzID0gbm9ybWFsaXNlZFRhcmdldHMuZmlsdGVyKGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICByZXR1cm4gZG9jeEZpbGUuZXhpc3RzKHRhcmdldCk7XG4gICAgfSk7XG4gICAgaWYgKHZhbGlkVGFyZ2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrUGF0aDtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdmFsaWRUYXJnZXRzWzBdO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gc3RyaXBQcmVmaXgodmFsdWUsIHByZWZpeCkge1xuICAgIGlmICh2YWx1ZS5zdWJzdHJpbmcoMCwgcHJlZml4Lmxlbmd0aCkgPT09IHByZWZpeCkge1xuICAgICAgICByZXR1cm4gdmFsdWUuc3Vic3RyaW5nKHByZWZpeC5sZW5ndGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHhtbEZpbGVSZWFkZXIob3B0aW9ucykge1xuICAgIHJldHVybiBmdW5jdGlvbih6aXBGaWxlKSB7XG4gICAgICAgIHJldHVybiByZWFkWG1sRnJvbVppcEZpbGUoemlwRmlsZSwgb3B0aW9ucy5maWxlbmFtZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudCA/IG9wdGlvbnMucmVhZEVsZW1lbnQoZWxlbWVudCkgOiBvcHRpb25zLmRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIHJlYWRYbWxGaWxlV2l0aEJvZHkoZmlsZW5hbWUsIG9wdGlvbnMsIGZ1bmMpIHtcbiAgICB2YXIgcmVhZFJlbGF0aW9uc2hpcHNGcm9tWmlwRmlsZSA9IHhtbEZpbGVSZWFkZXIoe1xuICAgICAgICBmaWxlbmFtZTogcmVsYXRpb25zaGlwc0ZpbGVuYW1lKGZpbGVuYW1lKSxcbiAgICAgICAgcmVhZEVsZW1lbnQ6IHJlbGF0aW9uc2hpcHNSZWFkZXIucmVhZFJlbGF0aW9uc2hpcHMsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogcmVsYXRpb25zaGlwc1JlYWRlci5kZWZhdWx0VmFsdWVcbiAgICB9KTtcblxuICAgIHJldHVybiByZWFkUmVsYXRpb25zaGlwc0Zyb21aaXBGaWxlKG9wdGlvbnMuZG9jeEZpbGUpLnRoZW4oZnVuY3Rpb24ocmVsYXRpb25zaGlwcykge1xuICAgICAgICB2YXIgYm9keVJlYWRlciA9IG5ldyBjcmVhdGVCb2R5UmVhZGVyKHtcbiAgICAgICAgICAgIHJlbGF0aW9uc2hpcHM6IHJlbGF0aW9uc2hpcHMsXG4gICAgICAgICAgICBjb250ZW50VHlwZXM6IG9wdGlvbnMuY29udGVudFR5cGVzLFxuICAgICAgICAgICAgZG9jeEZpbGU6IG9wdGlvbnMuZG9jeEZpbGUsXG4gICAgICAgICAgICBudW1iZXJpbmc6IG9wdGlvbnMubnVtYmVyaW5nLFxuICAgICAgICAgICAgc3R5bGVzOiBvcHRpb25zLnN0eWxlcyxcbiAgICAgICAgICAgIGZpbGVzOiBvcHRpb25zLmZpbGVzXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVhZFhtbEZyb21aaXBGaWxlKG9wdGlvbnMuZG9jeEZpbGUsIGZpbGVuYW1lKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oeG1sKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMoYm9keVJlYWRlciwgeG1sKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiByZWxhdGlvbnNoaXBzRmlsZW5hbWUoZmlsZW5hbWUpIHtcbiAgICB2YXIgc3BsaXQgPSB6aXBmaWxlLnNwbGl0UGF0aChmaWxlbmFtZSk7XG4gICAgcmV0dXJuIHppcGZpbGUuam9pblBhdGgoc3BsaXQuZGlybmFtZSwgXCJfcmVsc1wiLCBzcGxpdC5iYXNlbmFtZSArIFwiLnJlbHNcIik7XG59XG5cbnZhciByZWFkQ29udGVudFR5cGVzRnJvbVppcEZpbGUgPSB4bWxGaWxlUmVhZGVyKHtcbiAgICBmaWxlbmFtZTogXCJbQ29udGVudF9UeXBlc10ueG1sXCIsXG4gICAgcmVhZEVsZW1lbnQ6IGNvbnRlbnRUeXBlc1JlYWRlci5yZWFkQ29udGVudFR5cGVzRnJvbVhtbCxcbiAgICBkZWZhdWx0VmFsdWU6IGNvbnRlbnRUeXBlc1JlYWRlci5kZWZhdWx0Q29udGVudFR5cGVzXG59KTtcblxuZnVuY3Rpb24gcmVhZE51bWJlcmluZ0Zyb21aaXBGaWxlKHppcEZpbGUsIHBhdGgsIHN0eWxlcykge1xuICAgIHJldHVybiB4bWxGaWxlUmVhZGVyKHtcbiAgICAgICAgZmlsZW5hbWU6IHBhdGgsXG4gICAgICAgIHJlYWRFbGVtZW50OiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gbnVtYmVyaW5nWG1sLnJlYWROdW1iZXJpbmdYbWwoZWxlbWVudCwge3N0eWxlczogc3R5bGVzfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogbnVtYmVyaW5nWG1sLmRlZmF1bHROdW1iZXJpbmdcbiAgICB9KSh6aXBGaWxlKTtcbn1cblxuZnVuY3Rpb24gcmVhZFN0eWxlc0Zyb21aaXBGaWxlKHppcEZpbGUsIHBhdGgpIHtcbiAgICByZXR1cm4geG1sRmlsZVJlYWRlcih7XG4gICAgICAgIGZpbGVuYW1lOiBwYXRoLFxuICAgICAgICByZWFkRWxlbWVudDogc3R5bGVzUmVhZGVyLnJlYWRTdHlsZXNYbWwsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogc3R5bGVzUmVhZGVyLmRlZmF1bHRTdHlsZXNcbiAgICB9KSh6aXBGaWxlKTtcbn1cblxudmFyIHJlYWRQYWNrYWdlUmVsYXRpb25zaGlwcyA9IHhtbEZpbGVSZWFkZXIoe1xuICAgIGZpbGVuYW1lOiBcIl9yZWxzLy5yZWxzXCIsXG4gICAgcmVhZEVsZW1lbnQ6IHJlbGF0aW9uc2hpcHNSZWFkZXIucmVhZFJlbGF0aW9uc2hpcHMsXG4gICAgZGVmYXVsdFZhbHVlOiByZWxhdGlvbnNoaXBzUmVhZGVyLmRlZmF1bHRWYWx1ZVxufSk7XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlYWQiLCJfZmluZFBhcnRQYXRocyIsImZpbmRQYXJ0UGF0aHMiLCJwcm9taXNlcyIsInJlcXVpcmUiLCJkb2N1bWVudHMiLCJSZXN1bHQiLCJ6aXBmaWxlIiwicmVhZFhtbEZyb21aaXBGaWxlIiwiY3JlYXRlQm9keVJlYWRlciIsIkRvY3VtZW50WG1sUmVhZGVyIiwicmVsYXRpb25zaGlwc1JlYWRlciIsImNvbnRlbnRUeXBlc1JlYWRlciIsIm51bWJlcmluZ1htbCIsInN0eWxlc1JlYWRlciIsIm5vdGVzUmVhZGVyIiwiY29tbWVudHNSZWFkZXIiLCJGaWxlcyIsImRvY3hGaWxlIiwiaW5wdXQiLCJwcm9wcyIsImNvbnRlbnRUeXBlcyIsInJlYWRDb250ZW50VHlwZXNGcm9tWmlwRmlsZSIsInBhcnRQYXRocyIsImZpbGVzIiwicGF0aCIsInJlbGF0aXZlVG9GaWxlIiwiYWxzbyIsInJlc3VsdCIsInN0eWxlcyIsInJlYWRTdHlsZXNGcm9tWmlwRmlsZSIsIm51bWJlcmluZyIsInJlYWROdW1iZXJpbmdGcm9tWmlwRmlsZSIsImZvb3Rub3RlcyIsInJlYWRYbWxGaWxlV2l0aEJvZHkiLCJib2R5UmVhZGVyIiwieG1sIiwiY3JlYXRlRm9vdG5vdGVzUmVhZGVyIiwiZW5kbm90ZXMiLCJjcmVhdGVFbmRub3Rlc1JlYWRlciIsImNvbW1lbnRzIiwiY3JlYXRlQ29tbWVudHNSZWFkZXIiLCJub3RlcyIsImZsYXRNYXAiLCJtYXAiLCJOb3RlcyIsImNvbmNhdCIsInRoZW4iLCJtYWluRG9jdW1lbnQiLCJyZWFkZXIiLCJjb252ZXJ0WG1sVG9Eb2N1bWVudCIsInJlYWRQYWNrYWdlUmVsYXRpb25zaGlwcyIsInBhY2thZ2VSZWxhdGlvbnNoaXBzIiwibWFpbkRvY3VtZW50UGF0aCIsImZpbmRQYXJ0UGF0aCIsInJlbGF0aW9uc2hpcHMiLCJyZWxhdGlvbnNoaXBUeXBlIiwiYmFzZVBhdGgiLCJmYWxsYmFja1BhdGgiLCJleGlzdHMiLCJFcnJvciIsInhtbEZpbGVSZWFkZXIiLCJmaWxlbmFtZSIsInJlbGF0aW9uc2hpcHNGaWxlbmFtZSIsInJlYWRFbGVtZW50IiwicmVhZFJlbGF0aW9uc2hpcHMiLCJkZWZhdWx0VmFsdWUiLCJkb2N1bWVudFJlbGF0aW9uc2hpcHMiLCJmaW5kUGFydFJlbGF0ZWRUb01haW5Eb2N1bWVudCIsIm5hbWUiLCJzcGxpdFBhdGgiLCJkaXJuYW1lIiwib3B0aW9ucyIsInRhcmdldHMiLCJmaW5kVGFyZ2V0c0J5VHlwZSIsIm5vcm1hbGlzZWRUYXJnZXRzIiwidGFyZ2V0Iiwic3RyaXBQcmVmaXgiLCJqb2luUGF0aCIsInZhbGlkVGFyZ2V0cyIsImZpbHRlciIsImxlbmd0aCIsInZhbHVlIiwicHJlZml4Iiwic3Vic3RyaW5nIiwiemlwRmlsZSIsImVsZW1lbnQiLCJmdW5jIiwicmVhZFJlbGF0aW9uc2hpcHNGcm9tWmlwRmlsZSIsInNwbGl0IiwiYmFzZW5hbWUiLCJyZWFkQ29udGVudFR5cGVzRnJvbVhtbCIsImRlZmF1bHRDb250ZW50VHlwZXMiLCJyZWFkTnVtYmVyaW5nWG1sIiwiZGVmYXVsdE51bWJlcmluZyIsInJlYWRTdHlsZXNYbWwiLCJkZWZhdWx0U3R5bGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/docx-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/files.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/files.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\nvar url = __webpack_require__(/*! url */ \"url\");\nvar os = __webpack_require__(/*! os */ \"os\");\nvar dirname = (__webpack_require__(/*! path */ \"path\").dirname);\nvar resolvePath = (__webpack_require__(/*! path */ \"path\").resolve);\nvar isAbsolutePath = __webpack_require__(/*! path-is-absolute */ \"(ssr)/./node_modules/path-is-absolute/index.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nexports.Files = Files;\nexports.uriToPath = uriToPath;\nfunction Files(base) {\n    function read(uri, encoding) {\n        return resolveUri(uri).then(function(path) {\n            return readFile(path, encoding).caught(function(error) {\n                var message = \"could not open external image: '\" + uri + \"' (document directory: '\" + base + \"')\\n\" + error.message;\n                return promises.reject(new Error(message));\n            });\n        });\n    }\n    function resolveUri(uri) {\n        var path = uriToPath(uri);\n        if (isAbsolutePath(path)) {\n            return promises.resolve(path);\n        } else if (base) {\n            return promises.resolve(resolvePath(base, path));\n        } else {\n            return promises.reject(new Error(\"could not find external image '\" + uri + \"', path of input document is unknown\"));\n        }\n    }\n    return {\n        read: read\n    };\n}\nfunction relativeToFile(filePath) {\n    return new Files(dirname(filePath));\n}\nFiles.relativeToFile = relativeToFile;\nvar readFile = promises.promisify(fs.readFile.bind(fs));\nfunction uriToPath(uriString, platform) {\n    if (!platform) {\n        platform = os.platform();\n    }\n    var uri = url.parse(uriString);\n    if (isLocalFileUri(uri) || isRelativeUri(uri)) {\n        var path = decodeURIComponent(uri.path);\n        if (platform === \"win32\" && /^\\/[a-z]:/i.test(path)) {\n            return path.slice(1);\n        } else {\n            return path;\n        }\n    } else {\n        throw new Error(\"Could not convert URI to path: \" + uriString);\n    }\n}\nfunction isLocalFileUri(uri) {\n    return uri.protocol === \"file:\" && (!uri.host || uri.host === \"localhost\");\n}\nfunction isRelativeUri(uri) {\n    return !uri.protocol && !uri.host;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9maWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxLQUFLQyxtQkFBT0EsQ0FBQyxjQUFJO0FBQ3JCLElBQUlDLE1BQU1ELG1CQUFPQSxDQUFDLGdCQUFLO0FBQ3ZCLElBQUlFLEtBQUtGLG1CQUFPQSxDQUFDLGNBQUk7QUFDckIsSUFBSUcsVUFBVUgsaURBQXVCO0FBQ3JDLElBQUlJLGNBQWNKLGlEQUF1QjtBQUN6QyxJQUFJTSxpQkFBaUJOLG1CQUFPQSxDQUFDO0FBRTdCLElBQUlPLFdBQVdQLG1CQUFPQSxDQUFDLGlFQUFhO0FBR3BDUSxhQUFhLEdBQUdDO0FBQ2hCRCxpQkFBaUIsR0FBR0U7QUFHcEIsU0FBU0QsTUFBTUUsSUFBSTtJQUNmLFNBQVNDLEtBQUtDLEdBQUcsRUFBRUMsUUFBUTtRQUN2QixPQUFPQyxXQUFXRixLQUFLRyxJQUFJLENBQUMsU0FBU0MsSUFBSTtZQUNyQyxPQUFPQyxTQUFTRCxNQUFNSCxVQUFVSyxNQUFNLENBQUMsU0FBU0MsS0FBSztnQkFDakQsSUFBSUMsVUFBVSxxQ0FBcUNSLE1BQU0sNkJBQTZCRixPQUFPLFNBQVNTLE1BQU1DLE9BQU87Z0JBQ25ILE9BQU9kLFNBQVNlLE1BQU0sQ0FBQyxJQUFJQyxNQUFNRjtZQUNyQztRQUNKO0lBQ0o7SUFFQSxTQUFTTixXQUFXRixHQUFHO1FBQ25CLElBQUlJLE9BQU9QLFVBQVVHO1FBQ3JCLElBQUlQLGVBQWVXLE9BQU87WUFDdEIsT0FBT1YsU0FBU0YsT0FBTyxDQUFDWTtRQUM1QixPQUFPLElBQUlOLE1BQU07WUFDYixPQUFPSixTQUFTRixPQUFPLENBQUNELFlBQVlPLE1BQU1NO1FBQzlDLE9BQU87WUFDSCxPQUFPVixTQUFTZSxNQUFNLENBQUMsSUFBSUMsTUFBTSxvQ0FBb0NWLE1BQU07UUFDL0U7SUFDSjtJQUVBLE9BQU87UUFDSEQsTUFBTUE7SUFDVjtBQUNKO0FBR0EsU0FBU1ksZUFBZUMsUUFBUTtJQUM1QixPQUFPLElBQUloQixNQUFNTixRQUFRc0I7QUFDN0I7QUFFQWhCLE1BQU1lLGNBQWMsR0FBR0E7QUFHdkIsSUFBSU4sV0FBV1gsU0FBU21CLFNBQVMsQ0FBQzNCLEdBQUdtQixRQUFRLENBQUNTLElBQUksQ0FBQzVCO0FBR25ELFNBQVNXLFVBQVVrQixTQUFTLEVBQUVDLFFBQVE7SUFDbEMsSUFBSSxDQUFDQSxVQUFVO1FBQ1hBLFdBQVczQixHQUFHMkIsUUFBUTtJQUMxQjtJQUVBLElBQUloQixNQUFNWixJQUFJNkIsS0FBSyxDQUFDRjtJQUNwQixJQUFJRyxlQUFlbEIsUUFBUW1CLGNBQWNuQixNQUFNO1FBQzNDLElBQUlJLE9BQU9nQixtQkFBbUJwQixJQUFJSSxJQUFJO1FBQ3RDLElBQUlZLGFBQWEsV0FBVyxhQUFhSyxJQUFJLENBQUNqQixPQUFPO1lBQ2pELE9BQU9BLEtBQUtrQixLQUFLLENBQUM7UUFDdEIsT0FBTztZQUNILE9BQU9sQjtRQUNYO0lBQ0osT0FBTztRQUNILE1BQU0sSUFBSU0sTUFBTSxvQ0FBb0NLO0lBQ3hEO0FBQ0o7QUFFQSxTQUFTRyxlQUFlbEIsR0FBRztJQUN2QixPQUFPQSxJQUFJdUIsUUFBUSxLQUFLLFdBQVksRUFBQ3ZCLElBQUl3QixJQUFJLElBQUl4QixJQUFJd0IsSUFBSSxLQUFLLFdBQVU7QUFDNUU7QUFFQSxTQUFTTCxjQUFjbkIsR0FBRztJQUN0QixPQUFPLENBQUNBLElBQUl1QixRQUFRLElBQUksQ0FBQ3ZCLElBQUl3QixJQUFJO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvZmlsZXMuanM/Njk5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKFwiZnNcIik7XG52YXIgdXJsID0gcmVxdWlyZShcInVybFwiKTtcbnZhciBvcyA9IHJlcXVpcmUoXCJvc1wiKTtcbnZhciBkaXJuYW1lID0gcmVxdWlyZShcInBhdGhcIikuZGlybmFtZTtcbnZhciByZXNvbHZlUGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpLnJlc29sdmU7XG52YXIgaXNBYnNvbHV0ZVBhdGggPSByZXF1aXJlKCdwYXRoLWlzLWFic29sdXRlJyk7XG5cbnZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuLi9wcm9taXNlc1wiKTtcblxuXG5leHBvcnRzLkZpbGVzID0gRmlsZXM7XG5leHBvcnRzLnVyaVRvUGF0aCA9IHVyaVRvUGF0aDtcblxuXG5mdW5jdGlvbiBGaWxlcyhiYXNlKSB7XG4gICAgZnVuY3Rpb24gcmVhZCh1cmksIGVuY29kaW5nKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlVXJpKHVyaSkudGhlbihmdW5jdGlvbihwYXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVhZEZpbGUocGF0aCwgZW5jb2RpbmcpLmNhdWdodChmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gXCJjb3VsZCBub3Qgb3BlbiBleHRlcm5hbCBpbWFnZTogJ1wiICsgdXJpICsgXCInIChkb2N1bWVudCBkaXJlY3Rvcnk6ICdcIiArIGJhc2UgKyBcIicpXFxuXCIgKyBlcnJvci5tZXNzYWdlO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlcy5yZWplY3QobmV3IEVycm9yKG1lc3NhZ2UpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZXNvbHZlVXJpKHVyaSkge1xuICAgICAgICB2YXIgcGF0aCA9IHVyaVRvUGF0aCh1cmkpO1xuICAgICAgICBpZiAoaXNBYnNvbHV0ZVBhdGgocGF0aCkpIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlcy5yZXNvbHZlKHBhdGgpO1xuICAgICAgICB9IGVsc2UgaWYgKGJhc2UpIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlcy5yZXNvbHZlKHJlc29sdmVQYXRoKGJhc2UsIHBhdGgpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlcy5yZWplY3QobmV3IEVycm9yKFwiY291bGQgbm90IGZpbmQgZXh0ZXJuYWwgaW1hZ2UgJ1wiICsgdXJpICsgXCInLCBwYXRoIG9mIGlucHV0IGRvY3VtZW50IGlzIHVua25vd25cIikpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVhZDogcmVhZFxuICAgIH07XG59XG5cblxuZnVuY3Rpb24gcmVsYXRpdmVUb0ZpbGUoZmlsZVBhdGgpIHtcbiAgICByZXR1cm4gbmV3IEZpbGVzKGRpcm5hbWUoZmlsZVBhdGgpKTtcbn1cblxuRmlsZXMucmVsYXRpdmVUb0ZpbGUgPSByZWxhdGl2ZVRvRmlsZTtcblxuXG52YXIgcmVhZEZpbGUgPSBwcm9taXNlcy5wcm9taXNpZnkoZnMucmVhZEZpbGUuYmluZChmcykpO1xuXG5cbmZ1bmN0aW9uIHVyaVRvUGF0aCh1cmlTdHJpbmcsIHBsYXRmb3JtKSB7XG4gICAgaWYgKCFwbGF0Zm9ybSkge1xuICAgICAgICBwbGF0Zm9ybSA9IG9zLnBsYXRmb3JtKCk7XG4gICAgfVxuXG4gICAgdmFyIHVyaSA9IHVybC5wYXJzZSh1cmlTdHJpbmcpO1xuICAgIGlmIChpc0xvY2FsRmlsZVVyaSh1cmkpIHx8IGlzUmVsYXRpdmVVcmkodXJpKSkge1xuICAgICAgICB2YXIgcGF0aCA9IGRlY29kZVVSSUNvbXBvbmVudCh1cmkucGF0aCk7XG4gICAgICAgIGlmIChwbGF0Zm9ybSA9PT0gXCJ3aW4zMlwiICYmIC9eXFwvW2Etel06L2kudGVzdChwYXRoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGguc2xpY2UoMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBjb252ZXJ0IFVSSSB0byBwYXRoOiBcIiArIHVyaVN0cmluZyk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBpc0xvY2FsRmlsZVVyaSh1cmkpIHtcbiAgICByZXR1cm4gdXJpLnByb3RvY29sID09PSBcImZpbGU6XCIgJiYgKCF1cmkuaG9zdCB8fCB1cmkuaG9zdCA9PT0gXCJsb2NhbGhvc3RcIik7XG59XG5cbmZ1bmN0aW9uIGlzUmVsYXRpdmVVcmkodXJpKSB7XG4gICAgcmV0dXJuICF1cmkucHJvdG9jb2wgJiYgIXVyaS5ob3N0O1xufVxuIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInVybCIsIm9zIiwiZGlybmFtZSIsInJlc29sdmVQYXRoIiwicmVzb2x2ZSIsImlzQWJzb2x1dGVQYXRoIiwicHJvbWlzZXMiLCJleHBvcnRzIiwiRmlsZXMiLCJ1cmlUb1BhdGgiLCJiYXNlIiwicmVhZCIsInVyaSIsImVuY29kaW5nIiwicmVzb2x2ZVVyaSIsInRoZW4iLCJwYXRoIiwicmVhZEZpbGUiLCJjYXVnaHQiLCJlcnJvciIsIm1lc3NhZ2UiLCJyZWplY3QiLCJFcnJvciIsInJlbGF0aXZlVG9GaWxlIiwiZmlsZVBhdGgiLCJwcm9taXNpZnkiLCJiaW5kIiwidXJpU3RyaW5nIiwicGxhdGZvcm0iLCJwYXJzZSIsImlzTG9jYWxGaWxlVXJpIiwiaXNSZWxhdGl2ZVVyaSIsImRlY29kZVVSSUNvbXBvbmVudCIsInRlc3QiLCJzbGljZSIsInByb3RvY29sIiwiaG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/files.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/notes-reader.js":
/*!*******************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/notes-reader.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var documents = __webpack_require__(/*! ../documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nvar Result = (__webpack_require__(/*! ../results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nexports.createFootnotesReader = createReader.bind(this, \"footnote\");\nexports.createEndnotesReader = createReader.bind(this, \"endnote\");\nfunction createReader(noteType, bodyReader) {\n    function readNotesXml(element) {\n        return Result.combine(element.getElementsByTagName(\"w:\" + noteType).filter(isFootnoteElement).map(readFootnoteElement));\n    }\n    function isFootnoteElement(element) {\n        var type = element.attributes[\"w:type\"];\n        return type !== \"continuationSeparator\" && type !== \"separator\";\n    }\n    function readFootnoteElement(footnoteElement) {\n        var id = footnoteElement.attributes[\"w:id\"];\n        return bodyReader.readXmlElements(footnoteElement.children).map(function(body) {\n            return documents.Note({\n                noteType: noteType,\n                noteId: id,\n                body: body\n            });\n        });\n    }\n    return readNotesXml;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9ub3Rlcy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUVBQWM7QUFDdEMsSUFBSUMsU0FBU0QsNkZBQTRCO0FBRXpDRSw2QkFBNkIsR0FBR0UsYUFBYUMsSUFBSSxDQUFDLElBQUksRUFBRTtBQUN4REgsNEJBQTRCLEdBQUdFLGFBQWFDLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFFdkQsU0FBU0QsYUFBYUcsUUFBUSxFQUFFQyxVQUFVO0lBQ3RDLFNBQVNDLGFBQWFDLE9BQU87UUFDekIsT0FBT1QsT0FBT1UsT0FBTyxDQUFDRCxRQUFRRSxvQkFBb0IsQ0FBQyxPQUFPTCxVQUNyRE0sTUFBTSxDQUFDQyxtQkFDUEMsR0FBRyxDQUFDQztJQUNiO0lBRUEsU0FBU0Ysa0JBQWtCSixPQUFPO1FBQzlCLElBQUlPLE9BQU9QLFFBQVFRLFVBQVUsQ0FBQyxTQUFTO1FBQ3ZDLE9BQU9ELFNBQVMsMkJBQTJCQSxTQUFTO0lBQ3hEO0lBRUEsU0FBU0Qsb0JBQW9CRyxlQUFlO1FBQ3hDLElBQUlDLEtBQUtELGdCQUFnQkQsVUFBVSxDQUFDLE9BQU87UUFDM0MsT0FBT1YsV0FBV2EsZUFBZSxDQUFDRixnQkFBZ0JHLFFBQVEsRUFDckRQLEdBQUcsQ0FBQyxTQUFTUSxJQUFJO1lBQ2QsT0FBT3hCLFVBQVV5QixJQUFJLENBQUM7Z0JBQUNqQixVQUFVQTtnQkFBVWtCLFFBQVFMO2dCQUFJRyxNQUFNQTtZQUFJO1FBQ3JFO0lBQ1I7SUFFQSxPQUFPZDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvbm90ZXMtcmVhZGVyLmpzP2YzYzMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRvY3VtZW50cyA9IHJlcXVpcmUoXCIuLi9kb2N1bWVudHNcIik7XG52YXIgUmVzdWx0ID0gcmVxdWlyZShcIi4uL3Jlc3VsdHNcIikuUmVzdWx0O1xuXG5leHBvcnRzLmNyZWF0ZUZvb3Rub3Rlc1JlYWRlciA9IGNyZWF0ZVJlYWRlci5iaW5kKHRoaXMsIFwiZm9vdG5vdGVcIik7XG5leHBvcnRzLmNyZWF0ZUVuZG5vdGVzUmVhZGVyID0gY3JlYXRlUmVhZGVyLmJpbmQodGhpcywgXCJlbmRub3RlXCIpO1xuXG5mdW5jdGlvbiBjcmVhdGVSZWFkZXIobm90ZVR5cGUsIGJvZHlSZWFkZXIpIHtcbiAgICBmdW5jdGlvbiByZWFkTm90ZXNYbWwoZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gUmVzdWx0LmNvbWJpbmUoZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInc6XCIgKyBub3RlVHlwZSlcbiAgICAgICAgICAgIC5maWx0ZXIoaXNGb290bm90ZUVsZW1lbnQpXG4gICAgICAgICAgICAubWFwKHJlYWRGb290bm90ZUVsZW1lbnQpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0Zvb3Rub3RlRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIHZhciB0eXBlID0gZWxlbWVudC5hdHRyaWJ1dGVzW1widzp0eXBlXCJdO1xuICAgICAgICByZXR1cm4gdHlwZSAhPT0gXCJjb250aW51YXRpb25TZXBhcmF0b3JcIiAmJiB0eXBlICE9PSBcInNlcGFyYXRvclwiO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlYWRGb290bm90ZUVsZW1lbnQoZm9vdG5vdGVFbGVtZW50KSB7XG4gICAgICAgIHZhciBpZCA9IGZvb3Rub3RlRWxlbWVudC5hdHRyaWJ1dGVzW1widzppZFwiXTtcbiAgICAgICAgcmV0dXJuIGJvZHlSZWFkZXIucmVhZFhtbEVsZW1lbnRzKGZvb3Rub3RlRWxlbWVudC5jaGlsZHJlbilcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24oYm9keSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkb2N1bWVudHMuTm90ZSh7bm90ZVR5cGU6IG5vdGVUeXBlLCBub3RlSWQ6IGlkLCBib2R5OiBib2R5fSk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHJlYWROb3Rlc1htbDtcbn1cbiJdLCJuYW1lcyI6WyJkb2N1bWVudHMiLCJyZXF1aXJlIiwiUmVzdWx0IiwiZXhwb3J0cyIsImNyZWF0ZUZvb3Rub3Rlc1JlYWRlciIsImNyZWF0ZVJlYWRlciIsImJpbmQiLCJjcmVhdGVFbmRub3Rlc1JlYWRlciIsIm5vdGVUeXBlIiwiYm9keVJlYWRlciIsInJlYWROb3Rlc1htbCIsImVsZW1lbnQiLCJjb21iaW5lIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJmaWx0ZXIiLCJpc0Zvb3Rub3RlRWxlbWVudCIsIm1hcCIsInJlYWRGb290bm90ZUVsZW1lbnQiLCJ0eXBlIiwiYXR0cmlidXRlcyIsImZvb3Rub3RlRWxlbWVudCIsImlkIiwicmVhZFhtbEVsZW1lbnRzIiwiY2hpbGRyZW4iLCJib2R5IiwiTm90ZSIsIm5vdGVJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/notes-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/numbering-xml.js":
/*!********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/numbering-xml.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nexports.readNumberingXml = readNumberingXml;\nexports.Numbering = Numbering;\nexports.defaultNumbering = new Numbering({}, {});\nfunction Numbering(nums, abstractNums, styles) {\n    var allLevels = _.flatten(_.values(abstractNums).map(function(abstractNum) {\n        return _.values(abstractNum.levels);\n    }));\n    var levelsByParagraphStyleId = _.indexBy(allLevels.filter(function(level) {\n        return level.paragraphStyleId != null;\n    }), \"paragraphStyleId\");\n    function findLevel(numId, level) {\n        var num = nums[numId];\n        if (num) {\n            var abstractNum = abstractNums[num.abstractNumId];\n            if (!abstractNum) {\n                return null;\n            } else if (abstractNum.numStyleLink == null) {\n                return abstractNums[num.abstractNumId].levels[level];\n            } else {\n                var style = styles.findNumberingStyleById(abstractNum.numStyleLink);\n                return findLevel(style.numId, level);\n            }\n        } else {\n            return null;\n        }\n    }\n    function findLevelByParagraphStyleId(styleId) {\n        return levelsByParagraphStyleId[styleId] || null;\n    }\n    return {\n        findLevel: findLevel,\n        findLevelByParagraphStyleId: findLevelByParagraphStyleId\n    };\n}\nfunction readNumberingXml(root, options) {\n    if (!options || !options.styles) {\n        throw new Error(\"styles is missing\");\n    }\n    var abstractNums = readAbstractNums(root);\n    var nums = readNums(root, abstractNums);\n    return new Numbering(nums, abstractNums, options.styles);\n}\nfunction readAbstractNums(root) {\n    var abstractNums = {};\n    root.getElementsByTagName(\"w:abstractNum\").forEach(function(element) {\n        var id = element.attributes[\"w:abstractNumId\"];\n        abstractNums[id] = readAbstractNum(element);\n    });\n    return abstractNums;\n}\nfunction readAbstractNum(element) {\n    var levels = {};\n    element.getElementsByTagName(\"w:lvl\").forEach(function(levelElement) {\n        var levelIndex = levelElement.attributes[\"w:ilvl\"];\n        var numFmt = levelElement.firstOrEmpty(\"w:numFmt\").attributes[\"w:val\"];\n        var paragraphStyleId = levelElement.firstOrEmpty(\"w:pStyle\").attributes[\"w:val\"];\n        levels[levelIndex] = {\n            isOrdered: numFmt !== \"bullet\",\n            level: levelIndex,\n            paragraphStyleId: paragraphStyleId\n        };\n    });\n    var numStyleLink = element.firstOrEmpty(\"w:numStyleLink\").attributes[\"w:val\"];\n    return {\n        levels: levels,\n        numStyleLink: numStyleLink\n    };\n}\nfunction readNums(root) {\n    var nums = {};\n    root.getElementsByTagName(\"w:num\").forEach(function(element) {\n        var numId = element.attributes[\"w:numId\"];\n        var abstractNumId = element.first(\"w:abstractNumId\").attributes[\"w:val\"];\n        nums[numId] = {\n            abstractNumId: abstractNumId\n        };\n    });\n    return nums;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9udW1iZXJpbmcteG1sLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRTVCQyx3QkFBd0IsR0FBR0M7QUFDM0JELGlCQUFpQixHQUFHRTtBQUNwQkYsd0JBQXdCLEdBQUcsSUFBSUUsVUFBVSxDQUFDLEdBQUcsQ0FBQztBQUU5QyxTQUFTQSxVQUFVRSxJQUFJLEVBQUVDLFlBQVksRUFBRUMsTUFBTTtJQUN6QyxJQUFJQyxZQUFZVCxFQUFFVSxPQUFPLENBQUNWLEVBQUVXLE1BQU0sQ0FBQ0osY0FBY0ssR0FBRyxDQUFDLFNBQVNDLFdBQVc7UUFDckUsT0FBT2IsRUFBRVcsTUFBTSxDQUFDRSxZQUFZQyxNQUFNO0lBQ3RDO0lBRUEsSUFBSUMsMkJBQTJCZixFQUFFZ0IsT0FBTyxDQUNwQ1AsVUFBVVEsTUFBTSxDQUFDLFNBQVNDLEtBQUs7UUFDM0IsT0FBT0EsTUFBTUMsZ0JBQWdCLElBQUk7SUFDckMsSUFDQTtJQUdKLFNBQVNDLFVBQVVDLEtBQUssRUFBRUgsS0FBSztRQUMzQixJQUFJSSxNQUFNaEIsSUFBSSxDQUFDZSxNQUFNO1FBQ3JCLElBQUlDLEtBQUs7WUFDTCxJQUFJVCxjQUFjTixZQUFZLENBQUNlLElBQUlDLGFBQWEsQ0FBQztZQUNqRCxJQUFJLENBQUNWLGFBQWE7Z0JBQ2QsT0FBTztZQUNYLE9BQU8sSUFBSUEsWUFBWVcsWUFBWSxJQUFJLE1BQU07Z0JBQ3pDLE9BQU9qQixZQUFZLENBQUNlLElBQUlDLGFBQWEsQ0FBQyxDQUFDVCxNQUFNLENBQUNJLE1BQU07WUFDeEQsT0FBTztnQkFDSCxJQUFJTyxRQUFRakIsT0FBT2tCLHNCQUFzQixDQUFDYixZQUFZVyxZQUFZO2dCQUNsRSxPQUFPSixVQUFVSyxNQUFNSixLQUFLLEVBQUVIO1lBQ2xDO1FBQ0osT0FBTztZQUNILE9BQU87UUFDWDtJQUNKO0lBRUEsU0FBU1MsNEJBQTRCQyxPQUFPO1FBQ3hDLE9BQU9iLHdCQUF3QixDQUFDYSxRQUFRLElBQUk7SUFDaEQ7SUFFQSxPQUFPO1FBQ0hSLFdBQVdBO1FBQ1hPLDZCQUE2QkE7SUFDakM7QUFDSjtBQUVBLFNBQVN4QixpQkFBaUIwQixJQUFJLEVBQUVDLE9BQU87SUFDbkMsSUFBSSxDQUFDQSxXQUFXLENBQUNBLFFBQVF0QixNQUFNLEVBQUU7UUFDN0IsTUFBTSxJQUFJdUIsTUFBTTtJQUNwQjtJQUVBLElBQUl4QixlQUFleUIsaUJBQWlCSDtJQUNwQyxJQUFJdkIsT0FBTzJCLFNBQVNKLE1BQU10QjtJQUMxQixPQUFPLElBQUlILFVBQVVFLE1BQU1DLGNBQWN1QixRQUFRdEIsTUFBTTtBQUMzRDtBQUVBLFNBQVN3QixpQkFBaUJILElBQUk7SUFDMUIsSUFBSXRCLGVBQWUsQ0FBQztJQUNwQnNCLEtBQUtLLG9CQUFvQixDQUFDLGlCQUFpQkMsT0FBTyxDQUFDLFNBQVNDLE9BQU87UUFDL0QsSUFBSUMsS0FBS0QsUUFBUUUsVUFBVSxDQUFDLGtCQUFrQjtRQUM5Qy9CLFlBQVksQ0FBQzhCLEdBQUcsR0FBR0UsZ0JBQWdCSDtJQUN2QztJQUNBLE9BQU83QjtBQUNYO0FBRUEsU0FBU2dDLGdCQUFnQkgsT0FBTztJQUM1QixJQUFJdEIsU0FBUyxDQUFDO0lBQ2RzQixRQUFRRixvQkFBb0IsQ0FBQyxTQUFTQyxPQUFPLENBQUMsU0FBU0ssWUFBWTtRQUMvRCxJQUFJQyxhQUFhRCxhQUFhRixVQUFVLENBQUMsU0FBUztRQUNsRCxJQUFJSSxTQUFTRixhQUFhRyxZQUFZLENBQUMsWUFBWUwsVUFBVSxDQUFDLFFBQVE7UUFDdEUsSUFBSW5CLG1CQUFtQnFCLGFBQWFHLFlBQVksQ0FBQyxZQUFZTCxVQUFVLENBQUMsUUFBUTtRQUVoRnhCLE1BQU0sQ0FBQzJCLFdBQVcsR0FBRztZQUNqQkcsV0FBV0YsV0FBVztZQUN0QnhCLE9BQU91QjtZQUNQdEIsa0JBQWtCQTtRQUN0QjtJQUNKO0lBRUEsSUFBSUssZUFBZVksUUFBUU8sWUFBWSxDQUFDLGtCQUFrQkwsVUFBVSxDQUFDLFFBQVE7SUFFN0UsT0FBTztRQUFDeEIsUUFBUUE7UUFBUVUsY0FBY0E7SUFBWTtBQUN0RDtBQUVBLFNBQVNTLFNBQVNKLElBQUk7SUFDbEIsSUFBSXZCLE9BQU8sQ0FBQztJQUNadUIsS0FBS0ssb0JBQW9CLENBQUMsU0FBU0MsT0FBTyxDQUFDLFNBQVNDLE9BQU87UUFDdkQsSUFBSWYsUUFBUWUsUUFBUUUsVUFBVSxDQUFDLFVBQVU7UUFDekMsSUFBSWYsZ0JBQWdCYSxRQUFRUyxLQUFLLENBQUMsbUJBQW1CUCxVQUFVLENBQUMsUUFBUTtRQUN4RWhDLElBQUksQ0FBQ2UsTUFBTSxHQUFHO1lBQUNFLGVBQWVBO1FBQWE7SUFDL0M7SUFDQSxPQUFPakI7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L251bWJlcmluZy14bWwuanM/NTYxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG5leHBvcnRzLnJlYWROdW1iZXJpbmdYbWwgPSByZWFkTnVtYmVyaW5nWG1sO1xuZXhwb3J0cy5OdW1iZXJpbmcgPSBOdW1iZXJpbmc7XG5leHBvcnRzLmRlZmF1bHROdW1iZXJpbmcgPSBuZXcgTnVtYmVyaW5nKHt9LCB7fSk7XG5cbmZ1bmN0aW9uIE51bWJlcmluZyhudW1zLCBhYnN0cmFjdE51bXMsIHN0eWxlcykge1xuICAgIHZhciBhbGxMZXZlbHMgPSBfLmZsYXR0ZW4oXy52YWx1ZXMoYWJzdHJhY3ROdW1zKS5tYXAoZnVuY3Rpb24oYWJzdHJhY3ROdW0pIHtcbiAgICAgICAgcmV0dXJuIF8udmFsdWVzKGFic3RyYWN0TnVtLmxldmVscyk7XG4gICAgfSkpO1xuXG4gICAgdmFyIGxldmVsc0J5UGFyYWdyYXBoU3R5bGVJZCA9IF8uaW5kZXhCeShcbiAgICAgICAgYWxsTGV2ZWxzLmZpbHRlcihmdW5jdGlvbihsZXZlbCkge1xuICAgICAgICAgICAgcmV0dXJuIGxldmVsLnBhcmFncmFwaFN0eWxlSWQgIT0gbnVsbDtcbiAgICAgICAgfSksXG4gICAgICAgIFwicGFyYWdyYXBoU3R5bGVJZFwiXG4gICAgKTtcblxuICAgIGZ1bmN0aW9uIGZpbmRMZXZlbChudW1JZCwgbGV2ZWwpIHtcbiAgICAgICAgdmFyIG51bSA9IG51bXNbbnVtSWRdO1xuICAgICAgICBpZiAobnVtKSB7XG4gICAgICAgICAgICB2YXIgYWJzdHJhY3ROdW0gPSBhYnN0cmFjdE51bXNbbnVtLmFic3RyYWN0TnVtSWRdO1xuICAgICAgICAgICAgaWYgKCFhYnN0cmFjdE51bSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChhYnN0cmFjdE51bS5udW1TdHlsZUxpbmsgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhYnN0cmFjdE51bXNbbnVtLmFic3RyYWN0TnVtSWRdLmxldmVsc1tsZXZlbF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBzdHlsZSA9IHN0eWxlcy5maW5kTnVtYmVyaW5nU3R5bGVCeUlkKGFic3RyYWN0TnVtLm51bVN0eWxlTGluayk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZpbmRMZXZlbChzdHlsZS5udW1JZCwgbGV2ZWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmaW5kTGV2ZWxCeVBhcmFncmFwaFN0eWxlSWQoc3R5bGVJZCkge1xuICAgICAgICByZXR1cm4gbGV2ZWxzQnlQYXJhZ3JhcGhTdHlsZUlkW3N0eWxlSWRdIHx8IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZmluZExldmVsOiBmaW5kTGV2ZWwsXG4gICAgICAgIGZpbmRMZXZlbEJ5UGFyYWdyYXBoU3R5bGVJZDogZmluZExldmVsQnlQYXJhZ3JhcGhTdHlsZUlkXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gcmVhZE51bWJlcmluZ1htbChyb290LCBvcHRpb25zKSB7XG4gICAgaWYgKCFvcHRpb25zIHx8ICFvcHRpb25zLnN0eWxlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJzdHlsZXMgaXMgbWlzc2luZ1wiKTtcbiAgICB9XG5cbiAgICB2YXIgYWJzdHJhY3ROdW1zID0gcmVhZEFic3RyYWN0TnVtcyhyb290KTtcbiAgICB2YXIgbnVtcyA9IHJlYWROdW1zKHJvb3QsIGFic3RyYWN0TnVtcyk7XG4gICAgcmV0dXJuIG5ldyBOdW1iZXJpbmcobnVtcywgYWJzdHJhY3ROdW1zLCBvcHRpb25zLnN0eWxlcyk7XG59XG5cbmZ1bmN0aW9uIHJlYWRBYnN0cmFjdE51bXMocm9vdCkge1xuICAgIHZhciBhYnN0cmFjdE51bXMgPSB7fTtcbiAgICByb290LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidzphYnN0cmFjdE51bVwiKS5mb3JFYWNoKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGlkID0gZWxlbWVudC5hdHRyaWJ1dGVzW1widzphYnN0cmFjdE51bUlkXCJdO1xuICAgICAgICBhYnN0cmFjdE51bXNbaWRdID0gcmVhZEFic3RyYWN0TnVtKGVsZW1lbnQpO1xuICAgIH0pO1xuICAgIHJldHVybiBhYnN0cmFjdE51bXM7XG59XG5cbmZ1bmN0aW9uIHJlYWRBYnN0cmFjdE51bShlbGVtZW50KSB7XG4gICAgdmFyIGxldmVscyA9IHt9O1xuICAgIGVsZW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ3Omx2bFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGxldmVsRWxlbWVudCkge1xuICAgICAgICB2YXIgbGV2ZWxJbmRleCA9IGxldmVsRWxlbWVudC5hdHRyaWJ1dGVzW1widzppbHZsXCJdO1xuICAgICAgICB2YXIgbnVtRm10ID0gbGV2ZWxFbGVtZW50LmZpcnN0T3JFbXB0eShcInc6bnVtRm10XCIpLmF0dHJpYnV0ZXNbXCJ3OnZhbFwiXTtcbiAgICAgICAgdmFyIHBhcmFncmFwaFN0eWxlSWQgPSBsZXZlbEVsZW1lbnQuZmlyc3RPckVtcHR5KFwidzpwU3R5bGVcIikuYXR0cmlidXRlc1tcInc6dmFsXCJdO1xuXG4gICAgICAgIGxldmVsc1tsZXZlbEluZGV4XSA9IHtcbiAgICAgICAgICAgIGlzT3JkZXJlZDogbnVtRm10ICE9PSBcImJ1bGxldFwiLFxuICAgICAgICAgICAgbGV2ZWw6IGxldmVsSW5kZXgsXG4gICAgICAgICAgICBwYXJhZ3JhcGhTdHlsZUlkOiBwYXJhZ3JhcGhTdHlsZUlkXG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICB2YXIgbnVtU3R5bGVMaW5rID0gZWxlbWVudC5maXJzdE9yRW1wdHkoXCJ3Om51bVN0eWxlTGlua1wiKS5hdHRyaWJ1dGVzW1widzp2YWxcIl07XG5cbiAgICByZXR1cm4ge2xldmVsczogbGV2ZWxzLCBudW1TdHlsZUxpbms6IG51bVN0eWxlTGlua307XG59XG5cbmZ1bmN0aW9uIHJlYWROdW1zKHJvb3QpIHtcbiAgICB2YXIgbnVtcyA9IHt9O1xuICAgIHJvb3QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ3Om51bVwiKS5mb3JFYWNoKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIG51bUlkID0gZWxlbWVudC5hdHRyaWJ1dGVzW1widzpudW1JZFwiXTtcbiAgICAgICAgdmFyIGFic3RyYWN0TnVtSWQgPSBlbGVtZW50LmZpcnN0KFwidzphYnN0cmFjdE51bUlkXCIpLmF0dHJpYnV0ZXNbXCJ3OnZhbFwiXTtcbiAgICAgICAgbnVtc1tudW1JZF0gPSB7YWJzdHJhY3ROdW1JZDogYWJzdHJhY3ROdW1JZH07XG4gICAgfSk7XG4gICAgcmV0dXJuIG51bXM7XG59XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJleHBvcnRzIiwicmVhZE51bWJlcmluZ1htbCIsIk51bWJlcmluZyIsImRlZmF1bHROdW1iZXJpbmciLCJudW1zIiwiYWJzdHJhY3ROdW1zIiwic3R5bGVzIiwiYWxsTGV2ZWxzIiwiZmxhdHRlbiIsInZhbHVlcyIsIm1hcCIsImFic3RyYWN0TnVtIiwibGV2ZWxzIiwibGV2ZWxzQnlQYXJhZ3JhcGhTdHlsZUlkIiwiaW5kZXhCeSIsImZpbHRlciIsImxldmVsIiwicGFyYWdyYXBoU3R5bGVJZCIsImZpbmRMZXZlbCIsIm51bUlkIiwibnVtIiwiYWJzdHJhY3ROdW1JZCIsIm51bVN0eWxlTGluayIsInN0eWxlIiwiZmluZE51bWJlcmluZ1N0eWxlQnlJZCIsImZpbmRMZXZlbEJ5UGFyYWdyYXBoU3R5bGVJZCIsInN0eWxlSWQiLCJyb290Iiwib3B0aW9ucyIsIkVycm9yIiwicmVhZEFic3RyYWN0TnVtcyIsInJlYWROdW1zIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJmb3JFYWNoIiwiZWxlbWVudCIsImlkIiwiYXR0cmlidXRlcyIsInJlYWRBYnN0cmFjdE51bSIsImxldmVsRWxlbWVudCIsImxldmVsSW5kZXgiLCJudW1GbXQiLCJmaXJzdE9yRW1wdHkiLCJpc09yZGVyZWQiLCJmaXJzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/numbering-xml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/office-xml-reader.js":
/*!************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/office-xml-reader.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar xml = __webpack_require__(/*! ../xml */ \"(ssr)/./node_modules/mammoth/lib/xml/index.js\");\nexports.read = read;\nexports.readXmlFromZipFile = readXmlFromZipFile;\nvar xmlNamespaceMap = {\n    // Transitional format\n    \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\": \"w\",\n    \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\": \"r\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\": \"wp\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/main\": \"a\",\n    \"http://schemas.openxmlformats.org/drawingml/2006/picture\": \"pic\",\n    // Strict format\n    \"http://purl.oclc.org/ooxml/wordprocessingml/main\": \"w\",\n    \"http://purl.oclc.org/ooxml/officeDocument/relationships\": \"r\",\n    \"http://purl.oclc.org/ooxml/drawingml/wordprocessingDrawing\": \"wp\",\n    \"http://purl.oclc.org/ooxml/drawingml/main\": \"a\",\n    \"http://purl.oclc.org/ooxml/drawingml/picture\": \"pic\",\n    // Common\n    \"http://schemas.openxmlformats.org/package/2006/content-types\": \"content-types\",\n    \"http://schemas.openxmlformats.org/package/2006/relationships\": \"relationships\",\n    \"http://schemas.openxmlformats.org/markup-compatibility/2006\": \"mc\",\n    \"urn:schemas-microsoft-com:vml\": \"v\",\n    \"urn:schemas-microsoft-com:office:word\": \"office-word\",\n    // [MS-DOCX]: Word Extensions to the Office Open XML (.docx) File Format\n    // https://learn.microsoft.com/en-us/openspecs/office_standards/ms-docx/b839fe1f-e1ca-4fa6-8c26-5954d0abbccd\n    \"http://schemas.microsoft.com/office/word/2010/wordml\": \"wordml\"\n};\nfunction read(xmlString) {\n    return xml.readString(xmlString, xmlNamespaceMap).then(function(document) {\n        return collapseAlternateContent(document)[0];\n    });\n}\nfunction readXmlFromZipFile(docxFile, path) {\n    if (docxFile.exists(path)) {\n        return docxFile.read(path, \"utf-8\").then(stripUtf8Bom).then(read);\n    } else {\n        return promises.resolve(null);\n    }\n}\nfunction stripUtf8Bom(xmlString) {\n    return xmlString.replace(/^\\uFEFF/g, \"\");\n}\nfunction collapseAlternateContent(node) {\n    if (node.type === \"element\") {\n        if (node.name === \"mc:AlternateContent\") {\n            return node.first(\"mc:Fallback\").children;\n        } else {\n            node.children = _.flatten(node.children.map(collapseAlternateContent, true));\n            return [\n                node\n            ];\n        }\n    } else {\n        return [\n            node\n        ];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9vZmZpY2UteG1sLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyxpRUFBYTtBQUNwQyxJQUFJRSxNQUFNRixtQkFBT0EsQ0FBQyw2REFBUTtBQUcxQkcsWUFBWSxHQUFHQztBQUNmRCwwQkFBMEIsR0FBR0U7QUFFN0IsSUFBSUMsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixnRUFBZ0U7SUFDaEUsdUVBQXVFO0lBQ3ZFLDBFQUEwRTtJQUMxRSx5REFBeUQ7SUFDekQsNERBQTREO0lBRTVELGdCQUFnQjtJQUNoQixvREFBb0Q7SUFDcEQsMkRBQTJEO0lBQzNELDhEQUE4RDtJQUM5RCw2Q0FBNkM7SUFDN0MsZ0RBQWdEO0lBRWhELFNBQVM7SUFDVCxnRUFBZ0U7SUFDaEUsZ0VBQWdFO0lBQ2hFLCtEQUErRDtJQUMvRCxpQ0FBaUM7SUFDakMseUNBQXlDO0lBRXpDLHdFQUF3RTtJQUN4RSw0R0FBNEc7SUFDNUcsd0RBQXdEO0FBQzVEO0FBR0EsU0FBU0YsS0FBS0csU0FBUztJQUNuQixPQUFPTCxJQUFJTSxVQUFVLENBQUNELFdBQVdELGlCQUM1QkcsSUFBSSxDQUFDLFNBQVNDLFFBQVE7UUFDbkIsT0FBT0MseUJBQXlCRCxTQUFTLENBQUMsRUFBRTtJQUNoRDtBQUNSO0FBR0EsU0FBU0wsbUJBQW1CTyxRQUFRLEVBQUVDLElBQUk7SUFDdEMsSUFBSUQsU0FBU0UsTUFBTSxDQUFDRCxPQUFPO1FBQ3ZCLE9BQU9ELFNBQVNSLElBQUksQ0FBQ1MsTUFBTSxTQUN0QkosSUFBSSxDQUFDTSxjQUNMTixJQUFJLENBQUNMO0lBQ2QsT0FBTztRQUNILE9BQU9ILFNBQVNlLE9BQU8sQ0FBQztJQUM1QjtBQUNKO0FBR0EsU0FBU0QsYUFBYVIsU0FBUztJQUMzQixPQUFPQSxVQUFVVSxPQUFPLENBQUMsWUFBWTtBQUN6QztBQUdBLFNBQVNOLHlCQUF5Qk8sSUFBSTtJQUNsQyxJQUFJQSxLQUFLQyxJQUFJLEtBQUssV0FBVztRQUN6QixJQUFJRCxLQUFLRSxJQUFJLEtBQUssdUJBQXVCO1lBQ3JDLE9BQU9GLEtBQUtHLEtBQUssQ0FBQyxlQUFlQyxRQUFRO1FBQzdDLE9BQU87WUFDSEosS0FBS0ksUUFBUSxHQUFHdkIsRUFBRXdCLE9BQU8sQ0FBQ0wsS0FBS0ksUUFBUSxDQUFDRSxHQUFHLENBQUNiLDBCQUEwQjtZQUN0RSxPQUFPO2dCQUFDTzthQUFLO1FBQ2pCO0lBQ0osT0FBTztRQUNILE9BQU87WUFBQ0E7U0FBSztJQUNqQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvb2ZmaWNlLXhtbC1yZWFkZXIuanM/NjZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgcHJvbWlzZXMgPSByZXF1aXJlKFwiLi4vcHJvbWlzZXNcIik7XG52YXIgeG1sID0gcmVxdWlyZShcIi4uL3htbFwiKTtcblxuXG5leHBvcnRzLnJlYWQgPSByZWFkO1xuZXhwb3J0cy5yZWFkWG1sRnJvbVppcEZpbGUgPSByZWFkWG1sRnJvbVppcEZpbGU7XG5cbnZhciB4bWxOYW1lc3BhY2VNYXAgPSB7XG4gICAgLy8gVHJhbnNpdGlvbmFsIGZvcm1hdFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3dvcmRwcm9jZXNzaW5nbWwvMjAwNi9tYWluXCI6IFwid1wiLFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL29mZmljZURvY3VtZW50LzIwMDYvcmVsYXRpb25zaGlwc1wiOiBcInJcIixcbiAgICBcImh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9kcmF3aW5nbWwvMjAwNi93b3JkcHJvY2Vzc2luZ0RyYXdpbmdcIjogXCJ3cFwiLFxuICAgIFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL2RyYXdpbmdtbC8yMDA2L21haW5cIjogXCJhXCIsXG4gICAgXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvZHJhd2luZ21sLzIwMDYvcGljdHVyZVwiOiBcInBpY1wiLFxuXG4gICAgLy8gU3RyaWN0IGZvcm1hdFxuICAgIFwiaHR0cDovL3B1cmwub2NsYy5vcmcvb294bWwvd29yZHByb2Nlc3NpbmdtbC9tYWluXCI6IFwid1wiLFxuICAgIFwiaHR0cDovL3B1cmwub2NsYy5vcmcvb294bWwvb2ZmaWNlRG9jdW1lbnQvcmVsYXRpb25zaGlwc1wiOiBcInJcIixcbiAgICBcImh0dHA6Ly9wdXJsLm9jbGMub3JnL29veG1sL2RyYXdpbmdtbC93b3JkcHJvY2Vzc2luZ0RyYXdpbmdcIjogXCJ3cFwiLFxuICAgIFwiaHR0cDovL3B1cmwub2NsYy5vcmcvb294bWwvZHJhd2luZ21sL21haW5cIjogXCJhXCIsXG4gICAgXCJodHRwOi8vcHVybC5vY2xjLm9yZy9vb3htbC9kcmF3aW5nbWwvcGljdHVyZVwiOiBcInBpY1wiLFxuXG4gICAgLy8gQ29tbW9uXG4gICAgXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8yMDA2L2NvbnRlbnQtdHlwZXNcIjogXCJjb250ZW50LXR5cGVzXCIsXG4gICAgXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8yMDA2L3JlbGF0aW9uc2hpcHNcIjogXCJyZWxhdGlvbnNoaXBzXCIsXG4gICAgXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvbWFya3VwLWNvbXBhdGliaWxpdHkvMjAwNlwiOiBcIm1jXCIsXG4gICAgXCJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbFwiOiBcInZcIixcbiAgICBcInVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOndvcmRcIjogXCJvZmZpY2Utd29yZFwiLFxuXG4gICAgLy8gW01TLURPQ1hdOiBXb3JkIEV4dGVuc2lvbnMgdG8gdGhlIE9mZmljZSBPcGVuIFhNTCAoLmRvY3gpIEZpbGUgRm9ybWF0XG4gICAgLy8gaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL2VuLXVzL29wZW5zcGVjcy9vZmZpY2Vfc3RhbmRhcmRzL21zLWRvY3gvYjgzOWZlMWYtZTFjYS00ZmE2LThjMjYtNTk1NGQwYWJiY2NkXG4gICAgXCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS93b3JkLzIwMTAvd29yZG1sXCI6IFwid29yZG1sXCJcbn07XG5cblxuZnVuY3Rpb24gcmVhZCh4bWxTdHJpbmcpIHtcbiAgICByZXR1cm4geG1sLnJlYWRTdHJpbmcoeG1sU3RyaW5nLCB4bWxOYW1lc3BhY2VNYXApXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gY29sbGFwc2VBbHRlcm5hdGVDb250ZW50KGRvY3VtZW50KVswXTtcbiAgICAgICAgfSk7XG59XG5cblxuZnVuY3Rpb24gcmVhZFhtbEZyb21aaXBGaWxlKGRvY3hGaWxlLCBwYXRoKSB7XG4gICAgaWYgKGRvY3hGaWxlLmV4aXN0cyhwYXRoKSkge1xuICAgICAgICByZXR1cm4gZG9jeEZpbGUucmVhZChwYXRoLCBcInV0Zi04XCIpXG4gICAgICAgICAgICAudGhlbihzdHJpcFV0ZjhCb20pXG4gICAgICAgICAgICAudGhlbihyZWFkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShudWxsKTtcbiAgICB9XG59XG5cblxuZnVuY3Rpb24gc3RyaXBVdGY4Qm9tKHhtbFN0cmluZykge1xuICAgIHJldHVybiB4bWxTdHJpbmcucmVwbGFjZSgvXlxcdUZFRkYvZywgJycpO1xufVxuXG5cbmZ1bmN0aW9uIGNvbGxhcHNlQWx0ZXJuYXRlQ29udGVudChub2RlKSB7XG4gICAgaWYgKG5vZGUudHlwZSA9PT0gXCJlbGVtZW50XCIpIHtcbiAgICAgICAgaWYgKG5vZGUubmFtZSA9PT0gXCJtYzpBbHRlcm5hdGVDb250ZW50XCIpIHtcbiAgICAgICAgICAgIHJldHVybiBub2RlLmZpcnN0KFwibWM6RmFsbGJhY2tcIikuY2hpbGRyZW47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBub2RlLmNoaWxkcmVuID0gXy5mbGF0dGVuKG5vZGUuY2hpbGRyZW4ubWFwKGNvbGxhcHNlQWx0ZXJuYXRlQ29udGVudCwgdHJ1ZSkpO1xuICAgICAgICAgICAgcmV0dXJuIFtub2RlXTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBbbm9kZV07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwicHJvbWlzZXMiLCJ4bWwiLCJleHBvcnRzIiwicmVhZCIsInJlYWRYbWxGcm9tWmlwRmlsZSIsInhtbE5hbWVzcGFjZU1hcCIsInhtbFN0cmluZyIsInJlYWRTdHJpbmciLCJ0aGVuIiwiZG9jdW1lbnQiLCJjb2xsYXBzZUFsdGVybmF0ZUNvbnRlbnQiLCJkb2N4RmlsZSIsInBhdGgiLCJleGlzdHMiLCJzdHJpcFV0ZjhCb20iLCJyZXNvbHZlIiwicmVwbGFjZSIsIm5vZGUiLCJ0eXBlIiwibmFtZSIsImZpcnN0IiwiY2hpbGRyZW4iLCJmbGF0dGVuIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/office-xml-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/relationships-reader.js":
/*!***************************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/relationships-reader.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readRelationships = readRelationships;\nexports.defaultValue = new Relationships([]);\nexports.Relationships = Relationships;\nfunction readRelationships(element) {\n    var relationships = [];\n    element.children.forEach(function(child) {\n        if (child.name === \"relationships:Relationship\") {\n            var relationship = {\n                relationshipId: child.attributes.Id,\n                target: child.attributes.Target,\n                type: child.attributes.Type\n            };\n            relationships.push(relationship);\n        }\n    });\n    return new Relationships(relationships);\n}\nfunction Relationships(relationships) {\n    var targetsByRelationshipId = {};\n    relationships.forEach(function(relationship) {\n        targetsByRelationshipId[relationship.relationshipId] = relationship.target;\n    });\n    var targetsByType = {};\n    relationships.forEach(function(relationship) {\n        if (!targetsByType[relationship.type]) {\n            targetsByType[relationship.type] = [];\n        }\n        targetsByType[relationship.type].push(relationship.target);\n    });\n    return {\n        findTargetByRelationshipId: function(relationshipId) {\n            return targetsByRelationshipId[relationshipId];\n        },\n        findTargetsByType: function(type) {\n            return targetsByType[type] || [];\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9yZWxhdGlvbnNoaXBzLXJlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQUEseUJBQXlCLEdBQUdDO0FBQzVCRCxvQkFBb0IsR0FBRyxJQUFJRyxjQUFjLEVBQUU7QUFDM0NILHFCQUFxQixHQUFHRztBQUd4QixTQUFTRixrQkFBa0JHLE9BQU87SUFDOUIsSUFBSUMsZ0JBQWdCLEVBQUU7SUFDdEJELFFBQVFFLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLFNBQVNDLEtBQUs7UUFDbkMsSUFBSUEsTUFBTUMsSUFBSSxLQUFLLDhCQUE4QjtZQUM3QyxJQUFJQyxlQUFlO2dCQUNmQyxnQkFBZ0JILE1BQU1JLFVBQVUsQ0FBQ0MsRUFBRTtnQkFDbkNDLFFBQVFOLE1BQU1JLFVBQVUsQ0FBQ0csTUFBTTtnQkFDL0JDLE1BQU1SLE1BQU1JLFVBQVUsQ0FBQ0ssSUFBSTtZQUMvQjtZQUNBWixjQUFjYSxJQUFJLENBQUNSO1FBQ3ZCO0lBQ0o7SUFDQSxPQUFPLElBQUlQLGNBQWNFO0FBQzdCO0FBRUEsU0FBU0YsY0FBY0UsYUFBYTtJQUNoQyxJQUFJYywwQkFBMEIsQ0FBQztJQUMvQmQsY0FBY0UsT0FBTyxDQUFDLFNBQVNHLFlBQVk7UUFDdkNTLHVCQUF1QixDQUFDVCxhQUFhQyxjQUFjLENBQUMsR0FBR0QsYUFBYUksTUFBTTtJQUM5RTtJQUVBLElBQUlNLGdCQUFnQixDQUFDO0lBQ3JCZixjQUFjRSxPQUFPLENBQUMsU0FBU0csWUFBWTtRQUN2QyxJQUFJLENBQUNVLGFBQWEsQ0FBQ1YsYUFBYU0sSUFBSSxDQUFDLEVBQUU7WUFDbkNJLGFBQWEsQ0FBQ1YsYUFBYU0sSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUN6QztRQUNBSSxhQUFhLENBQUNWLGFBQWFNLElBQUksQ0FBQyxDQUFDRSxJQUFJLENBQUNSLGFBQWFJLE1BQU07SUFDN0Q7SUFFQSxPQUFPO1FBQ0hPLDRCQUE0QixTQUFTVixjQUFjO1lBQy9DLE9BQU9RLHVCQUF1QixDQUFDUixlQUFlO1FBQ2xEO1FBQ0FXLG1CQUFtQixTQUFTTixJQUFJO1lBQzVCLE9BQU9JLGFBQWEsQ0FBQ0osS0FBSyxJQUFJLEVBQUU7UUFDcEM7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2RvY3gvcmVsYXRpb25zaGlwcy1yZWFkZXIuanM/OTgzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWRSZWxhdGlvbnNoaXBzID0gcmVhZFJlbGF0aW9uc2hpcHM7XG5leHBvcnRzLmRlZmF1bHRWYWx1ZSA9IG5ldyBSZWxhdGlvbnNoaXBzKFtdKTtcbmV4cG9ydHMuUmVsYXRpb25zaGlwcyA9IFJlbGF0aW9uc2hpcHM7XG5cblxuZnVuY3Rpb24gcmVhZFJlbGF0aW9uc2hpcHMoZWxlbWVudCkge1xuICAgIHZhciByZWxhdGlvbnNoaXBzID0gW107XG4gICAgZWxlbWVudC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIGlmIChjaGlsZC5uYW1lID09PSBcInJlbGF0aW9uc2hpcHM6UmVsYXRpb25zaGlwXCIpIHtcbiAgICAgICAgICAgIHZhciByZWxhdGlvbnNoaXAgPSB7XG4gICAgICAgICAgICAgICAgcmVsYXRpb25zaGlwSWQ6IGNoaWxkLmF0dHJpYnV0ZXMuSWQsXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBjaGlsZC5hdHRyaWJ1dGVzLlRhcmdldCxcbiAgICAgICAgICAgICAgICB0eXBlOiBjaGlsZC5hdHRyaWJ1dGVzLlR5cGVcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZWxhdGlvbnNoaXBzLnB1c2gocmVsYXRpb25zaGlwKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBuZXcgUmVsYXRpb25zaGlwcyhyZWxhdGlvbnNoaXBzKTtcbn1cblxuZnVuY3Rpb24gUmVsYXRpb25zaGlwcyhyZWxhdGlvbnNoaXBzKSB7XG4gICAgdmFyIHRhcmdldHNCeVJlbGF0aW9uc2hpcElkID0ge307XG4gICAgcmVsYXRpb25zaGlwcy5mb3JFYWNoKGZ1bmN0aW9uKHJlbGF0aW9uc2hpcCkge1xuICAgICAgICB0YXJnZXRzQnlSZWxhdGlvbnNoaXBJZFtyZWxhdGlvbnNoaXAucmVsYXRpb25zaGlwSWRdID0gcmVsYXRpb25zaGlwLnRhcmdldDtcbiAgICB9KTtcblxuICAgIHZhciB0YXJnZXRzQnlUeXBlID0ge307XG4gICAgcmVsYXRpb25zaGlwcy5mb3JFYWNoKGZ1bmN0aW9uKHJlbGF0aW9uc2hpcCkge1xuICAgICAgICBpZiAoIXRhcmdldHNCeVR5cGVbcmVsYXRpb25zaGlwLnR5cGVdKSB7XG4gICAgICAgICAgICB0YXJnZXRzQnlUeXBlW3JlbGF0aW9uc2hpcC50eXBlXSA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldHNCeVR5cGVbcmVsYXRpb25zaGlwLnR5cGVdLnB1c2gocmVsYXRpb25zaGlwLnRhcmdldCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBmaW5kVGFyZ2V0QnlSZWxhdGlvbnNoaXBJZDogZnVuY3Rpb24ocmVsYXRpb25zaGlwSWQpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXJnZXRzQnlSZWxhdGlvbnNoaXBJZFtyZWxhdGlvbnNoaXBJZF07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRUYXJnZXRzQnlUeXBlOiBmdW5jdGlvbih0eXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0c0J5VHlwZVt0eXBlXSB8fCBbXTtcbiAgICAgICAgfVxuICAgIH07XG59XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlYWRSZWxhdGlvbnNoaXBzIiwiZGVmYXVsdFZhbHVlIiwiUmVsYXRpb25zaGlwcyIsImVsZW1lbnQiLCJyZWxhdGlvbnNoaXBzIiwiY2hpbGRyZW4iLCJmb3JFYWNoIiwiY2hpbGQiLCJuYW1lIiwicmVsYXRpb25zaGlwIiwicmVsYXRpb25zaGlwSWQiLCJhdHRyaWJ1dGVzIiwiSWQiLCJ0YXJnZXQiLCJUYXJnZXQiLCJ0eXBlIiwiVHlwZSIsInB1c2giLCJ0YXJnZXRzQnlSZWxhdGlvbnNoaXBJZCIsInRhcmdldHNCeVR5cGUiLCJmaW5kVGFyZ2V0QnlSZWxhdGlvbnNoaXBJZCIsImZpbmRUYXJnZXRzQnlUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/relationships-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/style-map.js":
/*!****************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/style-map.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ../promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar xml = __webpack_require__(/*! ../xml */ \"(ssr)/./node_modules/mammoth/lib/xml/index.js\");\nexports.writeStyleMap = writeStyleMap;\nexports.readStyleMap = readStyleMap;\nvar schema = \"http://schemas.zwobble.org/mammoth/style-map\";\nvar styleMapPath = \"mammoth/style-map\";\nvar styleMapAbsolutePath = \"/\" + styleMapPath;\nfunction writeStyleMap(docxFile, styleMap) {\n    docxFile.write(styleMapPath, styleMap);\n    return updateRelationships(docxFile).then(function() {\n        return updateContentTypes(docxFile);\n    });\n}\nfunction updateRelationships(docxFile) {\n    var path = \"word/_rels/document.xml.rels\";\n    var relationshipsUri = \"http://schemas.openxmlformats.org/package/2006/relationships\";\n    var relationshipElementName = \"{\" + relationshipsUri + \"}Relationship\";\n    return docxFile.read(path, \"utf8\").then(xml.readString).then(function(relationshipsContainer) {\n        var relationships = relationshipsContainer.children;\n        addOrUpdateElement(relationships, relationshipElementName, \"Id\", {\n            \"Id\": \"rMammothStyleMap\",\n            \"Type\": schema,\n            \"Target\": styleMapAbsolutePath\n        });\n        var namespaces = {\n            \"\": relationshipsUri\n        };\n        return docxFile.write(path, xml.writeString(relationshipsContainer, namespaces));\n    });\n}\nfunction updateContentTypes(docxFile) {\n    var path = \"[Content_Types].xml\";\n    var contentTypesUri = \"http://schemas.openxmlformats.org/package/2006/content-types\";\n    var overrideName = \"{\" + contentTypesUri + \"}Override\";\n    return docxFile.read(path, \"utf8\").then(xml.readString).then(function(typesElement) {\n        var children = typesElement.children;\n        addOrUpdateElement(children, overrideName, \"PartName\", {\n            \"PartName\": styleMapAbsolutePath,\n            \"ContentType\": \"text/prs.mammoth.style-map\"\n        });\n        var namespaces = {\n            \"\": contentTypesUri\n        };\n        return docxFile.write(path, xml.writeString(typesElement, namespaces));\n    });\n}\nfunction addOrUpdateElement(elements, name, identifyingAttribute, attributes) {\n    var existingElement = _.find(elements, function(element) {\n        return element.name === name && element.attributes[identifyingAttribute] === attributes[identifyingAttribute];\n    });\n    if (existingElement) {\n        existingElement.attributes = attributes;\n    } else {\n        elements.push(xml.element(name, attributes));\n    }\n}\nfunction readStyleMap(docxFile) {\n    if (docxFile.exists(styleMapPath)) {\n        return docxFile.read(styleMapPath, \"utf8\");\n    } else {\n        return promises.resolve(null);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZS1tYXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFFNUIsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUMsaUVBQWE7QUFDcEMsSUFBSUUsTUFBTUYsbUJBQU9BLENBQUMsNkRBQVE7QUFFMUJHLHFCQUFxQixHQUFHQztBQUN4QkQsb0JBQW9CLEdBQUdFO0FBR3ZCLElBQUlDLFNBQVM7QUFDYixJQUFJQyxlQUFlO0FBQ25CLElBQUlDLHVCQUF1QixNQUFNRDtBQUVqQyxTQUFTSCxjQUFjSyxRQUFRLEVBQUVDLFFBQVE7SUFDckNELFNBQVNFLEtBQUssQ0FBQ0osY0FBY0c7SUFDN0IsT0FBT0Usb0JBQW9CSCxVQUFVSSxJQUFJLENBQUM7UUFDdEMsT0FBT0MsbUJBQW1CTDtJQUM5QjtBQUNKO0FBRUEsU0FBU0csb0JBQW9CSCxRQUFRO0lBQ2pDLElBQUlNLE9BQU87SUFDWCxJQUFJQyxtQkFBbUI7SUFDdkIsSUFBSUMsMEJBQTBCLE1BQU1ELG1CQUFtQjtJQUN2RCxPQUFPUCxTQUFTUyxJQUFJLENBQUNILE1BQU0sUUFDdEJGLElBQUksQ0FBQ1gsSUFBSWlCLFVBQVUsRUFDbkJOLElBQUksQ0FBQyxTQUFTTyxzQkFBc0I7UUFDakMsSUFBSUMsZ0JBQWdCRCx1QkFBdUJFLFFBQVE7UUFDbkRDLG1CQUFtQkYsZUFBZUoseUJBQXlCLE1BQU07WUFDN0QsTUFBTTtZQUNOLFFBQVFYO1lBQ1IsVUFBVUU7UUFDZDtRQUVBLElBQUlnQixhQUFhO1lBQUMsSUFBSVI7UUFBZ0I7UUFDdEMsT0FBT1AsU0FBU0UsS0FBSyxDQUFDSSxNQUFNYixJQUFJdUIsV0FBVyxDQUFDTCx3QkFBd0JJO0lBQ3hFO0FBQ1I7QUFFQSxTQUFTVixtQkFBbUJMLFFBQVE7SUFDaEMsSUFBSU0sT0FBTztJQUNYLElBQUlXLGtCQUFrQjtJQUN0QixJQUFJQyxlQUFlLE1BQU1ELGtCQUFrQjtJQUMzQyxPQUFPakIsU0FBU1MsSUFBSSxDQUFDSCxNQUFNLFFBQ3RCRixJQUFJLENBQUNYLElBQUlpQixVQUFVLEVBQ25CTixJQUFJLENBQUMsU0FBU2UsWUFBWTtRQUN2QixJQUFJTixXQUFXTSxhQUFhTixRQUFRO1FBQ3BDQyxtQkFBbUJELFVBQVVLLGNBQWMsWUFBWTtZQUNuRCxZQUFZbkI7WUFDWixlQUFlO1FBQ25CO1FBQ0EsSUFBSWdCLGFBQWE7WUFBQyxJQUFJRTtRQUFlO1FBQ3JDLE9BQU9qQixTQUFTRSxLQUFLLENBQUNJLE1BQU1iLElBQUl1QixXQUFXLENBQUNHLGNBQWNKO0lBQzlEO0FBQ1I7QUFFQSxTQUFTRCxtQkFBbUJNLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxvQkFBb0IsRUFBRUMsVUFBVTtJQUN4RSxJQUFJQyxrQkFBa0JsQyxFQUFFbUMsSUFBSSxDQUFDTCxVQUFVLFNBQVNNLE9BQU87UUFDbkQsT0FBT0EsUUFBUUwsSUFBSSxLQUFLQSxRQUNwQkssUUFBUUgsVUFBVSxDQUFDRCxxQkFBcUIsS0FBS0MsVUFBVSxDQUFDRCxxQkFBcUI7SUFDckY7SUFDQSxJQUFJRSxpQkFBaUI7UUFDakJBLGdCQUFnQkQsVUFBVSxHQUFHQTtJQUNqQyxPQUFPO1FBQ0hILFNBQVNPLElBQUksQ0FBQ2xDLElBQUlpQyxPQUFPLENBQUNMLE1BQU1FO0lBQ3BDO0FBQ0o7QUFFQSxTQUFTM0IsYUFBYUksUUFBUTtJQUMxQixJQUFJQSxTQUFTNEIsTUFBTSxDQUFDOUIsZUFBZTtRQUMvQixPQUFPRSxTQUFTUyxJQUFJLENBQUNYLGNBQWM7SUFDdkMsT0FBTztRQUNILE9BQU9OLFNBQVNxQyxPQUFPLENBQUM7SUFDNUI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L3N0eWxlLW1hcC5qcz9mMWU3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG5cbnZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuLi9wcm9taXNlc1wiKTtcbnZhciB4bWwgPSByZXF1aXJlKFwiLi4veG1sXCIpO1xuXG5leHBvcnRzLndyaXRlU3R5bGVNYXAgPSB3cml0ZVN0eWxlTWFwO1xuZXhwb3J0cy5yZWFkU3R5bGVNYXAgPSByZWFkU3R5bGVNYXA7XG5cblxudmFyIHNjaGVtYSA9IFwiaHR0cDovL3NjaGVtYXMuendvYmJsZS5vcmcvbWFtbW90aC9zdHlsZS1tYXBcIjtcbnZhciBzdHlsZU1hcFBhdGggPSBcIm1hbW1vdGgvc3R5bGUtbWFwXCI7XG52YXIgc3R5bGVNYXBBYnNvbHV0ZVBhdGggPSBcIi9cIiArIHN0eWxlTWFwUGF0aDtcblxuZnVuY3Rpb24gd3JpdGVTdHlsZU1hcChkb2N4RmlsZSwgc3R5bGVNYXApIHtcbiAgICBkb2N4RmlsZS53cml0ZShzdHlsZU1hcFBhdGgsIHN0eWxlTWFwKTtcbiAgICByZXR1cm4gdXBkYXRlUmVsYXRpb25zaGlwcyhkb2N4RmlsZSkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZUNvbnRlbnRUeXBlcyhkb2N4RmlsZSk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVJlbGF0aW9uc2hpcHMoZG9jeEZpbGUpIHtcbiAgICB2YXIgcGF0aCA9IFwid29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsc1wiO1xuICAgIHZhciByZWxhdGlvbnNoaXBzVXJpID0gXCJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8yMDA2L3JlbGF0aW9uc2hpcHNcIjtcbiAgICB2YXIgcmVsYXRpb25zaGlwRWxlbWVudE5hbWUgPSBcIntcIiArIHJlbGF0aW9uc2hpcHNVcmkgKyBcIn1SZWxhdGlvbnNoaXBcIjtcbiAgICByZXR1cm4gZG9jeEZpbGUucmVhZChwYXRoLCBcInV0ZjhcIilcbiAgICAgICAgLnRoZW4oeG1sLnJlYWRTdHJpbmcpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlbGF0aW9uc2hpcHNDb250YWluZXIpIHtcbiAgICAgICAgICAgIHZhciByZWxhdGlvbnNoaXBzID0gcmVsYXRpb25zaGlwc0NvbnRhaW5lci5jaGlsZHJlbjtcbiAgICAgICAgICAgIGFkZE9yVXBkYXRlRWxlbWVudChyZWxhdGlvbnNoaXBzLCByZWxhdGlvbnNoaXBFbGVtZW50TmFtZSwgXCJJZFwiLCB7XG4gICAgICAgICAgICAgICAgXCJJZFwiOiBcInJNYW1tb3RoU3R5bGVNYXBcIixcbiAgICAgICAgICAgICAgICBcIlR5cGVcIjogc2NoZW1hLFxuICAgICAgICAgICAgICAgIFwiVGFyZ2V0XCI6IHN0eWxlTWFwQWJzb2x1dGVQYXRoXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyIG5hbWVzcGFjZXMgPSB7XCJcIjogcmVsYXRpb25zaGlwc1VyaX07XG4gICAgICAgICAgICByZXR1cm4gZG9jeEZpbGUud3JpdGUocGF0aCwgeG1sLndyaXRlU3RyaW5nKHJlbGF0aW9uc2hpcHNDb250YWluZXIsIG5hbWVzcGFjZXMpKTtcbiAgICAgICAgfSk7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUNvbnRlbnRUeXBlcyhkb2N4RmlsZSkge1xuICAgIHZhciBwYXRoID0gXCJbQ29udGVudF9UeXBlc10ueG1sXCI7XG4gICAgdmFyIGNvbnRlbnRUeXBlc1VyaSA9IFwiaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9jb250ZW50LXR5cGVzXCI7XG4gICAgdmFyIG92ZXJyaWRlTmFtZSA9IFwie1wiICsgY29udGVudFR5cGVzVXJpICsgXCJ9T3ZlcnJpZGVcIjtcbiAgICByZXR1cm4gZG9jeEZpbGUucmVhZChwYXRoLCBcInV0ZjhcIilcbiAgICAgICAgLnRoZW4oeG1sLnJlYWRTdHJpbmcpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHR5cGVzRWxlbWVudCkge1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gdHlwZXNFbGVtZW50LmNoaWxkcmVuO1xuICAgICAgICAgICAgYWRkT3JVcGRhdGVFbGVtZW50KGNoaWxkcmVuLCBvdmVycmlkZU5hbWUsIFwiUGFydE5hbWVcIiwge1xuICAgICAgICAgICAgICAgIFwiUGFydE5hbWVcIjogc3R5bGVNYXBBYnNvbHV0ZVBhdGgsXG4gICAgICAgICAgICAgICAgXCJDb250ZW50VHlwZVwiOiBcInRleHQvcHJzLm1hbW1vdGguc3R5bGUtbWFwXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIG5hbWVzcGFjZXMgPSB7XCJcIjogY29udGVudFR5cGVzVXJpfTtcbiAgICAgICAgICAgIHJldHVybiBkb2N4RmlsZS53cml0ZShwYXRoLCB4bWwud3JpdGVTdHJpbmcodHlwZXNFbGVtZW50LCBuYW1lc3BhY2VzKSk7XG4gICAgICAgIH0pO1xufVxuXG5mdW5jdGlvbiBhZGRPclVwZGF0ZUVsZW1lbnQoZWxlbWVudHMsIG5hbWUsIGlkZW50aWZ5aW5nQXR0cmlidXRlLCBhdHRyaWJ1dGVzKSB7XG4gICAgdmFyIGV4aXN0aW5nRWxlbWVudCA9IF8uZmluZChlbGVtZW50cywgZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICByZXR1cm4gZWxlbWVudC5uYW1lID09PSBuYW1lICYmXG4gICAgICAgICAgICBlbGVtZW50LmF0dHJpYnV0ZXNbaWRlbnRpZnlpbmdBdHRyaWJ1dGVdID09PSBhdHRyaWJ1dGVzW2lkZW50aWZ5aW5nQXR0cmlidXRlXTtcbiAgICB9KTtcbiAgICBpZiAoZXhpc3RpbmdFbGVtZW50KSB7XG4gICAgICAgIGV4aXN0aW5nRWxlbWVudC5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50cy5wdXNoKHhtbC5lbGVtZW50KG5hbWUsIGF0dHJpYnV0ZXMpKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHJlYWRTdHlsZU1hcChkb2N4RmlsZSkge1xuICAgIGlmIChkb2N4RmlsZS5leGlzdHMoc3R5bGVNYXBQYXRoKSkge1xuICAgICAgICByZXR1cm4gZG9jeEZpbGUucmVhZChzdHlsZU1hcFBhdGgsIFwidXRmOFwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShudWxsKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJwcm9taXNlcyIsInhtbCIsImV4cG9ydHMiLCJ3cml0ZVN0eWxlTWFwIiwicmVhZFN0eWxlTWFwIiwic2NoZW1hIiwic3R5bGVNYXBQYXRoIiwic3R5bGVNYXBBYnNvbHV0ZVBhdGgiLCJkb2N4RmlsZSIsInN0eWxlTWFwIiwid3JpdGUiLCJ1cGRhdGVSZWxhdGlvbnNoaXBzIiwidGhlbiIsInVwZGF0ZUNvbnRlbnRUeXBlcyIsInBhdGgiLCJyZWxhdGlvbnNoaXBzVXJpIiwicmVsYXRpb25zaGlwRWxlbWVudE5hbWUiLCJyZWFkIiwicmVhZFN0cmluZyIsInJlbGF0aW9uc2hpcHNDb250YWluZXIiLCJyZWxhdGlvbnNoaXBzIiwiY2hpbGRyZW4iLCJhZGRPclVwZGF0ZUVsZW1lbnQiLCJuYW1lc3BhY2VzIiwid3JpdGVTdHJpbmciLCJjb250ZW50VHlwZXNVcmkiLCJvdmVycmlkZU5hbWUiLCJ0eXBlc0VsZW1lbnQiLCJlbGVtZW50cyIsIm5hbWUiLCJpZGVudGlmeWluZ0F0dHJpYnV0ZSIsImF0dHJpYnV0ZXMiLCJleGlzdGluZ0VsZW1lbnQiLCJmaW5kIiwiZWxlbWVudCIsInB1c2giLCJleGlzdHMiLCJyZXNvbHZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/style-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/styles-reader.js":
/*!********************************************************!*\
  !*** ./node_modules/mammoth/lib/docx/styles-reader.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.readStylesXml = readStylesXml;\nexports.Styles = Styles;\nexports.defaultStyles = new Styles({}, {});\nfunction Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles) {\n    return {\n        findParagraphStyleById: function(styleId) {\n            return paragraphStyles[styleId];\n        },\n        findCharacterStyleById: function(styleId) {\n            return characterStyles[styleId];\n        },\n        findTableStyleById: function(styleId) {\n            return tableStyles[styleId];\n        },\n        findNumberingStyleById: function(styleId) {\n            return numberingStyles[styleId];\n        }\n    };\n}\nStyles.EMPTY = new Styles({}, {}, {}, {});\nfunction readStylesXml(root) {\n    var paragraphStyles = {};\n    var characterStyles = {};\n    var tableStyles = {};\n    var numberingStyles = {};\n    var styles = {\n        \"paragraph\": paragraphStyles,\n        \"character\": characterStyles,\n        \"table\": tableStyles\n    };\n    root.getElementsByTagName(\"w:style\").forEach(function(styleElement) {\n        var style = readStyleElement(styleElement);\n        if (style.type === \"numbering\") {\n            numberingStyles[style.styleId] = readNumberingStyleElement(styleElement);\n        } else {\n            var styleSet = styles[style.type];\n            if (styleSet) {\n                styleSet[style.styleId] = style;\n            }\n        }\n    });\n    return new Styles(paragraphStyles, characterStyles, tableStyles, numberingStyles);\n}\nfunction readStyleElement(styleElement) {\n    var type = styleElement.attributes[\"w:type\"];\n    var styleId = styleElement.attributes[\"w:styleId\"];\n    var name = styleName(styleElement);\n    return {\n        type: type,\n        styleId: styleId,\n        name: name\n    };\n}\nfunction styleName(styleElement) {\n    var nameElement = styleElement.first(\"w:name\");\n    return nameElement ? nameElement.attributes[\"w:val\"] : null;\n}\nfunction readNumberingStyleElement(styleElement) {\n    var numId = styleElement.firstOrEmpty(\"w:pPr\").firstOrEmpty(\"w:numPr\").firstOrEmpty(\"w:numId\").attributes[\"w:val\"];\n    return {\n        numId: numId\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC9zdHlsZXMtcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxxQkFBcUIsR0FBR0M7QUFDeEJELGNBQWMsR0FBR0U7QUFDakJGLHFCQUFxQixHQUFHLElBQUlFLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFeEMsU0FBU0EsT0FBT0UsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLFdBQVcsRUFBRUMsZUFBZTtJQUMxRSxPQUFPO1FBQ0hDLHdCQUF3QixTQUFTQyxPQUFPO1lBQ3BDLE9BQU9MLGVBQWUsQ0FBQ0ssUUFBUTtRQUNuQztRQUNBQyx3QkFBd0IsU0FBU0QsT0FBTztZQUNwQyxPQUFPSixlQUFlLENBQUNJLFFBQVE7UUFDbkM7UUFDQUUsb0JBQW9CLFNBQVNGLE9BQU87WUFDaEMsT0FBT0gsV0FBVyxDQUFDRyxRQUFRO1FBQy9CO1FBQ0FHLHdCQUF3QixTQUFTSCxPQUFPO1lBQ3BDLE9BQU9GLGVBQWUsQ0FBQ0UsUUFBUTtRQUNuQztJQUNKO0FBQ0o7QUFFQVAsT0FBT1csS0FBSyxHQUFHLElBQUlYLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztBQUV2QyxTQUFTRCxjQUFjYSxJQUFJO0lBQ3ZCLElBQUlWLGtCQUFrQixDQUFDO0lBQ3ZCLElBQUlDLGtCQUFrQixDQUFDO0lBQ3ZCLElBQUlDLGNBQWMsQ0FBQztJQUNuQixJQUFJQyxrQkFBa0IsQ0FBQztJQUV2QixJQUFJUSxTQUFTO1FBQ1QsYUFBYVg7UUFDYixhQUFhQztRQUNiLFNBQVNDO0lBQ2I7SUFFQVEsS0FBS0Usb0JBQW9CLENBQUMsV0FBV0MsT0FBTyxDQUFDLFNBQVNDLFlBQVk7UUFDOUQsSUFBSUMsUUFBUUMsaUJBQWlCRjtRQUM3QixJQUFJQyxNQUFNRSxJQUFJLEtBQUssYUFBYTtZQUM1QmQsZUFBZSxDQUFDWSxNQUFNVixPQUFPLENBQUMsR0FBR2EsMEJBQTBCSjtRQUMvRCxPQUFPO1lBQ0gsSUFBSUssV0FBV1IsTUFBTSxDQUFDSSxNQUFNRSxJQUFJLENBQUM7WUFDakMsSUFBSUUsVUFBVTtnQkFDVkEsUUFBUSxDQUFDSixNQUFNVixPQUFPLENBQUMsR0FBR1U7WUFDOUI7UUFDSjtJQUNKO0lBRUEsT0FBTyxJQUFJakIsT0FBT0UsaUJBQWlCQyxpQkFBaUJDLGFBQWFDO0FBQ3JFO0FBRUEsU0FBU2EsaUJBQWlCRixZQUFZO0lBQ2xDLElBQUlHLE9BQU9ILGFBQWFNLFVBQVUsQ0FBQyxTQUFTO0lBQzVDLElBQUlmLFVBQVVTLGFBQWFNLFVBQVUsQ0FBQyxZQUFZO0lBQ2xELElBQUlDLE9BQU9DLFVBQVVSO0lBQ3JCLE9BQU87UUFBQ0csTUFBTUE7UUFBTVosU0FBU0E7UUFBU2dCLE1BQU1BO0lBQUk7QUFDcEQ7QUFFQSxTQUFTQyxVQUFVUixZQUFZO0lBQzNCLElBQUlTLGNBQWNULGFBQWFVLEtBQUssQ0FBQztJQUNyQyxPQUFPRCxjQUFjQSxZQUFZSCxVQUFVLENBQUMsUUFBUSxHQUFHO0FBQzNEO0FBRUEsU0FBU0YsMEJBQTBCSixZQUFZO0lBQzNDLElBQUlXLFFBQVFYLGFBQ1BZLFlBQVksQ0FBQyxTQUNiQSxZQUFZLENBQUMsV0FDYkEsWUFBWSxDQUFDLFdBQ2JOLFVBQVUsQ0FBQyxRQUFRO0lBQ3hCLE9BQU87UUFBQ0ssT0FBT0E7SUFBSztBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9kb2N4L3N0eWxlcy1yZWFkZXIuanM/Y2M3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWRTdHlsZXNYbWwgPSByZWFkU3R5bGVzWG1sO1xuZXhwb3J0cy5TdHlsZXMgPSBTdHlsZXM7XG5leHBvcnRzLmRlZmF1bHRTdHlsZXMgPSBuZXcgU3R5bGVzKHt9LCB7fSk7XG5cbmZ1bmN0aW9uIFN0eWxlcyhwYXJhZ3JhcGhTdHlsZXMsIGNoYXJhY3RlclN0eWxlcywgdGFibGVTdHlsZXMsIG51bWJlcmluZ1N0eWxlcykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGZpbmRQYXJhZ3JhcGhTdHlsZUJ5SWQ6IGZ1bmN0aW9uKHN0eWxlSWQpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJhZ3JhcGhTdHlsZXNbc3R5bGVJZF07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRDaGFyYWN0ZXJTdHlsZUJ5SWQ6IGZ1bmN0aW9uKHN0eWxlSWQpIHtcbiAgICAgICAgICAgIHJldHVybiBjaGFyYWN0ZXJTdHlsZXNbc3R5bGVJZF07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRUYWJsZVN0eWxlQnlJZDogZnVuY3Rpb24oc3R5bGVJZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRhYmxlU3R5bGVzW3N0eWxlSWRdO1xuICAgICAgICB9LFxuICAgICAgICBmaW5kTnVtYmVyaW5nU3R5bGVCeUlkOiBmdW5jdGlvbihzdHlsZUlkKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVtYmVyaW5nU3R5bGVzW3N0eWxlSWRdO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuU3R5bGVzLkVNUFRZID0gbmV3IFN0eWxlcyh7fSwge30sIHt9LCB7fSk7XG5cbmZ1bmN0aW9uIHJlYWRTdHlsZXNYbWwocm9vdCkge1xuICAgIHZhciBwYXJhZ3JhcGhTdHlsZXMgPSB7fTtcbiAgICB2YXIgY2hhcmFjdGVyU3R5bGVzID0ge307XG4gICAgdmFyIHRhYmxlU3R5bGVzID0ge307XG4gICAgdmFyIG51bWJlcmluZ1N0eWxlcyA9IHt9O1xuXG4gICAgdmFyIHN0eWxlcyA9IHtcbiAgICAgICAgXCJwYXJhZ3JhcGhcIjogcGFyYWdyYXBoU3R5bGVzLFxuICAgICAgICBcImNoYXJhY3RlclwiOiBjaGFyYWN0ZXJTdHlsZXMsXG4gICAgICAgIFwidGFibGVcIjogdGFibGVTdHlsZXNcbiAgICB9O1xuXG4gICAgcm9vdC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInc6c3R5bGVcIikuZm9yRWFjaChmdW5jdGlvbihzdHlsZUVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gcmVhZFN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgICAgICBpZiAoc3R5bGUudHlwZSA9PT0gXCJudW1iZXJpbmdcIikge1xuICAgICAgICAgICAgbnVtYmVyaW5nU3R5bGVzW3N0eWxlLnN0eWxlSWRdID0gcmVhZE51bWJlcmluZ1N0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIHN0eWxlU2V0ID0gc3R5bGVzW3N0eWxlLnR5cGVdO1xuICAgICAgICAgICAgaWYgKHN0eWxlU2V0KSB7XG4gICAgICAgICAgICAgICAgc3R5bGVTZXRbc3R5bGUuc3R5bGVJZF0gPSBzdHlsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG5ldyBTdHlsZXMocGFyYWdyYXBoU3R5bGVzLCBjaGFyYWN0ZXJTdHlsZXMsIHRhYmxlU3R5bGVzLCBudW1iZXJpbmdTdHlsZXMpO1xufVxuXG5mdW5jdGlvbiByZWFkU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAgIHZhciB0eXBlID0gc3R5bGVFbGVtZW50LmF0dHJpYnV0ZXNbXCJ3OnR5cGVcIl07XG4gICAgdmFyIHN0eWxlSWQgPSBzdHlsZUVsZW1lbnQuYXR0cmlidXRlc1tcInc6c3R5bGVJZFwiXTtcbiAgICB2YXIgbmFtZSA9IHN0eWxlTmFtZShzdHlsZUVsZW1lbnQpO1xuICAgIHJldHVybiB7dHlwZTogdHlwZSwgc3R5bGVJZDogc3R5bGVJZCwgbmFtZTogbmFtZX07XG59XG5cbmZ1bmN0aW9uIHN0eWxlTmFtZShzdHlsZUVsZW1lbnQpIHtcbiAgICB2YXIgbmFtZUVsZW1lbnQgPSBzdHlsZUVsZW1lbnQuZmlyc3QoXCJ3Om5hbWVcIik7XG4gICAgcmV0dXJuIG5hbWVFbGVtZW50ID8gbmFtZUVsZW1lbnQuYXR0cmlidXRlc1tcInc6dmFsXCJdIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gcmVhZE51bWJlcmluZ1N0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgICB2YXIgbnVtSWQgPSBzdHlsZUVsZW1lbnRcbiAgICAgICAgLmZpcnN0T3JFbXB0eShcInc6cFByXCIpXG4gICAgICAgIC5maXJzdE9yRW1wdHkoXCJ3Om51bVByXCIpXG4gICAgICAgIC5maXJzdE9yRW1wdHkoXCJ3Om51bUlkXCIpXG4gICAgICAgIC5hdHRyaWJ1dGVzW1widzp2YWxcIl07XG4gICAgcmV0dXJuIHtudW1JZDogbnVtSWR9O1xufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZWFkU3R5bGVzWG1sIiwiU3R5bGVzIiwiZGVmYXVsdFN0eWxlcyIsInBhcmFncmFwaFN0eWxlcyIsImNoYXJhY3RlclN0eWxlcyIsInRhYmxlU3R5bGVzIiwibnVtYmVyaW5nU3R5bGVzIiwiZmluZFBhcmFncmFwaFN0eWxlQnlJZCIsInN0eWxlSWQiLCJmaW5kQ2hhcmFjdGVyU3R5bGVCeUlkIiwiZmluZFRhYmxlU3R5bGVCeUlkIiwiZmluZE51bWJlcmluZ1N0eWxlQnlJZCIsIkVNUFRZIiwicm9vdCIsInN0eWxlcyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZm9yRWFjaCIsInN0eWxlRWxlbWVudCIsInN0eWxlIiwicmVhZFN0eWxlRWxlbWVudCIsInR5cGUiLCJyZWFkTnVtYmVyaW5nU3R5bGVFbGVtZW50Iiwic3R5bGVTZXQiLCJhdHRyaWJ1dGVzIiwibmFtZSIsInN0eWxlTmFtZSIsIm5hbWVFbGVtZW50IiwiZmlyc3QiLCJudW1JZCIsImZpcnN0T3JFbXB0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/styles-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/docx/uris.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/docx/uris.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.uriToZipEntryName = uriToZipEntryName;\nexports.replaceFragment = replaceFragment;\nfunction uriToZipEntryName(base, uri) {\n    if (uri.charAt(0) === \"/\") {\n        return uri.substr(1);\n    } else {\n        // In general, we should check first and second for trailing and leading slashes,\n        // but in our specific case this seems to be sufficient\n        return base + \"/\" + uri;\n    }\n}\nfunction replaceFragment(uri, fragment) {\n    var hashIndex = uri.indexOf(\"#\");\n    if (hashIndex !== -1) {\n        uri = uri.substring(0, hashIndex);\n    }\n    return uri + \"#\" + fragment;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC91cmlzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSx5QkFBeUIsR0FBR0M7QUFDNUJELHVCQUF1QixHQUFHRTtBQUUxQixTQUFTRCxrQkFBa0JFLElBQUksRUFBRUMsR0FBRztJQUNoQyxJQUFJQSxJQUFJQyxNQUFNLENBQUMsT0FBTyxLQUFLO1FBQ3ZCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQztJQUN0QixPQUFPO1FBQ0gsaUZBQWlGO1FBQ2pGLHVEQUF1RDtRQUN2RCxPQUFPSCxPQUFPLE1BQU1DO0lBQ3hCO0FBQ0o7QUFHQSxTQUFTRixnQkFBZ0JFLEdBQUcsRUFBRUcsUUFBUTtJQUNsQyxJQUFJQyxZQUFZSixJQUFJSyxPQUFPLENBQUM7SUFDNUIsSUFBSUQsY0FBYyxDQUFDLEdBQUc7UUFDbEJKLE1BQU1BLElBQUlNLFNBQVMsQ0FBQyxHQUFHRjtJQUMzQjtJQUNBLE9BQU9KLE1BQU0sTUFBTUc7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvZG9jeC91cmlzLmpzPzc4OWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy51cmlUb1ppcEVudHJ5TmFtZSA9IHVyaVRvWmlwRW50cnlOYW1lO1xuZXhwb3J0cy5yZXBsYWNlRnJhZ21lbnQgPSByZXBsYWNlRnJhZ21lbnQ7XG5cbmZ1bmN0aW9uIHVyaVRvWmlwRW50cnlOYW1lKGJhc2UsIHVyaSkge1xuICAgIGlmICh1cmkuY2hhckF0KDApID09PSBcIi9cIikge1xuICAgICAgICByZXR1cm4gdXJpLnN1YnN0cigxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBJbiBnZW5lcmFsLCB3ZSBzaG91bGQgY2hlY2sgZmlyc3QgYW5kIHNlY29uZCBmb3IgdHJhaWxpbmcgYW5kIGxlYWRpbmcgc2xhc2hlcyxcbiAgICAgICAgLy8gYnV0IGluIG91ciBzcGVjaWZpYyBjYXNlIHRoaXMgc2VlbXMgdG8gYmUgc3VmZmljaWVudFxuICAgICAgICByZXR1cm4gYmFzZSArIFwiL1wiICsgdXJpO1xuICAgIH1cbn1cblxuXG5mdW5jdGlvbiByZXBsYWNlRnJhZ21lbnQodXJpLCBmcmFnbWVudCkge1xuICAgIHZhciBoYXNoSW5kZXggPSB1cmkuaW5kZXhPZihcIiNcIik7XG4gICAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgdXJpID0gdXJpLnN1YnN0cmluZygwLCBoYXNoSW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gdXJpICsgXCIjXCIgKyBmcmFnbWVudDtcbn1cbiJdLCJuYW1lcyI6WyJleHBvcnRzIiwidXJpVG9aaXBFbnRyeU5hbWUiLCJyZXBsYWNlRnJhZ21lbnQiLCJiYXNlIiwidXJpIiwiY2hhckF0Iiwic3Vic3RyIiwiZnJhZ21lbnQiLCJoYXNoSW5kZXgiLCJpbmRleE9mIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/docx/uris.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/html/ast.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/html/ast.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlPaths = __webpack_require__(/*! ../styles/html-paths */ \"(ssr)/./node_modules/mammoth/lib/styles/html-paths.js\");\nfunction nonFreshElement(tagName, attributes, children) {\n    return elementWithTag(htmlPaths.element(tagName, attributes, {\n        fresh: false\n    }), children);\n}\nfunction freshElement(tagName, attributes, children) {\n    var tag = htmlPaths.element(tagName, attributes, {\n        fresh: true\n    });\n    return elementWithTag(tag, children);\n}\nfunction elementWithTag(tag, children) {\n    return {\n        type: \"element\",\n        tag: tag,\n        children: children || []\n    };\n}\nfunction text(value) {\n    return {\n        type: \"text\",\n        value: value\n    };\n}\nvar forceWrite = {\n    type: \"forceWrite\"\n};\nexports.freshElement = freshElement;\nexports.nonFreshElement = nonFreshElement;\nexports.elementWithTag = elementWithTag;\nexports.text = text;\nexports.forceWrite = forceWrite;\nvar voidTagNames = {\n    \"br\": true,\n    \"hr\": true,\n    \"img\": true,\n    \"input\": true\n};\nfunction isVoidElement(node) {\n    return node.children.length === 0 && voidTagNames[node.tag.tagName];\n}\nexports.isVoidElement = isVoidElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9hc3QuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsbUZBQXNCO0FBRzlDLFNBQVNDLGdCQUFnQkMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLFFBQVE7SUFDbEQsT0FBT0MsZUFDSE4sVUFBVU8sT0FBTyxDQUFDSixTQUFTQyxZQUFZO1FBQUNJLE9BQU87SUFBSyxJQUNwREg7QUFDUjtBQUVBLFNBQVNJLGFBQWFOLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxRQUFRO0lBQy9DLElBQUlLLE1BQU1WLFVBQVVPLE9BQU8sQ0FBQ0osU0FBU0MsWUFBWTtRQUFDSSxPQUFPO0lBQUk7SUFDN0QsT0FBT0YsZUFBZUksS0FBS0w7QUFDL0I7QUFFQSxTQUFTQyxlQUFlSSxHQUFHLEVBQUVMLFFBQVE7SUFDakMsT0FBTztRQUNITSxNQUFNO1FBQ05ELEtBQUtBO1FBQ0xMLFVBQVVBLFlBQVksRUFBRTtJQUM1QjtBQUNKO0FBRUEsU0FBU08sS0FBS0MsS0FBSztJQUNmLE9BQU87UUFDSEYsTUFBTTtRQUNORSxPQUFPQTtJQUNYO0FBQ0o7QUFFQSxJQUFJQyxhQUFhO0lBQ2JILE1BQU07QUFDVjtBQUVBSSxvQkFBb0IsR0FBR047QUFDdkJNLHVCQUF1QixHQUFHYjtBQUMxQmEsc0JBQXNCLEdBQUdUO0FBQ3pCUyxZQUFZLEdBQUdIO0FBQ2ZHLGtCQUFrQixHQUFHRDtBQUVyQixJQUFJRSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE1BQU07SUFDTixPQUFPO0lBQ1AsU0FBUztBQUNiO0FBRUEsU0FBU0MsY0FBY0MsSUFBSTtJQUN2QixPQUFPLEtBQU1iLFFBQVEsQ0FBQ2MsTUFBTSxLQUFLLEtBQU1ILFlBQVksQ0FBQ0UsS0FBS1IsR0FBRyxDQUFDUCxPQUFPLENBQUM7QUFDekU7QUFFQVkscUJBQXFCLEdBQUdFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2h0bWwvYXN0LmpzP2EyN2UiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGh0bWxQYXRocyA9IHJlcXVpcmUoXCIuLi9zdHlsZXMvaHRtbC1wYXRoc1wiKTtcblxuXG5mdW5jdGlvbiBub25GcmVzaEVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gZWxlbWVudFdpdGhUYWcoXG4gICAgICAgIGh0bWxQYXRocy5lbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIHtmcmVzaDogZmFsc2V9KSxcbiAgICAgICAgY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBmcmVzaEVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pIHtcbiAgICB2YXIgdGFnID0gaHRtbFBhdGhzLmVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlcywge2ZyZXNoOiB0cnVlfSk7XG4gICAgcmV0dXJuIGVsZW1lbnRXaXRoVGFnKHRhZywgY2hpbGRyZW4pO1xufVxuXG5mdW5jdGlvbiBlbGVtZW50V2l0aFRhZyh0YWcsIGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJlbGVtZW50XCIsXG4gICAgICAgIHRhZzogdGFnLFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW4gfHwgW11cbiAgICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgIH07XG59XG5cbnZhciBmb3JjZVdyaXRlID0ge1xuICAgIHR5cGU6IFwiZm9yY2VXcml0ZVwiXG59O1xuXG5leHBvcnRzLmZyZXNoRWxlbWVudCA9IGZyZXNoRWxlbWVudDtcbmV4cG9ydHMubm9uRnJlc2hFbGVtZW50ID0gbm9uRnJlc2hFbGVtZW50O1xuZXhwb3J0cy5lbGVtZW50V2l0aFRhZyA9IGVsZW1lbnRXaXRoVGFnO1xuZXhwb3J0cy50ZXh0ID0gdGV4dDtcbmV4cG9ydHMuZm9yY2VXcml0ZSA9IGZvcmNlV3JpdGU7XG5cbnZhciB2b2lkVGFnTmFtZXMgPSB7XG4gICAgXCJiclwiOiB0cnVlLFxuICAgIFwiaHJcIjogdHJ1ZSxcbiAgICBcImltZ1wiOiB0cnVlLFxuICAgIFwiaW5wdXRcIjogdHJ1ZVxufTtcblxuZnVuY3Rpb24gaXNWb2lkRWxlbWVudChub2RlKSB7XG4gICAgcmV0dXJuIChub2RlLmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkgJiYgdm9pZFRhZ05hbWVzW25vZGUudGFnLnRhZ05hbWVdO1xufVxuXG5leHBvcnRzLmlzVm9pZEVsZW1lbnQgPSBpc1ZvaWRFbGVtZW50O1xuIl0sIm5hbWVzIjpbImh0bWxQYXRocyIsInJlcXVpcmUiLCJub25GcmVzaEVsZW1lbnQiLCJ0YWdOYW1lIiwiYXR0cmlidXRlcyIsImNoaWxkcmVuIiwiZWxlbWVudFdpdGhUYWciLCJlbGVtZW50IiwiZnJlc2giLCJmcmVzaEVsZW1lbnQiLCJ0YWciLCJ0eXBlIiwidGV4dCIsInZhbHVlIiwiZm9yY2VXcml0ZSIsImV4cG9ydHMiLCJ2b2lkVGFnTmFtZXMiLCJpc1ZvaWRFbGVtZW50Iiwibm9kZSIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/html/ast.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/html/index.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/html/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ast = __webpack_require__(/*! ./ast */ \"(ssr)/./node_modules/mammoth/lib/html/ast.js\");\nexports.freshElement = ast.freshElement;\nexports.nonFreshElement = ast.nonFreshElement;\nexports.elementWithTag = ast.elementWithTag;\nexports.text = ast.text;\nexports.forceWrite = ast.forceWrite;\nexports.simplify = __webpack_require__(/*! ./simplify */ \"(ssr)/./node_modules/mammoth/lib/html/simplify.js\");\nfunction write(writer, nodes) {\n    nodes.forEach(function(node) {\n        writeNode(writer, node);\n    });\n}\nfunction writeNode(writer, node) {\n    toStrings[node.type](writer, node);\n}\nvar toStrings = {\n    element: generateElementString,\n    text: generateTextString,\n    forceWrite: function() {}\n};\nfunction generateElementString(writer, node) {\n    if (ast.isVoidElement(node)) {\n        writer.selfClosing(node.tag.tagName, node.tag.attributes);\n    } else {\n        writer.open(node.tag.tagName, node.tag.attributes);\n        write(writer, node.children);\n        writer.close(node.tag.tagName);\n    }\n}\nfunction generateTextString(writer, node) {\n    writer.text(node.value);\n}\nexports.write = write;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxNQUFNQyxtQkFBT0EsQ0FBQywyREFBTztBQUV6QkMsb0JBQW9CLEdBQUdGLElBQUlHLFlBQVk7QUFDdkNELHVCQUF1QixHQUFHRixJQUFJSSxlQUFlO0FBQzdDRixzQkFBc0IsR0FBR0YsSUFBSUssY0FBYztBQUMzQ0gsWUFBWSxHQUFHRixJQUFJTSxJQUFJO0FBQ3ZCSixrQkFBa0IsR0FBR0YsSUFBSU8sVUFBVTtBQUVuQ0wsNkdBQXdDO0FBRXhDLFNBQVNPLE1BQU1DLE1BQU0sRUFBRUMsS0FBSztJQUN4QkEsTUFBTUMsT0FBTyxDQUFDLFNBQVNDLElBQUk7UUFDdkJDLFVBQVVKLFFBQVFHO0lBQ3RCO0FBQ0o7QUFFQSxTQUFTQyxVQUFVSixNQUFNLEVBQUVHLElBQUk7SUFDM0JFLFNBQVMsQ0FBQ0YsS0FBS0csSUFBSSxDQUFDLENBQUNOLFFBQVFHO0FBQ2pDO0FBRUEsSUFBSUUsWUFBWTtJQUNaRSxTQUFTQztJQUNUWixNQUFNYTtJQUNOWixZQUFZLFlBQWE7QUFDN0I7QUFFQSxTQUFTVyxzQkFBc0JSLE1BQU0sRUFBRUcsSUFBSTtJQUN2QyxJQUFJYixJQUFJb0IsYUFBYSxDQUFDUCxPQUFPO1FBQ3pCSCxPQUFPVyxXQUFXLENBQUNSLEtBQUtTLEdBQUcsQ0FBQ0MsT0FBTyxFQUFFVixLQUFLUyxHQUFHLENBQUNFLFVBQVU7SUFDNUQsT0FBTztRQUNIZCxPQUFPZSxJQUFJLENBQUNaLEtBQUtTLEdBQUcsQ0FBQ0MsT0FBTyxFQUFFVixLQUFLUyxHQUFHLENBQUNFLFVBQVU7UUFDakRmLE1BQU1DLFFBQVFHLEtBQUthLFFBQVE7UUFDM0JoQixPQUFPaUIsS0FBSyxDQUFDZCxLQUFLUyxHQUFHLENBQUNDLE9BQU87SUFDakM7QUFDSjtBQUVBLFNBQVNKLG1CQUFtQlQsTUFBTSxFQUFFRyxJQUFJO0lBQ3BDSCxPQUFPSixJQUFJLENBQUNPLEtBQUtlLEtBQUs7QUFDMUI7QUFFQTFCLGFBQWEsR0FBR08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9pbmRleC5qcz8zNjhjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3QgPSByZXF1aXJlKFwiLi9hc3RcIik7XG5cbmV4cG9ydHMuZnJlc2hFbGVtZW50ID0gYXN0LmZyZXNoRWxlbWVudDtcbmV4cG9ydHMubm9uRnJlc2hFbGVtZW50ID0gYXN0Lm5vbkZyZXNoRWxlbWVudDtcbmV4cG9ydHMuZWxlbWVudFdpdGhUYWcgPSBhc3QuZWxlbWVudFdpdGhUYWc7XG5leHBvcnRzLnRleHQgPSBhc3QudGV4dDtcbmV4cG9ydHMuZm9yY2VXcml0ZSA9IGFzdC5mb3JjZVdyaXRlO1xuXG5leHBvcnRzLnNpbXBsaWZ5ID0gcmVxdWlyZShcIi4vc2ltcGxpZnlcIik7XG5cbmZ1bmN0aW9uIHdyaXRlKHdyaXRlciwgbm9kZXMpIHtcbiAgICBub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgd3JpdGVOb2RlKHdyaXRlciwgbm9kZSk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHdyaXRlTm9kZSh3cml0ZXIsIG5vZGUpIHtcbiAgICB0b1N0cmluZ3Nbbm9kZS50eXBlXSh3cml0ZXIsIG5vZGUpO1xufVxuXG52YXIgdG9TdHJpbmdzID0ge1xuICAgIGVsZW1lbnQ6IGdlbmVyYXRlRWxlbWVudFN0cmluZyxcbiAgICB0ZXh0OiBnZW5lcmF0ZVRleHRTdHJpbmcsXG4gICAgZm9yY2VXcml0ZTogZnVuY3Rpb24oKSB7IH1cbn07XG5cbmZ1bmN0aW9uIGdlbmVyYXRlRWxlbWVudFN0cmluZyh3cml0ZXIsIG5vZGUpIHtcbiAgICBpZiAoYXN0LmlzVm9pZEVsZW1lbnQobm9kZSkpIHtcbiAgICAgICAgd3JpdGVyLnNlbGZDbG9zaW5nKG5vZGUudGFnLnRhZ05hbWUsIG5vZGUudGFnLmF0dHJpYnV0ZXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHdyaXRlci5vcGVuKG5vZGUudGFnLnRhZ05hbWUsIG5vZGUudGFnLmF0dHJpYnV0ZXMpO1xuICAgICAgICB3cml0ZSh3cml0ZXIsIG5vZGUuY2hpbGRyZW4pO1xuICAgICAgICB3cml0ZXIuY2xvc2Uobm9kZS50YWcudGFnTmFtZSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVRleHRTdHJpbmcod3JpdGVyLCBub2RlKSB7XG4gICAgd3JpdGVyLnRleHQobm9kZS52YWx1ZSk7XG59XG5cbmV4cG9ydHMud3JpdGUgPSB3cml0ZTtcbiJdLCJuYW1lcyI6WyJhc3QiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImZyZXNoRWxlbWVudCIsIm5vbkZyZXNoRWxlbWVudCIsImVsZW1lbnRXaXRoVGFnIiwidGV4dCIsImZvcmNlV3JpdGUiLCJzaW1wbGlmeSIsIndyaXRlIiwid3JpdGVyIiwibm9kZXMiLCJmb3JFYWNoIiwibm9kZSIsIndyaXRlTm9kZSIsInRvU3RyaW5ncyIsInR5cGUiLCJlbGVtZW50IiwiZ2VuZXJhdGVFbGVtZW50U3RyaW5nIiwiZ2VuZXJhdGVUZXh0U3RyaW5nIiwiaXNWb2lkRWxlbWVudCIsInNlbGZDbG9zaW5nIiwidGFnIiwidGFnTmFtZSIsImF0dHJpYnV0ZXMiLCJvcGVuIiwiY2hpbGRyZW4iLCJjbG9zZSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/html/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/html/simplify.js":
/*!***************************************************!*\
  !*** ./node_modules/mammoth/lib/html/simplify.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar ast = __webpack_require__(/*! ./ast */ \"(ssr)/./node_modules/mammoth/lib/html/ast.js\");\nfunction simplify(nodes) {\n    return collapse(removeEmpty(nodes));\n}\nfunction collapse(nodes) {\n    var children = [];\n    nodes.map(collapseNode).forEach(function(child) {\n        appendChild(children, child);\n    });\n    return children;\n}\nfunction collapseNode(node) {\n    return collapsers[node.type](node);\n}\nvar collapsers = {\n    element: collapseElement,\n    text: identity,\n    forceWrite: identity\n};\nfunction collapseElement(node) {\n    return ast.elementWithTag(node.tag, collapse(node.children));\n}\nfunction identity(value) {\n    return value;\n}\nfunction appendChild(children, child) {\n    var lastChild = children[children.length - 1];\n    if (child.type === \"element\" && !child.tag.fresh && lastChild && lastChild.type === \"element\" && child.tag.matchesElement(lastChild.tag)) {\n        if (child.tag.separator) {\n            appendChild(lastChild.children, ast.text(child.tag.separator));\n        }\n        child.children.forEach(function(grandChild) {\n            // Mutation is fine since simplifying elements create a copy of the children.\n            appendChild(lastChild.children, grandChild);\n        });\n    } else {\n        children.push(child);\n    }\n}\nfunction removeEmpty(nodes) {\n    return flatMap(nodes, function(node) {\n        return emptiers[node.type](node);\n    });\n}\nfunction flatMap(values, func) {\n    return _.flatten(_.map(values, func), true);\n}\nvar emptiers = {\n    element: elementEmptier,\n    text: textEmptier,\n    forceWrite: neverEmpty\n};\nfunction neverEmpty(node) {\n    return [\n        node\n    ];\n}\nfunction elementEmptier(element) {\n    var children = removeEmpty(element.children);\n    if (children.length === 0 && !ast.isVoidElement(element)) {\n        return [];\n    } else {\n        return [\n            ast.elementWithTag(element.tag, children)\n        ];\n    }\n}\nfunction textEmptier(node) {\n    if (node.value.length === 0) {\n        return [];\n    } else {\n        return [\n            node\n        ];\n    }\n}\nmodule.exports = simplify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaHRtbC9zaW1wbGlmeS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFFNUIsSUFBSUMsTUFBTUQsbUJBQU9BLENBQUMsMkRBQU87QUFFekIsU0FBU0UsU0FBU0MsS0FBSztJQUNuQixPQUFPQyxTQUFTQyxZQUFZRjtBQUNoQztBQUVBLFNBQVNDLFNBQVNELEtBQUs7SUFDbkIsSUFBSUcsV0FBVyxFQUFFO0lBRWpCSCxNQUFNSSxHQUFHLENBQUNDLGNBQWNDLE9BQU8sQ0FBQyxTQUFTQyxLQUFLO1FBQzFDQyxZQUFZTCxVQUFVSTtJQUMxQjtJQUNBLE9BQU9KO0FBQ1g7QUFFQSxTQUFTRSxhQUFhSSxJQUFJO0lBQ3RCLE9BQU9DLFVBQVUsQ0FBQ0QsS0FBS0UsSUFBSSxDQUFDLENBQUNGO0FBQ2pDO0FBRUEsSUFBSUMsYUFBYTtJQUNiRSxTQUFTQztJQUNUQyxNQUFNQztJQUNOQyxZQUFZRDtBQUNoQjtBQUVBLFNBQVNGLGdCQUFnQkosSUFBSTtJQUN6QixPQUFPWCxJQUFJbUIsY0FBYyxDQUFDUixLQUFLUyxHQUFHLEVBQUVqQixTQUFTUSxLQUFLTixRQUFRO0FBQzlEO0FBRUEsU0FBU1ksU0FBU0ksS0FBSztJQUNuQixPQUFPQTtBQUNYO0FBRUEsU0FBU1gsWUFBWUwsUUFBUSxFQUFFSSxLQUFLO0lBQ2hDLElBQUlhLFlBQVlqQixRQUFRLENBQUNBLFNBQVNrQixNQUFNLEdBQUcsRUFBRTtJQUM3QyxJQUFJZCxNQUFNSSxJQUFJLEtBQUssYUFBYSxDQUFDSixNQUFNVyxHQUFHLENBQUNJLEtBQUssSUFBSUYsYUFBYUEsVUFBVVQsSUFBSSxLQUFLLGFBQWFKLE1BQU1XLEdBQUcsQ0FBQ0ssY0FBYyxDQUFDSCxVQUFVRixHQUFHLEdBQUc7UUFDdEksSUFBSVgsTUFBTVcsR0FBRyxDQUFDTSxTQUFTLEVBQUU7WUFDckJoQixZQUFZWSxVQUFVakIsUUFBUSxFQUFFTCxJQUFJZ0IsSUFBSSxDQUFDUCxNQUFNVyxHQUFHLENBQUNNLFNBQVM7UUFDaEU7UUFDQWpCLE1BQU1KLFFBQVEsQ0FBQ0csT0FBTyxDQUFDLFNBQVNtQixVQUFVO1lBQ3RDLDZFQUE2RTtZQUM3RWpCLFlBQVlZLFVBQVVqQixRQUFRLEVBQUVzQjtRQUNwQztJQUNKLE9BQU87UUFDSHRCLFNBQVN1QixJQUFJLENBQUNuQjtJQUNsQjtBQUNKO0FBRUEsU0FBU0wsWUFBWUYsS0FBSztJQUN0QixPQUFPMkIsUUFBUTNCLE9BQU8sU0FBU1MsSUFBSTtRQUMvQixPQUFPbUIsUUFBUSxDQUFDbkIsS0FBS0UsSUFBSSxDQUFDLENBQUNGO0lBQy9CO0FBQ0o7QUFFQSxTQUFTa0IsUUFBUUUsTUFBTSxFQUFFQyxJQUFJO0lBQ3pCLE9BQU9sQyxFQUFFbUMsT0FBTyxDQUFDbkMsRUFBRVEsR0FBRyxDQUFDeUIsUUFBUUMsT0FBTztBQUMxQztBQUVBLElBQUlGLFdBQVc7SUFDWGhCLFNBQVNvQjtJQUNUbEIsTUFBTW1CO0lBQ05qQixZQUFZa0I7QUFDaEI7QUFFQSxTQUFTQSxXQUFXekIsSUFBSTtJQUNwQixPQUFPO1FBQUNBO0tBQUs7QUFDakI7QUFFQSxTQUFTdUIsZUFBZXBCLE9BQU87SUFDM0IsSUFBSVQsV0FBV0QsWUFBWVUsUUFBUVQsUUFBUTtJQUMzQyxJQUFJQSxTQUFTa0IsTUFBTSxLQUFLLEtBQUssQ0FBQ3ZCLElBQUlxQyxhQUFhLENBQUN2QixVQUFVO1FBQ3RELE9BQU8sRUFBRTtJQUNiLE9BQU87UUFDSCxPQUFPO1lBQUNkLElBQUltQixjQUFjLENBQUNMLFFBQVFNLEdBQUcsRUFBRWY7U0FBVTtJQUN0RDtBQUNKO0FBRUEsU0FBUzhCLFlBQVl4QixJQUFJO0lBQ3JCLElBQUlBLEtBQUtVLEtBQUssQ0FBQ0UsTUFBTSxLQUFLLEdBQUc7UUFDekIsT0FBTyxFQUFFO0lBQ2IsT0FBTztRQUNILE9BQU87WUFBQ1o7U0FBSztJQUNqQjtBQUNKO0FBRUEyQixPQUFPQyxPQUFPLEdBQUd0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9odG1sL3NpbXBsaWZ5LmpzPzRhMGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxudmFyIGFzdCA9IHJlcXVpcmUoXCIuL2FzdFwiKTtcblxuZnVuY3Rpb24gc2ltcGxpZnkobm9kZXMpIHtcbiAgICByZXR1cm4gY29sbGFwc2UocmVtb3ZlRW1wdHkobm9kZXMpKTtcbn1cblxuZnVuY3Rpb24gY29sbGFwc2Uobm9kZXMpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBbXTtcbiAgICBcbiAgICBub2Rlcy5tYXAoY29sbGFwc2VOb2RlKS5mb3JFYWNoKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIGFwcGVuZENoaWxkKGNoaWxkcmVuLCBjaGlsZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjb2xsYXBzZU5vZGUobm9kZSkge1xuICAgIHJldHVybiBjb2xsYXBzZXJzW25vZGUudHlwZV0obm9kZSk7XG59XG5cbnZhciBjb2xsYXBzZXJzID0ge1xuICAgIGVsZW1lbnQ6IGNvbGxhcHNlRWxlbWVudCxcbiAgICB0ZXh0OiBpZGVudGl0eSxcbiAgICBmb3JjZVdyaXRlOiBpZGVudGl0eVxufTtcblxuZnVuY3Rpb24gY29sbGFwc2VFbGVtZW50KG5vZGUpIHtcbiAgICByZXR1cm4gYXN0LmVsZW1lbnRXaXRoVGFnKG5vZGUudGFnLCBjb2xsYXBzZShub2RlLmNoaWxkcmVuKSk7XG59XG5cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBhcHBlbmRDaGlsZChjaGlsZHJlbiwgY2hpbGQpIHtcbiAgICB2YXIgbGFzdENoaWxkID0gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gICAgaWYgKGNoaWxkLnR5cGUgPT09IFwiZWxlbWVudFwiICYmICFjaGlsZC50YWcuZnJlc2ggJiYgbGFzdENoaWxkICYmIGxhc3RDaGlsZC50eXBlID09PSBcImVsZW1lbnRcIiAmJiBjaGlsZC50YWcubWF0Y2hlc0VsZW1lbnQobGFzdENoaWxkLnRhZykpIHtcbiAgICAgICAgaWYgKGNoaWxkLnRhZy5zZXBhcmF0b3IpIHtcbiAgICAgICAgICAgIGFwcGVuZENoaWxkKGxhc3RDaGlsZC5jaGlsZHJlbiwgYXN0LnRleHQoY2hpbGQudGFnLnNlcGFyYXRvcikpO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oZ3JhbmRDaGlsZCkge1xuICAgICAgICAgICAgLy8gTXV0YXRpb24gaXMgZmluZSBzaW5jZSBzaW1wbGlmeWluZyBlbGVtZW50cyBjcmVhdGUgYSBjb3B5IG9mIHRoZSBjaGlsZHJlbi5cbiAgICAgICAgICAgIGFwcGVuZENoaWxkKGxhc3RDaGlsZC5jaGlsZHJlbiwgZ3JhbmRDaGlsZCk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGQpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlRW1wdHkobm9kZXMpIHtcbiAgICByZXR1cm4gZmxhdE1hcChub2RlcywgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICByZXR1cm4gZW1wdGllcnNbbm9kZS50eXBlXShub2RlKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZmxhdE1hcCh2YWx1ZXMsIGZ1bmMpIHtcbiAgICByZXR1cm4gXy5mbGF0dGVuKF8ubWFwKHZhbHVlcywgZnVuYyksIHRydWUpO1xufVxuXG52YXIgZW1wdGllcnMgPSB7XG4gICAgZWxlbWVudDogZWxlbWVudEVtcHRpZXIsXG4gICAgdGV4dDogdGV4dEVtcHRpZXIsXG4gICAgZm9yY2VXcml0ZTogbmV2ZXJFbXB0eVxufTtcblxuZnVuY3Rpb24gbmV2ZXJFbXB0eShub2RlKSB7XG4gICAgcmV0dXJuIFtub2RlXTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudEVtcHRpZXIoZWxlbWVudCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHJlbW92ZUVtcHR5KGVsZW1lbnQuY2hpbGRyZW4pO1xuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDAgJiYgIWFzdC5pc1ZvaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW2FzdC5lbGVtZW50V2l0aFRhZyhlbGVtZW50LnRhZywgY2hpbGRyZW4pXTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHRleHRFbXB0aWVyKG5vZGUpIHtcbiAgICBpZiAobm9kZS52YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBbbm9kZV07XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNpbXBsaWZ5O1xuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiYXN0Iiwic2ltcGxpZnkiLCJub2RlcyIsImNvbGxhcHNlIiwicmVtb3ZlRW1wdHkiLCJjaGlsZHJlbiIsIm1hcCIsImNvbGxhcHNlTm9kZSIsImZvckVhY2giLCJjaGlsZCIsImFwcGVuZENoaWxkIiwibm9kZSIsImNvbGxhcHNlcnMiLCJ0eXBlIiwiZWxlbWVudCIsImNvbGxhcHNlRWxlbWVudCIsInRleHQiLCJpZGVudGl0eSIsImZvcmNlV3JpdGUiLCJlbGVtZW50V2l0aFRhZyIsInRhZyIsInZhbHVlIiwibGFzdENoaWxkIiwibGVuZ3RoIiwiZnJlc2giLCJtYXRjaGVzRWxlbWVudCIsInNlcGFyYXRvciIsImdyYW5kQ2hpbGQiLCJwdXNoIiwiZmxhdE1hcCIsImVtcHRpZXJzIiwidmFsdWVzIiwiZnVuYyIsImZsYXR0ZW4iLCJlbGVtZW50RW1wdGllciIsInRleHRFbXB0aWVyIiwibmV2ZXJFbXB0eSIsImlzVm9pZEVsZW1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/html/simplify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/images.js":
/*!********************************************!*\
  !*** ./node_modules/mammoth/lib/images.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar promises = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(ssr)/./node_modules/mammoth/lib/html/index.js\");\nexports.imgElement = imgElement;\nfunction imgElement(func) {\n    return function(element, messages) {\n        return promises.when(func(element)).then(function(result) {\n            var attributes = {};\n            if (element.altText) {\n                attributes.alt = element.altText;\n            }\n            _.extend(attributes, result);\n            return [\n                Html.freshElement(\"img\", attributes)\n            ];\n        });\n    };\n}\n// Undocumented, but retained for backwards-compatibility with 0.3.x\nexports.inline = exports.imgElement;\nexports.dataUri = imgElement(function(element) {\n    return element.readAsBase64String().then(function(imageBuffer) {\n        return {\n            src: \"data:\" + element.contentType + \";base64,\" + imageBuffer\n        };\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvaW1hZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRTVCLElBQUlDLFdBQVdELG1CQUFPQSxDQUFDLGdFQUFZO0FBQ25DLElBQUlFLE9BQU9GLG1CQUFPQSxDQUFDLDhEQUFRO0FBRTNCRyxrQkFBa0IsR0FBR0M7QUFFckIsU0FBU0EsV0FBV0MsSUFBSTtJQUNwQixPQUFPLFNBQVNDLE9BQU8sRUFBRUMsUUFBUTtRQUM3QixPQUFPTixTQUFTTyxJQUFJLENBQUNILEtBQUtDLFVBQVVHLElBQUksQ0FBQyxTQUFTQyxNQUFNO1lBQ3BELElBQUlDLGFBQWEsQ0FBQztZQUNsQixJQUFJTCxRQUFRTSxPQUFPLEVBQUU7Z0JBQ2pCRCxXQUFXRSxHQUFHLEdBQUdQLFFBQVFNLE9BQU87WUFDcEM7WUFDQWIsRUFBRWUsTUFBTSxDQUFDSCxZQUFZRDtZQUVyQixPQUFPO2dCQUFDUixLQUFLYSxZQUFZLENBQUMsT0FBT0o7YUFBWTtRQUNqRDtJQUNKO0FBQ0o7QUFFQSxvRUFBb0U7QUFDcEVSLGNBQWMsR0FBR0EsUUFBUUMsVUFBVTtBQUVuQ0QsZUFBZSxHQUFHQyxXQUFXLFNBQVNFLE9BQU87SUFDekMsT0FBT0EsUUFBUVksa0JBQWtCLEdBQUdULElBQUksQ0FBQyxTQUFTVSxXQUFXO1FBQ3pELE9BQU87WUFDSEMsS0FBSyxVQUFVZCxRQUFRZSxXQUFXLEdBQUcsYUFBYUY7UUFDdEQ7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL2ltYWdlcy5qcz8zMzU4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG5cbnZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuL3Byb21pc2VzXCIpO1xudmFyIEh0bWwgPSByZXF1aXJlKFwiLi9odG1sXCIpO1xuXG5leHBvcnRzLmltZ0VsZW1lbnQgPSBpbWdFbGVtZW50O1xuXG5mdW5jdGlvbiBpbWdFbGVtZW50KGZ1bmMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZWxlbWVudCwgbWVzc2FnZXMpIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VzLndoZW4oZnVuYyhlbGVtZW50KSkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0ge307XG4gICAgICAgICAgICBpZiAoZWxlbWVudC5hbHRUZXh0KSB7XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlcy5hbHQgPSBlbGVtZW50LmFsdFRleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfLmV4dGVuZChhdHRyaWJ1dGVzLCByZXN1bHQpO1xuXG4gICAgICAgICAgICByZXR1cm4gW0h0bWwuZnJlc2hFbGVtZW50KFwiaW1nXCIsIGF0dHJpYnV0ZXMpXTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cblxuLy8gVW5kb2N1bWVudGVkLCBidXQgcmV0YWluZWQgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5IHdpdGggMC4zLnhcbmV4cG9ydHMuaW5saW5lID0gZXhwb3J0cy5pbWdFbGVtZW50O1xuXG5leHBvcnRzLmRhdGFVcmkgPSBpbWdFbGVtZW50KGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5yZWFkQXNCYXNlNjRTdHJpbmcoKS50aGVuKGZ1bmN0aW9uKGltYWdlQnVmZmVyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzcmM6IFwiZGF0YTpcIiArIGVsZW1lbnQuY29udGVudFR5cGUgKyBcIjtiYXNlNjQsXCIgKyBpbWFnZUJ1ZmZlclxuICAgICAgICB9O1xuICAgIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiXyIsInJlcXVpcmUiLCJwcm9taXNlcyIsIkh0bWwiLCJleHBvcnRzIiwiaW1nRWxlbWVudCIsImZ1bmMiLCJlbGVtZW50IiwibWVzc2FnZXMiLCJ3aGVuIiwidGhlbiIsInJlc3VsdCIsImF0dHJpYnV0ZXMiLCJhbHRUZXh0IiwiYWx0IiwiZXh0ZW5kIiwiZnJlc2hFbGVtZW50IiwiaW5saW5lIiwiZGF0YVVyaSIsInJlYWRBc0Jhc2U2NFN0cmluZyIsImltYWdlQnVmZmVyIiwic3JjIiwiY29udGVudFR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/images.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/mammoth/lib/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar docxReader = __webpack_require__(/*! ./docx/docx-reader */ \"(ssr)/./node_modules/mammoth/lib/docx/docx-reader.js\");\nvar docxStyleMap = __webpack_require__(/*! ./docx/style-map */ \"(ssr)/./node_modules/mammoth/lib/docx/style-map.js\");\nvar DocumentConverter = (__webpack_require__(/*! ./document-to-html */ \"(ssr)/./node_modules/mammoth/lib/document-to-html.js\").DocumentConverter);\nvar convertElementToRawText = (__webpack_require__(/*! ./raw-text */ \"(ssr)/./node_modules/mammoth/lib/raw-text.js\").convertElementToRawText);\nvar readStyle = (__webpack_require__(/*! ./style-reader */ \"(ssr)/./node_modules/mammoth/lib/style-reader.js\").readStyle);\nvar readOptions = (__webpack_require__(/*! ./options-reader */ \"(ssr)/./node_modules/mammoth/lib/options-reader.js\").readOptions);\nvar unzip = __webpack_require__(/*! ./unzip */ \"(ssr)/./node_modules/mammoth/lib/unzip.js\");\nvar Result = (__webpack_require__(/*! ./results */ \"(ssr)/./node_modules/mammoth/lib/results.js\").Result);\nexports.convertToHtml = convertToHtml;\nexports.convertToMarkdown = convertToMarkdown;\nexports.convert = convert;\nexports.extractRawText = extractRawText;\nexports.images = __webpack_require__(/*! ./images */ \"(ssr)/./node_modules/mammoth/lib/images.js\");\nexports.transforms = __webpack_require__(/*! ./transforms */ \"(ssr)/./node_modules/mammoth/lib/transforms.js\");\nexports.underline = __webpack_require__(/*! ./underline */ \"(ssr)/./node_modules/mammoth/lib/underline.js\");\nexports.embedStyleMap = embedStyleMap;\nexports.readEmbeddedStyleMap = readEmbeddedStyleMap;\nfunction convertToHtml(input, options) {\n    return convert(input, options);\n}\nfunction convertToMarkdown(input, options) {\n    var markdownOptions = Object.create(options || {});\n    markdownOptions.outputFormat = \"markdown\";\n    return convert(input, markdownOptions);\n}\nfunction convert(input, options) {\n    options = readOptions(options);\n    return unzip.openZip(input).tap(function(docxFile) {\n        return docxStyleMap.readStyleMap(docxFile).then(function(styleMap) {\n            options.embeddedStyleMap = styleMap;\n        });\n    }).then(function(docxFile) {\n        return docxReader.read(docxFile, input).then(function(documentResult) {\n            return documentResult.map(options.transformDocument);\n        }).then(function(documentResult) {\n            return convertDocumentToHtml(documentResult, options);\n        });\n    });\n}\nfunction readEmbeddedStyleMap(input) {\n    return unzip.openZip(input).then(docxStyleMap.readStyleMap);\n}\nfunction convertDocumentToHtml(documentResult, options) {\n    var styleMapResult = parseStyleMap(options.readStyleMap());\n    var parsedOptions = _.extend({}, options, {\n        styleMap: styleMapResult.value\n    });\n    var documentConverter = new DocumentConverter(parsedOptions);\n    return documentResult.flatMapThen(function(document) {\n        return styleMapResult.flatMapThen(function(styleMap) {\n            return documentConverter.convertToHtml(document);\n        });\n    });\n}\nfunction parseStyleMap(styleMap) {\n    return Result.combine((styleMap || []).map(readStyle)).map(function(styleMap) {\n        return styleMap.filter(function(styleMapping) {\n            return !!styleMapping;\n        });\n    });\n}\nfunction extractRawText(input) {\n    return unzip.openZip(input).then(docxReader.read).then(function(documentResult) {\n        return documentResult.map(convertElementToRawText);\n    });\n}\nfunction embedStyleMap(input, styleMap) {\n    return unzip.openZip(input).tap(function(docxFile) {\n        return docxStyleMap.writeStyleMap(docxFile, styleMap);\n    }).then(function(docxFile) {\n        return docxFile.toArrayBuffer();\n    }).then(function(arrayBuffer) {\n        return {\n            toArrayBuffer: function() {\n                return arrayBuffer;\n            },\n            toBuffer: function() {\n                return Buffer.from(arrayBuffer);\n            }\n        };\n    });\n}\nexports.styleMapping = function() {\n    throw new Error(\"Use a raw string instead of mammoth.styleMapping e.g. \\\"p[style-name='Title'] => h1\\\" instead of mammoth.styleMapping(\\\"p[style-name='Title'] => h1\\\")\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/options-reader.js":
/*!****************************************************!*\
  !*** ./node_modules/mammoth/lib/options-reader.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.readOptions = readOptions;\nvar _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar defaultStyleMap = exports._defaultStyleMap = [\n    \"p.Heading1 => h1:fresh\",\n    \"p.Heading2 => h2:fresh\",\n    \"p.Heading3 => h3:fresh\",\n    \"p.Heading4 => h4:fresh\",\n    \"p.Heading5 => h5:fresh\",\n    \"p.Heading6 => h6:fresh\",\n    \"p[style-name='Heading 1'] => h1:fresh\",\n    \"p[style-name='Heading 2'] => h2:fresh\",\n    \"p[style-name='Heading 3'] => h3:fresh\",\n    \"p[style-name='Heading 4'] => h4:fresh\",\n    \"p[style-name='Heading 5'] => h5:fresh\",\n    \"p[style-name='Heading 6'] => h6:fresh\",\n    \"p[style-name='heading 1'] => h1:fresh\",\n    \"p[style-name='heading 2'] => h2:fresh\",\n    \"p[style-name='heading 3'] => h3:fresh\",\n    \"p[style-name='heading 4'] => h4:fresh\",\n    \"p[style-name='heading 5'] => h5:fresh\",\n    \"p[style-name='heading 6'] => h6:fresh\",\n    \"r[style-name='Strong'] => strong\",\n    \"p[style-name='footnote text'] => p:fresh\",\n    \"r[style-name='footnote reference'] =>\",\n    \"p[style-name='endnote text'] => p:fresh\",\n    \"r[style-name='endnote reference'] =>\",\n    \"p[style-name='annotation text'] => p:fresh\",\n    \"r[style-name='annotation reference'] =>\",\n    // LibreOffice\n    \"p[style-name='Footnote'] => p:fresh\",\n    \"r[style-name='Footnote anchor'] =>\",\n    \"p[style-name='Endnote'] => p:fresh\",\n    \"r[style-name='Endnote anchor'] =>\",\n    \"p:unordered-list(1) => ul > li:fresh\",\n    \"p:unordered-list(2) => ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(3) => ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:unordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ul > li:fresh\",\n    \"p:ordered-list(1) => ol > li:fresh\",\n    \"p:ordered-list(2) => ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(3) => ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(4) => ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"p:ordered-list(5) => ul|ol > li > ul|ol > li > ul|ol > li > ul|ol > li > ol > li:fresh\",\n    \"r[style-name='Hyperlink'] =>\",\n    \"p[style-name='Normal'] => p:fresh\"\n];\nvar standardOptions = exports._standardOptions = {\n    transformDocument: identity,\n    includeDefaultStyleMap: true,\n    includeEmbeddedStyleMap: true\n};\nfunction readOptions(options) {\n    options = options || {};\n    return _.extend({}, standardOptions, options, {\n        customStyleMap: readStyleMap(options.styleMap),\n        readStyleMap: function() {\n            var styleMap = this.customStyleMap;\n            if (this.includeEmbeddedStyleMap) {\n                styleMap = styleMap.concat(readStyleMap(this.embeddedStyleMap));\n            }\n            if (this.includeDefaultStyleMap) {\n                styleMap = styleMap.concat(defaultStyleMap);\n            }\n            return styleMap;\n        }\n    });\n}\nfunction readStyleMap(styleMap) {\n    if (!styleMap) {\n        return [];\n    } else if (_.isString(styleMap)) {\n        return styleMap.split(\"\\n\").map(function(line) {\n            return line.trim();\n        }).filter(function(line) {\n            return line !== \"\" && line.charAt(0) !== \"#\";\n        });\n    } else {\n        return styleMap;\n    }\n}\nfunction identity(value) {\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvb3B0aW9ucy1yZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQUFBLG1CQUFtQixHQUFHQztBQUd0QixJQUFJQyxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJQyxrQkFBa0JKLHdCQUF3QixHQUFHO0lBQzdDO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUVBO0lBRUE7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBRUEsY0FBYztJQUNkO0lBQ0E7SUFDQTtJQUNBO0lBRUE7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFFQTtJQUVBO0NBQ0g7QUFFRCxJQUFJTSxrQkFBa0JOLHdCQUF3QixHQUFHO0lBQzdDUSxtQkFBbUJDO0lBQ25CQyx3QkFBd0I7SUFDeEJDLHlCQUF5QjtBQUM3QjtBQUVBLFNBQVNWLFlBQVlXLE9BQU87SUFDeEJBLFVBQVVBLFdBQVcsQ0FBQztJQUN0QixPQUFPVixFQUFFVyxNQUFNLENBQUMsQ0FBQyxHQUFHUCxpQkFBaUJNLFNBQVM7UUFDMUNFLGdCQUFnQkMsYUFBYUgsUUFBUUksUUFBUTtRQUM3Q0QsY0FBYztZQUNWLElBQUlDLFdBQVcsSUFBSSxDQUFDRixjQUFjO1lBQ2xDLElBQUksSUFBSSxDQUFDSCx1QkFBdUIsRUFBRTtnQkFDOUJLLFdBQVdBLFNBQVNDLE1BQU0sQ0FBQ0YsYUFBYSxJQUFJLENBQUNHLGdCQUFnQjtZQUNqRTtZQUNBLElBQUksSUFBSSxDQUFDUixzQkFBc0IsRUFBRTtnQkFDN0JNLFdBQVdBLFNBQVNDLE1BQU0sQ0FBQ2I7WUFDL0I7WUFDQSxPQUFPWTtRQUNYO0lBQ0o7QUFDSjtBQUVBLFNBQVNELGFBQWFDLFFBQVE7SUFDMUIsSUFBSSxDQUFDQSxVQUFVO1FBQ1gsT0FBTyxFQUFFO0lBQ2IsT0FBTyxJQUFJZCxFQUFFaUIsUUFBUSxDQUFDSCxXQUFXO1FBQzdCLE9BQU9BLFNBQVNJLEtBQUssQ0FBQyxNQUNqQkMsR0FBRyxDQUFDLFNBQVNDLElBQUk7WUFDZCxPQUFPQSxLQUFLQyxJQUFJO1FBQ3BCLEdBQ0NDLE1BQU0sQ0FBQyxTQUFTRixJQUFJO1lBQ2pCLE9BQU9BLFNBQVMsTUFBTUEsS0FBS0csTUFBTSxDQUFDLE9BQU87UUFDN0M7SUFDUixPQUFPO1FBQ0gsT0FBT1Q7SUFDWDtBQUNKO0FBRUEsU0FBU1AsU0FBU2lCLEtBQUs7SUFDbkIsT0FBT0E7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9vcHRpb25zLXJlYWRlci5qcz9kYWY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMucmVhZE9wdGlvbnMgPSByZWFkT3B0aW9ucztcblxuXG52YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgZGVmYXVsdFN0eWxlTWFwID0gZXhwb3J0cy5fZGVmYXVsdFN0eWxlTWFwID0gW1xuICAgIFwicC5IZWFkaW5nMSA9PiBoMTpmcmVzaFwiLFxuICAgIFwicC5IZWFkaW5nMiA9PiBoMjpmcmVzaFwiLFxuICAgIFwicC5IZWFkaW5nMyA9PiBoMzpmcmVzaFwiLFxuICAgIFwicC5IZWFkaW5nNCA9PiBoNDpmcmVzaFwiLFxuICAgIFwicC5IZWFkaW5nNSA9PiBoNTpmcmVzaFwiLFxuICAgIFwicC5IZWFkaW5nNiA9PiBoNjpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDEnXSA9PiBoMTpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDInXSA9PiBoMjpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDMnXSA9PiBoMzpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDQnXSA9PiBoNDpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDUnXSA9PiBoNTpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdIZWFkaW5nIDYnXSA9PiBoNjpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDEnXSA9PiBoMTpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDInXSA9PiBoMjpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDMnXSA9PiBoMzpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDQnXSA9PiBoNDpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDUnXSA9PiBoNTpmcmVzaFwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdoZWFkaW5nIDYnXSA9PiBoNjpmcmVzaFwiLFxuICAgIFxuICAgIFwicltzdHlsZS1uYW1lPSdTdHJvbmcnXSA9PiBzdHJvbmdcIixcbiAgICBcbiAgICBcInBbc3R5bGUtbmFtZT0nZm9vdG5vdGUgdGV4dCddID0+IHA6ZnJlc2hcIixcbiAgICBcInJbc3R5bGUtbmFtZT0nZm9vdG5vdGUgcmVmZXJlbmNlJ10gPT5cIixcbiAgICBcInBbc3R5bGUtbmFtZT0nZW5kbm90ZSB0ZXh0J10gPT4gcDpmcmVzaFwiLFxuICAgIFwicltzdHlsZS1uYW1lPSdlbmRub3RlIHJlZmVyZW5jZSddID0+XCIsXG4gICAgXCJwW3N0eWxlLW5hbWU9J2Fubm90YXRpb24gdGV4dCddID0+IHA6ZnJlc2hcIixcbiAgICBcInJbc3R5bGUtbmFtZT0nYW5ub3RhdGlvbiByZWZlcmVuY2UnXSA9PlwiLFxuICAgIFxuICAgIC8vIExpYnJlT2ZmaWNlXG4gICAgXCJwW3N0eWxlLW5hbWU9J0Zvb3Rub3RlJ10gPT4gcDpmcmVzaFwiLFxuICAgIFwicltzdHlsZS1uYW1lPSdGb290bm90ZSBhbmNob3InXSA9PlwiLFxuICAgIFwicFtzdHlsZS1uYW1lPSdFbmRub3RlJ10gPT4gcDpmcmVzaFwiLFxuICAgIFwicltzdHlsZS1uYW1lPSdFbmRub3RlIGFuY2hvciddID0+XCIsXG4gICAgXG4gICAgXCJwOnVub3JkZXJlZC1saXN0KDEpID0+IHVsID4gbGk6ZnJlc2hcIixcbiAgICBcInA6dW5vcmRlcmVkLWxpc3QoMikgPT4gdWx8b2wgPiBsaSA+IHVsID4gbGk6ZnJlc2hcIixcbiAgICBcInA6dW5vcmRlcmVkLWxpc3QoMykgPT4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiB1bCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOnVub3JkZXJlZC1saXN0KDQpID0+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsID4gbGk6ZnJlc2hcIixcbiAgICBcInA6dW5vcmRlcmVkLWxpc3QoNSkgPT4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsID4gbGk6ZnJlc2hcIixcbiAgICBcInA6b3JkZXJlZC1saXN0KDEpID0+IG9sID4gbGk6ZnJlc2hcIixcbiAgICBcInA6b3JkZXJlZC1saXN0KDIpID0+IHVsfG9sID4gbGkgPiBvbCA+IGxpOmZyZXNoXCIsXG4gICAgXCJwOm9yZGVyZWQtbGlzdCgzKSA9PiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IG9sID4gbGk6ZnJlc2hcIixcbiAgICBcInA6b3JkZXJlZC1saXN0KDQpID0+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IG9sID4gbGk6ZnJlc2hcIixcbiAgICBcInA6b3JkZXJlZC1saXN0KDUpID0+IHVsfG9sID4gbGkgPiB1bHxvbCA+IGxpID4gdWx8b2wgPiBsaSA+IHVsfG9sID4gbGkgPiBvbCA+IGxpOmZyZXNoXCIsXG4gICAgXG4gICAgXCJyW3N0eWxlLW5hbWU9J0h5cGVybGluayddID0+XCIsXG4gICAgXG4gICAgXCJwW3N0eWxlLW5hbWU9J05vcm1hbCddID0+IHA6ZnJlc2hcIlxuXTtcblxudmFyIHN0YW5kYXJkT3B0aW9ucyA9IGV4cG9ydHMuX3N0YW5kYXJkT3B0aW9ucyA9IHtcbiAgICB0cmFuc2Zvcm1Eb2N1bWVudDogaWRlbnRpdHksXG4gICAgaW5jbHVkZURlZmF1bHRTdHlsZU1hcDogdHJ1ZSxcbiAgICBpbmNsdWRlRW1iZWRkZWRTdHlsZU1hcDogdHJ1ZVxufTtcblxuZnVuY3Rpb24gcmVhZE9wdGlvbnMob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHJldHVybiBfLmV4dGVuZCh7fSwgc3RhbmRhcmRPcHRpb25zLCBvcHRpb25zLCB7XG4gICAgICAgIGN1c3RvbVN0eWxlTWFwOiByZWFkU3R5bGVNYXAob3B0aW9ucy5zdHlsZU1hcCksXG4gICAgICAgIHJlYWRTdHlsZU1hcDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgc3R5bGVNYXAgPSB0aGlzLmN1c3RvbVN0eWxlTWFwO1xuICAgICAgICAgICAgaWYgKHRoaXMuaW5jbHVkZUVtYmVkZGVkU3R5bGVNYXApIHtcbiAgICAgICAgICAgICAgICBzdHlsZU1hcCA9IHN0eWxlTWFwLmNvbmNhdChyZWFkU3R5bGVNYXAodGhpcy5lbWJlZGRlZFN0eWxlTWFwKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5pbmNsdWRlRGVmYXVsdFN0eWxlTWFwKSB7XG4gICAgICAgICAgICAgICAgc3R5bGVNYXAgPSBzdHlsZU1hcC5jb25jYXQoZGVmYXVsdFN0eWxlTWFwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzdHlsZU1hcDtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiByZWFkU3R5bGVNYXAoc3R5bGVNYXApIHtcbiAgICBpZiAoIXN0eWxlTWFwKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9IGVsc2UgaWYgKF8uaXNTdHJpbmcoc3R5bGVNYXApKSB7XG4gICAgICAgIHJldHVybiBzdHlsZU1hcC5zcGxpdChcIlxcblwiKVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpbmUudHJpbSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsaW5lICE9PSBcIlwiICYmIGxpbmUuY2hhckF0KDApICE9PSBcIiNcIjtcbiAgICAgICAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBzdHlsZU1hcDtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJyZWFkT3B0aW9ucyIsIl8iLCJyZXF1aXJlIiwiZGVmYXVsdFN0eWxlTWFwIiwiX2RlZmF1bHRTdHlsZU1hcCIsInN0YW5kYXJkT3B0aW9ucyIsIl9zdGFuZGFyZE9wdGlvbnMiLCJ0cmFuc2Zvcm1Eb2N1bWVudCIsImlkZW50aXR5IiwiaW5jbHVkZURlZmF1bHRTdHlsZU1hcCIsImluY2x1ZGVFbWJlZGRlZFN0eWxlTWFwIiwib3B0aW9ucyIsImV4dGVuZCIsImN1c3RvbVN0eWxlTWFwIiwicmVhZFN0eWxlTWFwIiwic3R5bGVNYXAiLCJjb25jYXQiLCJlbWJlZGRlZFN0eWxlTWFwIiwiaXNTdHJpbmciLCJzcGxpdCIsIm1hcCIsImxpbmUiLCJ0cmltIiwiZmlsdGVyIiwiY2hhckF0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/options-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/promises.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/promises.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar bluebird = __webpack_require__(/*! bluebird/js/release/promise */ \"(ssr)/./node_modules/bluebird/js/release/promise.js\")();\nexports.defer = defer;\nexports.when = bluebird.resolve;\nexports.resolve = bluebird.resolve;\nexports.all = bluebird.all;\nexports.props = bluebird.props;\nexports.reject = bluebird.reject;\nexports.promisify = bluebird.promisify;\nexports.mapSeries = bluebird.mapSeries;\nexports.attempt = bluebird.attempt;\nexports.nfcall = function(func) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    var promisedFunc = bluebird.promisify(func);\n    return promisedFunc.apply(null, args);\n};\nbluebird.prototype.fail = bluebird.prototype.caught;\nbluebird.prototype.also = function(func) {\n    return this.then(function(value) {\n        var returnValue = _.extend({}, value, func(value));\n        return bluebird.props(returnValue);\n    });\n};\nfunction defer() {\n    var resolve;\n    var reject;\n    var promise = new bluebird.Promise(function(resolveArg, rejectArg) {\n        resolve = resolveArg;\n        reject = rejectArg;\n    });\n    return {\n        resolve: resolve,\n        reject: reject,\n        promise: promise\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcHJvbWlzZXMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFDNUIsSUFBSUMsV0FBV0QsbUJBQU9BLENBQUMsd0ZBQTZCO0FBRXBERSxhQUFhLEdBQUdDO0FBQ2hCRCxZQUFZLEdBQUdELFNBQVNJLE9BQU87QUFDL0JILGVBQWUsR0FBR0QsU0FBU0ksT0FBTztBQUNsQ0gsV0FBVyxHQUFHRCxTQUFTSyxHQUFHO0FBQzFCSixhQUFhLEdBQUdELFNBQVNNLEtBQUs7QUFDOUJMLGNBQWMsR0FBR0QsU0FBU08sTUFBTTtBQUNoQ04saUJBQWlCLEdBQUdELFNBQVNRLFNBQVM7QUFDdENQLGlCQUFpQixHQUFHRCxTQUFTUyxTQUFTO0FBQ3RDUixlQUFlLEdBQUdELFNBQVNVLE9BQU87QUFFbENULGNBQWMsR0FBRyxTQUFTVyxJQUFJO0lBQzFCLElBQUlDLE9BQU9DLE1BQU1DLFNBQVMsQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUNDLFdBQVc7SUFDakQsSUFBSUMsZUFBZW5CLFNBQVNRLFNBQVMsQ0FBQ0k7SUFDdEMsT0FBT08sYUFBYUMsS0FBSyxDQUFDLE1BQU1QO0FBQ3BDO0FBRUFiLFNBQVNlLFNBQVMsQ0FBQ00sSUFBSSxHQUFHckIsU0FBU2UsU0FBUyxDQUFDTyxNQUFNO0FBRW5EdEIsU0FBU2UsU0FBUyxDQUFDUSxJQUFJLEdBQUcsU0FBU1gsSUFBSTtJQUNuQyxPQUFPLElBQUksQ0FBQ1ksSUFBSSxDQUFDLFNBQVNDLEtBQUs7UUFDM0IsSUFBSUMsY0FBYzVCLEVBQUU2QixNQUFNLENBQUMsQ0FBQyxHQUFHRixPQUFPYixLQUFLYTtRQUMzQyxPQUFPekIsU0FBU00sS0FBSyxDQUFDb0I7SUFDMUI7QUFDSjtBQUVBLFNBQVN4QjtJQUNMLElBQUlFO0lBQ0osSUFBSUc7SUFDSixJQUFJcUIsVUFBVSxJQUFJNUIsU0FBUzZCLE9BQU8sQ0FBQyxTQUFTQyxVQUFVLEVBQUVDLFNBQVM7UUFDN0QzQixVQUFVMEI7UUFDVnZCLFNBQVN3QjtJQUNiO0lBRUEsT0FBTztRQUNIM0IsU0FBU0E7UUFDVEcsUUFBUUE7UUFDUnFCLFNBQVNBO0lBQ2I7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi9wcm9taXNlcy5qcz8zMjZkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG52YXIgYmx1ZWJpcmQgPSByZXF1aXJlKFwiYmx1ZWJpcmQvanMvcmVsZWFzZS9wcm9taXNlXCIpKCk7XG5cbmV4cG9ydHMuZGVmZXIgPSBkZWZlcjtcbmV4cG9ydHMud2hlbiA9IGJsdWViaXJkLnJlc29sdmU7XG5leHBvcnRzLnJlc29sdmUgPSBibHVlYmlyZC5yZXNvbHZlO1xuZXhwb3J0cy5hbGwgPSBibHVlYmlyZC5hbGw7XG5leHBvcnRzLnByb3BzID0gYmx1ZWJpcmQucHJvcHM7XG5leHBvcnRzLnJlamVjdCA9IGJsdWViaXJkLnJlamVjdDtcbmV4cG9ydHMucHJvbWlzaWZ5ID0gYmx1ZWJpcmQucHJvbWlzaWZ5O1xuZXhwb3J0cy5tYXBTZXJpZXMgPSBibHVlYmlyZC5tYXBTZXJpZXM7XG5leHBvcnRzLmF0dGVtcHQgPSBibHVlYmlyZC5hdHRlbXB0O1xuXG5leHBvcnRzLm5mY2FsbCA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgdmFyIHByb21pc2VkRnVuYyA9IGJsdWViaXJkLnByb21pc2lmeShmdW5jKTtcbiAgICByZXR1cm4gcHJvbWlzZWRGdW5jLmFwcGx5KG51bGwsIGFyZ3MpO1xufTtcblxuYmx1ZWJpcmQucHJvdG90eXBlLmZhaWwgPSBibHVlYmlyZC5wcm90b3R5cGUuY2F1Z2h0O1xuXG5ibHVlYmlyZC5wcm90b3R5cGUuYWxzbyA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHZhciByZXR1cm5WYWx1ZSA9IF8uZXh0ZW5kKHt9LCB2YWx1ZSwgZnVuYyh2YWx1ZSkpO1xuICAgICAgICByZXR1cm4gYmx1ZWJpcmQucHJvcHMocmV0dXJuVmFsdWUpO1xuICAgIH0pO1xufTtcblxuZnVuY3Rpb24gZGVmZXIoKSB7XG4gICAgdmFyIHJlc29sdmU7XG4gICAgdmFyIHJlamVjdDtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBibHVlYmlyZC5Qcm9taXNlKGZ1bmN0aW9uKHJlc29sdmVBcmcsIHJlamVjdEFyZykge1xuICAgICAgICByZXNvbHZlID0gcmVzb2x2ZUFyZztcbiAgICAgICAgcmVqZWN0ID0gcmVqZWN0QXJnO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzb2x2ZTogcmVzb2x2ZSxcbiAgICAgICAgcmVqZWN0OiByZWplY3QsXG4gICAgICAgIHByb21pc2U6IHByb21pc2VcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiYmx1ZWJpcmQiLCJleHBvcnRzIiwiZGVmZXIiLCJ3aGVuIiwicmVzb2x2ZSIsImFsbCIsInByb3BzIiwicmVqZWN0IiwicHJvbWlzaWZ5IiwibWFwU2VyaWVzIiwiYXR0ZW1wdCIsIm5mY2FsbCIsImZ1bmMiLCJhcmdzIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJhcmd1bWVudHMiLCJwcm9taXNlZEZ1bmMiLCJhcHBseSIsImZhaWwiLCJjYXVnaHQiLCJhbHNvIiwidGhlbiIsInZhbHVlIiwicmV0dXJuVmFsdWUiLCJleHRlbmQiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmVBcmciLCJyZWplY3RBcmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/promises.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/raw-text.js":
/*!**********************************************!*\
  !*** ./node_modules/mammoth/lib/raw-text.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var documents = __webpack_require__(/*! ./documents */ \"(ssr)/./node_modules/mammoth/lib/documents.js\");\nfunction convertElementToRawText(element) {\n    if (element.type === \"text\") {\n        return element.value;\n    } else if (element.type === documents.types.tab) {\n        return \"\t\";\n    } else {\n        var tail = element.type === \"paragraph\" ? \"\\n\\n\" : \"\";\n        return (element.children || []).map(convertElementToRawText).join(\"\") + tail;\n    }\n}\nexports.convertElementToRawText = convertElementToRawText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcmF3LXRleHQuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsa0VBQWE7QUFFckMsU0FBU0Msd0JBQXdCQyxPQUFPO0lBQ3BDLElBQUlBLFFBQVFDLElBQUksS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELFFBQVFFLEtBQUs7SUFDeEIsT0FBTyxJQUFJRixRQUFRQyxJQUFJLEtBQUtKLFVBQVVNLEtBQUssQ0FBQ0MsR0FBRyxFQUFFO1FBQzdDLE9BQU87SUFDWCxPQUFPO1FBQ0gsSUFBSUMsT0FBT0wsUUFBUUMsSUFBSSxLQUFLLGNBQWMsU0FBUztRQUNuRCxPQUFPLENBQUNELFFBQVFNLFFBQVEsSUFBSSxFQUFFLEVBQUVDLEdBQUcsQ0FBQ1IseUJBQXlCUyxJQUFJLENBQUMsTUFBTUg7SUFDNUU7QUFDSjtBQUVBSSwrQkFBK0IsR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcmF3LXRleHQuanM/Y2ZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZG9jdW1lbnRzID0gcmVxdWlyZShcIi4vZG9jdW1lbnRzXCIpO1xuXG5mdW5jdGlvbiBjb252ZXJ0RWxlbWVudFRvUmF3VGV4dChlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQudHlwZSA9PT0gXCJ0ZXh0XCIpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQudmFsdWU7XG4gICAgfSBlbHNlIGlmIChlbGVtZW50LnR5cGUgPT09IGRvY3VtZW50cy50eXBlcy50YWIpIHtcbiAgICAgICAgcmV0dXJuIFwiXFx0XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHRhaWwgPSBlbGVtZW50LnR5cGUgPT09IFwicGFyYWdyYXBoXCIgPyBcIlxcblxcblwiIDogXCJcIjtcbiAgICAgICAgcmV0dXJuIChlbGVtZW50LmNoaWxkcmVuIHx8IFtdKS5tYXAoY29udmVydEVsZW1lbnRUb1Jhd1RleHQpLmpvaW4oXCJcIikgKyB0YWlsO1xuICAgIH1cbn1cblxuZXhwb3J0cy5jb252ZXJ0RWxlbWVudFRvUmF3VGV4dCA9IGNvbnZlcnRFbGVtZW50VG9SYXdUZXh0O1xuIl0sIm5hbWVzIjpbImRvY3VtZW50cyIsInJlcXVpcmUiLCJjb252ZXJ0RWxlbWVudFRvUmF3VGV4dCIsImVsZW1lbnQiLCJ0eXBlIiwidmFsdWUiLCJ0eXBlcyIsInRhYiIsInRhaWwiLCJjaGlsZHJlbiIsIm1hcCIsImpvaW4iLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/raw-text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/results.js":
/*!*********************************************!*\
  !*** ./node_modules/mammoth/lib/results.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nexports.Result = Result;\nexports.success = success;\nexports.warning = warning;\nexports.error = error;\nfunction Result(value, messages) {\n    this.value = value;\n    this.messages = messages || [];\n}\nResult.prototype.map = function(func) {\n    return new Result(func(this.value), this.messages);\n};\nResult.prototype.flatMap = function(func) {\n    var funcResult = func(this.value);\n    return new Result(funcResult.value, combineMessages([\n        this,\n        funcResult\n    ]));\n};\nResult.prototype.flatMapThen = function(func) {\n    var that = this;\n    return func(this.value).then(function(otherResult) {\n        return new Result(otherResult.value, combineMessages([\n            that,\n            otherResult\n        ]));\n    });\n};\nResult.combine = function(results) {\n    var values = _.flatten(_.pluck(results, \"value\"));\n    var messages = combineMessages(results);\n    return new Result(values, messages);\n};\nfunction success(value) {\n    return new Result(value, []);\n}\nfunction warning(message) {\n    return {\n        type: \"warning\",\n        message: message\n    };\n}\nfunction error(exception) {\n    return {\n        type: \"error\",\n        message: exception.message,\n        error: exception\n    };\n}\nfunction combineMessages(results) {\n    var messages = [];\n    _.flatten(_.pluck(results, \"messages\"), true).forEach(function(message) {\n        if (!containsMessage(messages, message)) {\n            messages.push(message);\n        }\n    });\n    return messages;\n}\nfunction containsMessage(messages, message) {\n    return _.find(messages, isSameMessage.bind(null, message)) !== undefined;\n}\nfunction isSameMessage(first, second) {\n    return first.type === second.type && first.message === second.message;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvcmVzdWx0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUc1QkMsY0FBYyxHQUFHQztBQUNqQkQsZUFBZSxHQUFHRTtBQUNsQkYsZUFBZSxHQUFHRztBQUNsQkgsYUFBYSxHQUFHSTtBQUdoQixTQUFTSCxPQUFPSSxLQUFLLEVBQUVDLFFBQVE7SUFDM0IsSUFBSSxDQUFDRCxLQUFLLEdBQUdBO0lBQ2IsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFlBQVksRUFBRTtBQUNsQztBQUVBTCxPQUFPTSxTQUFTLENBQUNDLEdBQUcsR0FBRyxTQUFTQyxJQUFJO0lBQ2hDLE9BQU8sSUFBSVIsT0FBT1EsS0FBSyxJQUFJLENBQUNKLEtBQUssR0FBRyxJQUFJLENBQUNDLFFBQVE7QUFDckQ7QUFFQUwsT0FBT00sU0FBUyxDQUFDRyxPQUFPLEdBQUcsU0FBU0QsSUFBSTtJQUNwQyxJQUFJRSxhQUFhRixLQUFLLElBQUksQ0FBQ0osS0FBSztJQUNoQyxPQUFPLElBQUlKLE9BQU9VLFdBQVdOLEtBQUssRUFBRU8sZ0JBQWdCO1FBQUMsSUFBSTtRQUFFRDtLQUFXO0FBQzFFO0FBRUFWLE9BQU9NLFNBQVMsQ0FBQ00sV0FBVyxHQUFHLFNBQVNKLElBQUk7SUFDeEMsSUFBSUssT0FBTyxJQUFJO0lBQ2YsT0FBT0wsS0FBSyxJQUFJLENBQUNKLEtBQUssRUFBRVUsSUFBSSxDQUFDLFNBQVNDLFdBQVc7UUFDN0MsT0FBTyxJQUFJZixPQUFPZSxZQUFZWCxLQUFLLEVBQUVPLGdCQUFnQjtZQUFDRTtZQUFNRTtTQUFZO0lBQzVFO0FBQ0o7QUFFQWYsT0FBT2dCLE9BQU8sR0FBRyxTQUFTQyxPQUFPO0lBQzdCLElBQUlDLFNBQVNyQixFQUFFc0IsT0FBTyxDQUFDdEIsRUFBRXVCLEtBQUssQ0FBQ0gsU0FBUztJQUN4QyxJQUFJWixXQUFXTSxnQkFBZ0JNO0lBQy9CLE9BQU8sSUFBSWpCLE9BQU9rQixRQUFRYjtBQUM5QjtBQUVBLFNBQVNKLFFBQVFHLEtBQUs7SUFDbEIsT0FBTyxJQUFJSixPQUFPSSxPQUFPLEVBQUU7QUFDL0I7QUFFQSxTQUFTRixRQUFRbUIsT0FBTztJQUNwQixPQUFPO1FBQ0hDLE1BQU07UUFDTkQsU0FBU0E7SUFDYjtBQUNKO0FBRUEsU0FBU2xCLE1BQU1vQixTQUFTO0lBQ3BCLE9BQU87UUFDSEQsTUFBTTtRQUNORCxTQUFTRSxVQUFVRixPQUFPO1FBQzFCbEIsT0FBT29CO0lBQ1g7QUFDSjtBQUVBLFNBQVNaLGdCQUFnQk0sT0FBTztJQUM1QixJQUFJWixXQUFXLEVBQUU7SUFDakJSLEVBQUVzQixPQUFPLENBQUN0QixFQUFFdUIsS0FBSyxDQUFDSCxTQUFTLGFBQWEsTUFBTU8sT0FBTyxDQUFDLFNBQVNILE9BQU87UUFDbEUsSUFBSSxDQUFDSSxnQkFBZ0JwQixVQUFVZ0IsVUFBVTtZQUNyQ2hCLFNBQVNxQixJQUFJLENBQUNMO1FBQ2xCO0lBQ0o7SUFDQSxPQUFPaEI7QUFDWDtBQUVBLFNBQVNvQixnQkFBZ0JwQixRQUFRLEVBQUVnQixPQUFPO0lBQ3RDLE9BQU94QixFQUFFOEIsSUFBSSxDQUFDdEIsVUFBVXVCLGNBQWNDLElBQUksQ0FBQyxNQUFNUixjQUFjUztBQUNuRTtBQUVBLFNBQVNGLGNBQWNHLEtBQUssRUFBRUMsTUFBTTtJQUNoQyxPQUFPRCxNQUFNVCxJQUFJLEtBQUtVLE9BQU9WLElBQUksSUFBSVMsTUFBTVYsT0FBTyxLQUFLVyxPQUFPWCxPQUFPO0FBQ3pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3Jlc3VsdHMuanM/ZjBkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG5cbmV4cG9ydHMuUmVzdWx0ID0gUmVzdWx0O1xuZXhwb3J0cy5zdWNjZXNzID0gc3VjY2VzcztcbmV4cG9ydHMud2FybmluZyA9IHdhcm5pbmc7XG5leHBvcnRzLmVycm9yID0gZXJyb3I7XG5cblxuZnVuY3Rpb24gUmVzdWx0KHZhbHVlLCBtZXNzYWdlcykge1xuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB0aGlzLm1lc3NhZ2VzID0gbWVzc2FnZXMgfHwgW107XG59XG5cblJlc3VsdC5wcm90b3R5cGUubWFwID0gZnVuY3Rpb24oZnVuYykge1xuICAgIHJldHVybiBuZXcgUmVzdWx0KGZ1bmModGhpcy52YWx1ZSksIHRoaXMubWVzc2FnZXMpO1xufTtcblxuUmVzdWx0LnByb3RvdHlwZS5mbGF0TWFwID0gZnVuY3Rpb24oZnVuYykge1xuICAgIHZhciBmdW5jUmVzdWx0ID0gZnVuYyh0aGlzLnZhbHVlKTtcbiAgICByZXR1cm4gbmV3IFJlc3VsdChmdW5jUmVzdWx0LnZhbHVlLCBjb21iaW5lTWVzc2FnZXMoW3RoaXMsIGZ1bmNSZXN1bHRdKSk7XG59O1xuXG5SZXN1bHQucHJvdG90eXBlLmZsYXRNYXBUaGVuID0gZnVuY3Rpb24oZnVuYykge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICByZXR1cm4gZnVuYyh0aGlzLnZhbHVlKS50aGVuKGZ1bmN0aW9uKG90aGVyUmVzdWx0KSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVzdWx0KG90aGVyUmVzdWx0LnZhbHVlLCBjb21iaW5lTWVzc2FnZXMoW3RoYXQsIG90aGVyUmVzdWx0XSkpO1xuICAgIH0pO1xufTtcblxuUmVzdWx0LmNvbWJpbmUgPSBmdW5jdGlvbihyZXN1bHRzKSB7XG4gICAgdmFyIHZhbHVlcyA9IF8uZmxhdHRlbihfLnBsdWNrKHJlc3VsdHMsIFwidmFsdWVcIikpO1xuICAgIHZhciBtZXNzYWdlcyA9IGNvbWJpbmVNZXNzYWdlcyhyZXN1bHRzKTtcbiAgICByZXR1cm4gbmV3IFJlc3VsdCh2YWx1ZXMsIG1lc3NhZ2VzKTtcbn07XG5cbmZ1bmN0aW9uIHN1Y2Nlc3ModmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IFJlc3VsdCh2YWx1ZSwgW10pO1xufVxuXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIndhcm5pbmdcIixcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGVycm9yKGV4Y2VwdGlvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiZXJyb3JcIixcbiAgICAgICAgbWVzc2FnZTogZXhjZXB0aW9uLm1lc3NhZ2UsXG4gICAgICAgIGVycm9yOiBleGNlcHRpb25cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBjb21iaW5lTWVzc2FnZXMocmVzdWx0cykge1xuICAgIHZhciBtZXNzYWdlcyA9IFtdO1xuICAgIF8uZmxhdHRlbihfLnBsdWNrKHJlc3VsdHMsIFwibWVzc2FnZXNcIiksIHRydWUpLmZvckVhY2goZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgICBpZiAoIWNvbnRhaW5zTWVzc2FnZShtZXNzYWdlcywgbWVzc2FnZSkpIHtcbiAgICAgICAgICAgIG1lc3NhZ2VzLnB1c2gobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbWVzc2FnZXM7XG59XG5cbmZ1bmN0aW9uIGNvbnRhaW5zTWVzc2FnZShtZXNzYWdlcywgbWVzc2FnZSkge1xuICAgIHJldHVybiBfLmZpbmQobWVzc2FnZXMsIGlzU2FtZU1lc3NhZ2UuYmluZChudWxsLCBtZXNzYWdlKSkgIT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNTYW1lTWVzc2FnZShmaXJzdCwgc2Vjb25kKSB7XG4gICAgcmV0dXJuIGZpcnN0LnR5cGUgPT09IHNlY29uZC50eXBlICYmIGZpcnN0Lm1lc3NhZ2UgPT09IHNlY29uZC5tZXNzYWdlO1xufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiZXhwb3J0cyIsIlJlc3VsdCIsInN1Y2Nlc3MiLCJ3YXJuaW5nIiwiZXJyb3IiLCJ2YWx1ZSIsIm1lc3NhZ2VzIiwicHJvdG90eXBlIiwibWFwIiwiZnVuYyIsImZsYXRNYXAiLCJmdW5jUmVzdWx0IiwiY29tYmluZU1lc3NhZ2VzIiwiZmxhdE1hcFRoZW4iLCJ0aGF0IiwidGhlbiIsIm90aGVyUmVzdWx0IiwiY29tYmluZSIsInJlc3VsdHMiLCJ2YWx1ZXMiLCJmbGF0dGVuIiwicGx1Y2siLCJtZXNzYWdlIiwidHlwZSIsImV4Y2VwdGlvbiIsImZvckVhY2giLCJjb250YWluc01lc3NhZ2UiLCJwdXNoIiwiZmluZCIsImlzU2FtZU1lc3NhZ2UiLCJiaW5kIiwidW5kZWZpbmVkIiwiZmlyc3QiLCJzZWNvbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/results.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/style-reader.js":
/*!**************************************************!*\
  !*** ./node_modules/mammoth/lib/style-reader.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar lop = __webpack_require__(/*! lop */ \"(ssr)/./node_modules/lop/index.js\");\nvar documentMatchers = __webpack_require__(/*! ./styles/document-matchers */ \"(ssr)/./node_modules/mammoth/lib/styles/document-matchers.js\");\nvar htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(ssr)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar tokenise = (__webpack_require__(/*! ./styles/parser/tokeniser */ \"(ssr)/./node_modules/mammoth/lib/styles/parser/tokeniser.js\").tokenise);\nvar results = __webpack_require__(/*! ./results */ \"(ssr)/./node_modules/mammoth/lib/results.js\");\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\nfunction readStyle(string) {\n    return parseString(styleRule, string);\n}\nfunction createStyleRule() {\n    return lop.rules.sequence(lop.rules.sequence.capture(documentMatcherRule()), lop.rules.tokenOfType(\"whitespace\"), lop.rules.tokenOfType(\"arrow\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"whitespace\"), lop.rules.sequence.capture(htmlPathRule())).head())), lop.rules.tokenOfType(\"end\")).map(function(documentMatcher, htmlPath) {\n        return {\n            from: documentMatcher,\n            to: htmlPath.valueOrElse(htmlPaths.empty)\n        };\n    });\n}\nfunction readDocumentMatcher(string) {\n    return parseString(documentMatcherRule(), string);\n}\nfunction documentMatcherRule() {\n    var sequence = lop.rules.sequence;\n    var identifierToConstant = function(identifier, constant) {\n        return lop.rules.then(lop.rules.token(\"identifier\", identifier), function() {\n            return constant;\n        });\n    };\n    var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n    var runRule = identifierToConstant(\"r\", documentMatchers.run);\n    var elementTypeRule = lop.rules.firstOf(\"p or r or table\", paragraphRule, runRule);\n    var styleIdRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(styleId) {\n        return {\n            styleId: styleId\n        };\n    });\n    var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\", lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName) {\n        return {\n            styleName: documentMatchers.equalTo(styleName)\n        };\n    }), lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"startsWith\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function(styleName) {\n        return {\n            styleName: documentMatchers.startsWith(styleName)\n        };\n    }));\n    var styleNameRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"style-name\"), lop.rules.sequence.capture(styleNameMatcherRule), lop.rules.tokenOfType(\"close-square-bracket\")).head();\n    var listTypeRule = lop.rules.firstOf(\"list type\", identifierToConstant(\"ordered-list\", {\n        isOrdered: true\n    }), identifierToConstant(\"unordered-list\", {\n        isOrdered: false\n    }));\n    var listRule = sequence(lop.rules.tokenOfType(\"colon\"), sequence.capture(listTypeRule), sequence.cut(), lop.rules.tokenOfType(\"open-paren\"), sequence.capture(integerRule), lop.rules.tokenOfType(\"close-paren\")).map(function(listType, levelNumber) {\n        return {\n            list: {\n                isOrdered: listType.isOrdered,\n                levelIndex: levelNumber - 1\n            }\n        };\n    });\n    function createMatcherSuffixesRule(rules) {\n        var matcherSuffix = lop.rules.firstOf.apply(lop.rules.firstOf, [\n            \"matcher suffix\"\n        ].concat(rules));\n        var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n        return lop.rules.then(matcherSuffixes, function(suffixes) {\n            var matcherOptions = {};\n            suffixes.forEach(function(suffix) {\n                _.extend(matcherOptions, suffix);\n            });\n            return matcherOptions;\n        });\n    }\n    var paragraphOrRun = sequence(sequence.capture(elementTypeRule), sequence.capture(createMatcherSuffixesRule([\n        styleIdRule,\n        styleNameRule,\n        listRule\n    ]))).map(function(createMatcher, matcherOptions) {\n        return createMatcher(matcherOptions);\n    });\n    var table = sequence(lop.rules.token(\"identifier\", \"table\"), sequence.capture(createMatcherSuffixesRule([\n        styleIdRule,\n        styleNameRule\n    ]))).map(function(options) {\n        return documentMatchers.table(options);\n    });\n    var bold = identifierToConstant(\"b\", documentMatchers.bold);\n    var italic = identifierToConstant(\"i\", documentMatchers.italic);\n    var underline = identifierToConstant(\"u\", documentMatchers.underline);\n    var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n    var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n    var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n    var highlight = sequence(lop.rules.token(\"identifier\", \"highlight\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"color\"), lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).head()))).map(function(color) {\n        return documentMatchers.highlight({\n            color: color.valueOrElse(undefined)\n        });\n    });\n    var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n    var breakMatcher = sequence(lop.rules.token(\"identifier\", \"br\"), sequence.cut(), lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.token(\"identifier\", \"type\"), lop.rules.tokenOfType(\"equals\"), sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function(breakType) {\n        switch(breakType){\n            case \"line\":\n                return documentMatchers.lineBreak;\n            case \"page\":\n                return documentMatchers.pageBreak;\n            case \"column\":\n                return documentMatchers.columnBreak;\n            default:\n        }\n    });\n    return lop.rules.firstOf(\"element type\", paragraphOrRun, table, bold, italic, underline, strikethrough, allCaps, smallCaps, highlight, commentReference, breakMatcher);\n}\nfunction readHtmlPath(string) {\n    return parseString(htmlPathRule(), string);\n}\nfunction htmlPathRule() {\n    var capture = lop.rules.sequence.capture;\n    var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n    var freshRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"fresh\"))), function(option) {\n        return option.map(function() {\n            return true;\n        }).valueOrElse(false);\n    });\n    var separatorRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"separator\"), lop.rules.tokenOfType(\"open-paren\"), capture(stringRule), lop.rules.tokenOfType(\"close-paren\")).head()), function(option) {\n        return option.valueOrElse(\"\");\n    });\n    var tagNamesRule = lop.rules.oneOrMoreWithSeparator(identifierRule, lop.rules.tokenOfType(\"choice\"));\n    var styleElementRule = lop.rules.sequence(capture(tagNamesRule), capture(lop.rules.zeroOrMore(attributeOrClassRule)), capture(freshRule), capture(separatorRule)).map(function(tagName, attributesList, fresh, separator) {\n        var attributes = {};\n        var options = {};\n        attributesList.forEach(function(attribute) {\n            if (attribute.append && attributes[attribute.name]) {\n                attributes[attribute.name] += \" \" + attribute.value;\n            } else {\n                attributes[attribute.name] = attribute.value;\n            }\n        });\n        if (fresh) {\n            options.fresh = true;\n        }\n        if (separator) {\n            options.separator = separator;\n        }\n        return htmlPaths.element(tagName, attributes, options);\n    });\n    return lop.rules.firstOf(\"html path\", lop.rules.then(lop.rules.tokenOfType(\"bang\"), function() {\n        return htmlPaths.ignore;\n    }), lop.rules.then(lop.rules.zeroOrMoreWithSeparator(styleElementRule, lop.rules.sequence(whitespaceRule, lop.rules.tokenOfType(\"gt\"), whitespaceRule)), htmlPaths.elements));\n}\nvar identifierRule = lop.rules.then(lop.rules.tokenOfType(\"identifier\"), decodeEscapeSequences);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\nvar stringRule = lop.rules.then(lop.rules.tokenOfType(\"string\"), decodeEscapeSequences);\nvar escapeSequences = {\n    \"n\": \"\\n\",\n    \"r\": \"\\r\",\n    \"t\": \"\t\"\n};\nfunction decodeEscapeSequences(value) {\n    return value.replace(/\\\\(.)/g, function(match, code) {\n        return escapeSequences[code] || code;\n    });\n}\nvar attributeRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule), lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function(name, value) {\n    return {\n        name: name,\n        value: value,\n        append: false\n    };\n});\nvar classRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).map(function(className) {\n    return {\n        name: \"class\",\n        value: className,\n        append: true\n    };\n});\nvar attributeOrClassRule = lop.rules.firstOf(\"attribute or class\", attributeRule, classRule);\nfunction parseString(rule, string) {\n    var tokens = tokenise(string);\n    var parser = lop.Parser();\n    var parseResult = parser.parseTokens(rule, tokens);\n    if (parseResult.isSuccess()) {\n        return results.success(parseResult.value());\n    } else {\n        return new results.Result(null, [\n            results.warning(describeFailure(string, parseResult))\n        ]);\n    }\n}\nfunction describeFailure(input, parseResult) {\n    return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" + parseResult.errors().map(describeError).join(\"\\n\");\n}\nfunction describeError(error) {\n    return \"Error was at character number \" + error.characterNumber() + \": \" + \"Expected \" + error.expected + \" but got \" + error.actual;\n}\nvar styleRule = createStyleRule();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/style-reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/styles/document-matchers.js":
/*!**************************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/document-matchers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.paragraph = paragraph;\nexports.run = run;\nexports.table = table;\nexports.bold = new Matcher(\"bold\");\nexports.italic = new Matcher(\"italic\");\nexports.underline = new Matcher(\"underline\");\nexports.strikethrough = new Matcher(\"strikethrough\");\nexports.allCaps = new Matcher(\"allCaps\");\nexports.smallCaps = new Matcher(\"smallCaps\");\nexports.highlight = highlight;\nexports.commentReference = new Matcher(\"commentReference\");\nexports.lineBreak = new BreakMatcher({\n    breakType: \"line\"\n});\nexports.pageBreak = new BreakMatcher({\n    breakType: \"page\"\n});\nexports.columnBreak = new BreakMatcher({\n    breakType: \"column\"\n});\nexports.equalTo = equalTo;\nexports.startsWith = startsWith;\nfunction paragraph(options) {\n    return new Matcher(\"paragraph\", options);\n}\nfunction run(options) {\n    return new Matcher(\"run\", options);\n}\nfunction table(options) {\n    return new Matcher(\"table\", options);\n}\nfunction highlight(options) {\n    return new HighlightMatcher(options);\n}\nfunction Matcher(elementType, options) {\n    options = options || {};\n    this._elementType = elementType;\n    this._styleId = options.styleId;\n    this._styleName = options.styleName;\n    if (options.list) {\n        this._listIndex = options.list.levelIndex;\n        this._listIsOrdered = options.list.isOrdered;\n    }\n}\nMatcher.prototype.matches = function(element) {\n    return element.type === this._elementType && (this._styleId === undefined || element.styleId === this._styleId) && (this._styleName === undefined || element.styleName && this._styleName.operator(this._styleName.operand, element.styleName)) && (this._listIndex === undefined || isList(element, this._listIndex, this._listIsOrdered)) && (this._breakType === undefined || this._breakType === element.breakType);\n};\nfunction HighlightMatcher(options) {\n    options = options || {};\n    this._color = options.color;\n}\nHighlightMatcher.prototype.matches = function(element) {\n    return element.type === \"highlight\" && (this._color === undefined || element.color === this._color);\n};\nfunction BreakMatcher(options) {\n    options = options || {};\n    this._breakType = options.breakType;\n}\nBreakMatcher.prototype.matches = function(element) {\n    return element.type === \"break\" && (this._breakType === undefined || element.breakType === this._breakType);\n};\nfunction isList(element, levelIndex, isOrdered) {\n    return element.numbering && element.numbering.level == levelIndex && element.numbering.isOrdered == isOrdered;\n}\nfunction equalTo(value) {\n    return {\n        operator: operatorEqualTo,\n        operand: value\n    };\n}\nfunction startsWith(value) {\n    return {\n        operator: operatorStartsWith,\n        operand: value\n    };\n}\nfunction operatorEqualTo(first, second) {\n    return first.toUpperCase() === second.toUpperCase();\n}\nfunction operatorStartsWith(first, second) {\n    return second.toUpperCase().indexOf(first.toUpperCase()) === 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL2RvY3VtZW50LW1hdGNoZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxpQkFBaUIsR0FBR0M7QUFDcEJELFdBQVcsR0FBR0U7QUFDZEYsYUFBYSxHQUFHRztBQUNoQkgsWUFBWSxHQUFHLElBQUlLLFFBQVE7QUFDM0JMLGNBQWMsR0FBRyxJQUFJSyxRQUFRO0FBQzdCTCxpQkFBaUIsR0FBRyxJQUFJSyxRQUFRO0FBQ2hDTCxxQkFBcUIsR0FBRyxJQUFJSyxRQUFRO0FBQ3BDTCxlQUFlLEdBQUcsSUFBSUssUUFBUTtBQUM5QkwsaUJBQWlCLEdBQUcsSUFBSUssUUFBUTtBQUNoQ0wsaUJBQWlCLEdBQUdXO0FBQ3BCWCx3QkFBd0IsR0FBRyxJQUFJSyxRQUFRO0FBQ3ZDTCxpQkFBaUIsR0FBRyxJQUFJYyxhQUFhO0lBQUNDLFdBQVc7QUFBTTtBQUN2RGYsaUJBQWlCLEdBQUcsSUFBSWMsYUFBYTtJQUFDQyxXQUFXO0FBQU07QUFDdkRmLG1CQUFtQixHQUFHLElBQUljLGFBQWE7SUFBQ0MsV0FBVztBQUFRO0FBQzNEZixlQUFlLEdBQUdrQjtBQUNsQmxCLGtCQUFrQixHQUFHbUI7QUFHckIsU0FBU2xCLFVBQVVtQixPQUFPO0lBQ3RCLE9BQU8sSUFBSWYsUUFBUSxhQUFhZTtBQUNwQztBQUVBLFNBQVNsQixJQUFJa0IsT0FBTztJQUNoQixPQUFPLElBQUlmLFFBQVEsT0FBT2U7QUFDOUI7QUFFQSxTQUFTakIsTUFBTWlCLE9BQU87SUFDbEIsT0FBTyxJQUFJZixRQUFRLFNBQVNlO0FBQ2hDO0FBRUEsU0FBU1QsVUFBVVMsT0FBTztJQUN0QixPQUFPLElBQUlDLGlCQUFpQkQ7QUFDaEM7QUFFQSxTQUFTZixRQUFRaUIsV0FBVyxFQUFFRixPQUFPO0lBQ2pDQSxVQUFVQSxXQUFXLENBQUM7SUFDdEIsSUFBSSxDQUFDRyxZQUFZLEdBQUdEO0lBQ3BCLElBQUksQ0FBQ0UsUUFBUSxHQUFHSixRQUFRSyxPQUFPO0lBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHTixRQUFRTyxTQUFTO0lBQ25DLElBQUlQLFFBQVFRLElBQUksRUFBRTtRQUNkLElBQUksQ0FBQ0MsVUFBVSxHQUFHVCxRQUFRUSxJQUFJLENBQUNFLFVBQVU7UUFDekMsSUFBSSxDQUFDQyxjQUFjLEdBQUdYLFFBQVFRLElBQUksQ0FBQ0ksU0FBUztJQUNoRDtBQUNKO0FBRUEzQixRQUFRNEIsU0FBUyxDQUFDQyxPQUFPLEdBQUcsU0FBU0MsT0FBTztJQUN4QyxPQUFPQSxRQUFRQyxJQUFJLEtBQUssSUFBSSxDQUFDYixZQUFZLElBQ3BDLEtBQUksQ0FBQ0MsUUFBUSxLQUFLYSxhQUFhRixRQUFRVixPQUFPLEtBQUssSUFBSSxDQUFDRCxRQUFRLEtBQ2hFLEtBQUksQ0FBQ0UsVUFBVSxLQUFLVyxhQUFjRixRQUFRUixTQUFTLElBQUksSUFBSSxDQUFDRCxVQUFVLENBQUNZLFFBQVEsQ0FBQyxJQUFJLENBQUNaLFVBQVUsQ0FBQ2EsT0FBTyxFQUFFSixRQUFRUixTQUFTLENBQUMsS0FDM0gsS0FBSSxDQUFDRSxVQUFVLEtBQUtRLGFBQWFHLE9BQU9MLFNBQVMsSUFBSSxDQUFDTixVQUFVLEVBQUUsSUFBSSxDQUFDRSxjQUFjLE1BQ3JGLEtBQUksQ0FBQ1UsVUFBVSxLQUFLSixhQUFhLElBQUksQ0FBQ0ksVUFBVSxLQUFLTixRQUFRcEIsU0FBUztBQUMvRTtBQUVBLFNBQVNNLGlCQUFpQkQsT0FBTztJQUM3QkEsVUFBVUEsV0FBVyxDQUFDO0lBQ3RCLElBQUksQ0FBQ3NCLE1BQU0sR0FBR3RCLFFBQVF1QixLQUFLO0FBQy9CO0FBRUF0QixpQkFBaUJZLFNBQVMsQ0FBQ0MsT0FBTyxHQUFHLFNBQVNDLE9BQU87SUFDakQsT0FBT0EsUUFBUUMsSUFBSSxLQUFLLGVBQ25CLEtBQUksQ0FBQ00sTUFBTSxLQUFLTCxhQUFhRixRQUFRUSxLQUFLLEtBQUssSUFBSSxDQUFDRCxNQUFNO0FBQ25FO0FBRUEsU0FBUzVCLGFBQWFNLE9BQU87SUFDekJBLFVBQVVBLFdBQVcsQ0FBQztJQUN0QixJQUFJLENBQUNxQixVQUFVLEdBQUdyQixRQUFRTCxTQUFTO0FBQ3ZDO0FBRUFELGFBQWFtQixTQUFTLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxPQUFPO0lBQzdDLE9BQU9BLFFBQVFDLElBQUksS0FBSyxXQUNuQixLQUFJLENBQUNLLFVBQVUsS0FBS0osYUFBYUYsUUFBUXBCLFNBQVMsS0FBSyxJQUFJLENBQUMwQixVQUFVO0FBQy9FO0FBRUEsU0FBU0QsT0FBT0wsT0FBTyxFQUFFTCxVQUFVLEVBQUVFLFNBQVM7SUFDMUMsT0FBT0csUUFBUVMsU0FBUyxJQUNwQlQsUUFBUVMsU0FBUyxDQUFDQyxLQUFLLElBQUlmLGNBQzNCSyxRQUFRUyxTQUFTLENBQUNaLFNBQVMsSUFBSUE7QUFDdkM7QUFFQSxTQUFTZCxRQUFRNEIsS0FBSztJQUNsQixPQUFPO1FBQ0hSLFVBQVVTO1FBQ1ZSLFNBQVNPO0lBQ2I7QUFDSjtBQUVBLFNBQVMzQixXQUFXMkIsS0FBSztJQUNyQixPQUFPO1FBQ0hSLFVBQVVVO1FBQ1ZULFNBQVNPO0lBQ2I7QUFDSjtBQUVBLFNBQVNDLGdCQUFnQkUsS0FBSyxFQUFFQyxNQUFNO0lBQ2xDLE9BQU9ELE1BQU1FLFdBQVcsT0FBT0QsT0FBT0MsV0FBVztBQUNyRDtBQUVBLFNBQVNILG1CQUFtQkMsS0FBSyxFQUFFQyxNQUFNO0lBQ3JDLE9BQU9BLE9BQU9DLFdBQVcsR0FBR0MsT0FBTyxDQUFDSCxNQUFNRSxXQUFXLFFBQVE7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL2RvY3VtZW50LW1hdGNoZXJzLmpzPzVlYTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5wYXJhZ3JhcGggPSBwYXJhZ3JhcGg7XG5leHBvcnRzLnJ1biA9IHJ1bjtcbmV4cG9ydHMudGFibGUgPSB0YWJsZTtcbmV4cG9ydHMuYm9sZCA9IG5ldyBNYXRjaGVyKFwiYm9sZFwiKTtcbmV4cG9ydHMuaXRhbGljID0gbmV3IE1hdGNoZXIoXCJpdGFsaWNcIik7XG5leHBvcnRzLnVuZGVybGluZSA9IG5ldyBNYXRjaGVyKFwidW5kZXJsaW5lXCIpO1xuZXhwb3J0cy5zdHJpa2V0aHJvdWdoID0gbmV3IE1hdGNoZXIoXCJzdHJpa2V0aHJvdWdoXCIpO1xuZXhwb3J0cy5hbGxDYXBzID0gbmV3IE1hdGNoZXIoXCJhbGxDYXBzXCIpO1xuZXhwb3J0cy5zbWFsbENhcHMgPSBuZXcgTWF0Y2hlcihcInNtYWxsQ2Fwc1wiKTtcbmV4cG9ydHMuaGlnaGxpZ2h0ID0gaGlnaGxpZ2h0O1xuZXhwb3J0cy5jb21tZW50UmVmZXJlbmNlID0gbmV3IE1hdGNoZXIoXCJjb21tZW50UmVmZXJlbmNlXCIpO1xuZXhwb3J0cy5saW5lQnJlYWsgPSBuZXcgQnJlYWtNYXRjaGVyKHticmVha1R5cGU6IFwibGluZVwifSk7XG5leHBvcnRzLnBhZ2VCcmVhayA9IG5ldyBCcmVha01hdGNoZXIoe2JyZWFrVHlwZTogXCJwYWdlXCJ9KTtcbmV4cG9ydHMuY29sdW1uQnJlYWsgPSBuZXcgQnJlYWtNYXRjaGVyKHticmVha1R5cGU6IFwiY29sdW1uXCJ9KTtcbmV4cG9ydHMuZXF1YWxUbyA9IGVxdWFsVG87XG5leHBvcnRzLnN0YXJ0c1dpdGggPSBzdGFydHNXaXRoO1xuXG5cbmZ1bmN0aW9uIHBhcmFncmFwaChvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBNYXRjaGVyKFwicGFyYWdyYXBoXCIsIG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBydW4ob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgTWF0Y2hlcihcInJ1blwiLCBvcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gdGFibGUob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgTWF0Y2hlcihcInRhYmxlXCIsIG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBoaWdobGlnaHQob3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgSGlnaGxpZ2h0TWF0Y2hlcihvcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gTWF0Y2hlcihlbGVtZW50VHlwZSwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHRoaXMuX2VsZW1lbnRUeXBlID0gZWxlbWVudFR5cGU7XG4gICAgdGhpcy5fc3R5bGVJZCA9IG9wdGlvbnMuc3R5bGVJZDtcbiAgICB0aGlzLl9zdHlsZU5hbWUgPSBvcHRpb25zLnN0eWxlTmFtZTtcbiAgICBpZiAob3B0aW9ucy5saXN0KSB7XG4gICAgICAgIHRoaXMuX2xpc3RJbmRleCA9IG9wdGlvbnMubGlzdC5sZXZlbEluZGV4O1xuICAgICAgICB0aGlzLl9saXN0SXNPcmRlcmVkID0gb3B0aW9ucy5saXN0LmlzT3JkZXJlZDtcbiAgICB9XG59XG5cbk1hdGNoZXIucHJvdG90eXBlLm1hdGNoZXMgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgcmV0dXJuIGVsZW1lbnQudHlwZSA9PT0gdGhpcy5fZWxlbWVudFR5cGUgJiZcbiAgICAgICAgKHRoaXMuX3N0eWxlSWQgPT09IHVuZGVmaW5lZCB8fCBlbGVtZW50LnN0eWxlSWQgPT09IHRoaXMuX3N0eWxlSWQpICYmXG4gICAgICAgICh0aGlzLl9zdHlsZU5hbWUgPT09IHVuZGVmaW5lZCB8fCAoZWxlbWVudC5zdHlsZU5hbWUgJiYgdGhpcy5fc3R5bGVOYW1lLm9wZXJhdG9yKHRoaXMuX3N0eWxlTmFtZS5vcGVyYW5kLCBlbGVtZW50LnN0eWxlTmFtZSkpKSAmJlxuICAgICAgICAodGhpcy5fbGlzdEluZGV4ID09PSB1bmRlZmluZWQgfHwgaXNMaXN0KGVsZW1lbnQsIHRoaXMuX2xpc3RJbmRleCwgdGhpcy5fbGlzdElzT3JkZXJlZCkpICYmXG4gICAgICAgICh0aGlzLl9icmVha1R5cGUgPT09IHVuZGVmaW5lZCB8fCB0aGlzLl9icmVha1R5cGUgPT09IGVsZW1lbnQuYnJlYWtUeXBlKTtcbn07XG5cbmZ1bmN0aW9uIEhpZ2hsaWdodE1hdGNoZXIob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHRoaXMuX2NvbG9yID0gb3B0aW9ucy5jb2xvcjtcbn1cblxuSGlnaGxpZ2h0TWF0Y2hlci5wcm90b3R5cGUubWF0Y2hlcyA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC50eXBlID09PSBcImhpZ2hsaWdodFwiICYmXG4gICAgICAgICh0aGlzLl9jb2xvciA9PT0gdW5kZWZpbmVkIHx8IGVsZW1lbnQuY29sb3IgPT09IHRoaXMuX2NvbG9yKTtcbn07XG5cbmZ1bmN0aW9uIEJyZWFrTWF0Y2hlcihvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgdGhpcy5fYnJlYWtUeXBlID0gb3B0aW9ucy5icmVha1R5cGU7XG59XG5cbkJyZWFrTWF0Y2hlci5wcm90b3R5cGUubWF0Y2hlcyA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC50eXBlID09PSBcImJyZWFrXCIgJiZcbiAgICAgICAgKHRoaXMuX2JyZWFrVHlwZSA9PT0gdW5kZWZpbmVkIHx8IGVsZW1lbnQuYnJlYWtUeXBlID09PSB0aGlzLl9icmVha1R5cGUpO1xufTtcblxuZnVuY3Rpb24gaXNMaXN0KGVsZW1lbnQsIGxldmVsSW5kZXgsIGlzT3JkZXJlZCkge1xuICAgIHJldHVybiBlbGVtZW50Lm51bWJlcmluZyAmJlxuICAgICAgICBlbGVtZW50Lm51bWJlcmluZy5sZXZlbCA9PSBsZXZlbEluZGV4ICYmXG4gICAgICAgIGVsZW1lbnQubnVtYmVyaW5nLmlzT3JkZXJlZCA9PSBpc09yZGVyZWQ7XG59XG5cbmZ1bmN0aW9uIGVxdWFsVG8odmFsdWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3JFcXVhbFRvLFxuICAgICAgICBvcGVyYW5kOiB2YWx1ZVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIHN0YXJ0c1dpdGgodmFsdWUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3JTdGFydHNXaXRoLFxuICAgICAgICBvcGVyYW5kOiB2YWx1ZVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIG9wZXJhdG9yRXF1YWxUbyhmaXJzdCwgc2Vjb25kKSB7XG4gICAgcmV0dXJuIGZpcnN0LnRvVXBwZXJDYXNlKCkgPT09IHNlY29uZC50b1VwcGVyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBvcGVyYXRvclN0YXJ0c1dpdGgoZmlyc3QsIHNlY29uZCkge1xuICAgIHJldHVybiBzZWNvbmQudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpcnN0LnRvVXBwZXJDYXNlKCkpID09PSAwO1xufVxuIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJwYXJhZ3JhcGgiLCJydW4iLCJ0YWJsZSIsImJvbGQiLCJNYXRjaGVyIiwiaXRhbGljIiwidW5kZXJsaW5lIiwic3RyaWtldGhyb3VnaCIsImFsbENhcHMiLCJzbWFsbENhcHMiLCJoaWdobGlnaHQiLCJjb21tZW50UmVmZXJlbmNlIiwibGluZUJyZWFrIiwiQnJlYWtNYXRjaGVyIiwiYnJlYWtUeXBlIiwicGFnZUJyZWFrIiwiY29sdW1uQnJlYWsiLCJlcXVhbFRvIiwic3RhcnRzV2l0aCIsIm9wdGlvbnMiLCJIaWdobGlnaHRNYXRjaGVyIiwiZWxlbWVudFR5cGUiLCJfZWxlbWVudFR5cGUiLCJfc3R5bGVJZCIsInN0eWxlSWQiLCJfc3R5bGVOYW1lIiwic3R5bGVOYW1lIiwibGlzdCIsIl9saXN0SW5kZXgiLCJsZXZlbEluZGV4IiwiX2xpc3RJc09yZGVyZWQiLCJpc09yZGVyZWQiLCJwcm90b3R5cGUiLCJtYXRjaGVzIiwiZWxlbWVudCIsInR5cGUiLCJ1bmRlZmluZWQiLCJvcGVyYXRvciIsIm9wZXJhbmQiLCJpc0xpc3QiLCJfYnJlYWtUeXBlIiwiX2NvbG9yIiwiY29sb3IiLCJudW1iZXJpbmciLCJsZXZlbCIsInZhbHVlIiwib3BlcmF0b3JFcXVhbFRvIiwib3BlcmF0b3JTdGFydHNXaXRoIiwiZmlyc3QiLCJzZWNvbmQiLCJ0b1VwcGVyQ2FzZSIsImluZGV4T2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/styles/document-matchers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/styles/html-paths.js":
/*!*******************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/html-paths.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar html = __webpack_require__(/*! ../html */ \"(ssr)/./node_modules/mammoth/lib/html/index.js\");\nexports.topLevelElement = topLevelElement;\nexports.elements = elements;\nexports.element = element;\nfunction topLevelElement(tagName, attributes) {\n    return elements([\n        element(tagName, attributes, {\n            fresh: true\n        })\n    ]);\n}\nfunction elements(elementStyles) {\n    return new HtmlPath(elementStyles.map(function(elementStyle) {\n        if (_.isString(elementStyle)) {\n            return element(elementStyle);\n        } else {\n            return elementStyle;\n        }\n    }));\n}\nfunction HtmlPath(elements) {\n    this._elements = elements;\n}\nHtmlPath.prototype.wrap = function wrap(children) {\n    var result = children();\n    for(var index = this._elements.length - 1; index >= 0; index--){\n        result = this._elements[index].wrapNodes(result);\n    }\n    return result;\n};\nfunction element(tagName, attributes, options) {\n    options = options || {};\n    return new Element(tagName, attributes, options);\n}\nfunction Element(tagName, attributes, options) {\n    var tagNames = {};\n    if (_.isArray(tagName)) {\n        tagName.forEach(function(tagName) {\n            tagNames[tagName] = true;\n        });\n        tagName = tagName[0];\n    } else {\n        tagNames[tagName] = true;\n    }\n    this.tagName = tagName;\n    this.tagNames = tagNames;\n    this.attributes = attributes || {};\n    this.fresh = options.fresh;\n    this.separator = options.separator;\n}\nElement.prototype.matchesElement = function(element) {\n    return this.tagNames[element.tagName] && _.isEqual(this.attributes || {}, element.attributes || {});\n};\nElement.prototype.wrap = function wrap(generateNodes) {\n    return this.wrapNodes(generateNodes());\n};\nElement.prototype.wrapNodes = function wrapNodes(nodes) {\n    return [\n        html.elementWithTag(this, nodes)\n    ];\n};\nexports.empty = elements([]);\nexports.ignore = {\n    wrap: function() {\n        return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL2h0bWwtcGF0aHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsSUFBSUMsbUJBQU9BLENBQUMsd0VBQVk7QUFFNUIsSUFBSUMsT0FBT0QsbUJBQU9BLENBQUMsK0RBQVM7QUFFNUJFLHVCQUF1QixHQUFHQztBQUMxQkQsZ0JBQWdCLEdBQUdFO0FBQ25CRixlQUFlLEdBQUdHO0FBRWxCLFNBQVNGLGdCQUFnQkcsT0FBTyxFQUFFQyxVQUFVO0lBQ3hDLE9BQU9ILFNBQVM7UUFBQ0MsUUFBUUMsU0FBU0MsWUFBWTtZQUFDQyxPQUFPO1FBQUk7S0FBRztBQUNqRTtBQUVBLFNBQVNKLFNBQVNLLGFBQWE7SUFDM0IsT0FBTyxJQUFJQyxTQUFTRCxjQUFjRSxHQUFHLENBQUMsU0FBU0MsWUFBWTtRQUN2RCxJQUFJYixFQUFFYyxRQUFRLENBQUNELGVBQWU7WUFDMUIsT0FBT1AsUUFBUU87UUFDbkIsT0FBTztZQUNILE9BQU9BO1FBQ1g7SUFDSjtBQUNKO0FBRUEsU0FBU0YsU0FBU04sUUFBUTtJQUN0QixJQUFJLENBQUNVLFNBQVMsR0FBR1Y7QUFDckI7QUFFQU0sU0FBU0ssU0FBUyxDQUFDQyxJQUFJLEdBQUcsU0FBU0EsS0FBS0MsUUFBUTtJQUM1QyxJQUFJQyxTQUFTRDtJQUNiLElBQUssSUFBSUUsUUFBUSxJQUFJLENBQUNMLFNBQVMsQ0FBQ00sTUFBTSxHQUFHLEdBQUdELFNBQVMsR0FBR0EsUUFBUztRQUM3REQsU0FBUyxJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssTUFBTSxDQUFDRSxTQUFTLENBQUNIO0lBQzdDO0lBQ0EsT0FBT0E7QUFDWDtBQUVBLFNBQVNiLFFBQVFDLE9BQU8sRUFBRUMsVUFBVSxFQUFFZSxPQUFPO0lBQ3pDQSxVQUFVQSxXQUFXLENBQUM7SUFDdEIsT0FBTyxJQUFJQyxRQUFRakIsU0FBU0MsWUFBWWU7QUFDNUM7QUFFQSxTQUFTQyxRQUFRakIsT0FBTyxFQUFFQyxVQUFVLEVBQUVlLE9BQU87SUFDekMsSUFBSUUsV0FBVyxDQUFDO0lBQ2hCLElBQUl6QixFQUFFMEIsT0FBTyxDQUFDbkIsVUFBVTtRQUNwQkEsUUFBUW9CLE9BQU8sQ0FBQyxTQUFTcEIsT0FBTztZQUM1QmtCLFFBQVEsQ0FBQ2xCLFFBQVEsR0FBRztRQUN4QjtRQUNBQSxVQUFVQSxPQUFPLENBQUMsRUFBRTtJQUN4QixPQUFPO1FBQ0hrQixRQUFRLENBQUNsQixRQUFRLEdBQUc7SUFDeEI7SUFFQSxJQUFJLENBQUNBLE9BQU8sR0FBR0E7SUFDZixJQUFJLENBQUNrQixRQUFRLEdBQUdBO0lBQ2hCLElBQUksQ0FBQ2pCLFVBQVUsR0FBR0EsY0FBYyxDQUFDO0lBQ2pDLElBQUksQ0FBQ0MsS0FBSyxHQUFHYyxRQUFRZCxLQUFLO0lBQzFCLElBQUksQ0FBQ21CLFNBQVMsR0FBR0wsUUFBUUssU0FBUztBQUN0QztBQUVBSixRQUFRUixTQUFTLENBQUNhLGNBQWMsR0FBRyxTQUFTdkIsT0FBTztJQUMvQyxPQUFPLElBQUksQ0FBQ21CLFFBQVEsQ0FBQ25CLFFBQVFDLE9BQU8sQ0FBQyxJQUFJUCxFQUFFOEIsT0FBTyxDQUFDLElBQUksQ0FBQ3RCLFVBQVUsSUFBSSxDQUFDLEdBQUdGLFFBQVFFLFVBQVUsSUFBSSxDQUFDO0FBQ3JHO0FBRUFnQixRQUFRUixTQUFTLENBQUNDLElBQUksR0FBRyxTQUFTQSxLQUFLYyxhQUFhO0lBQ2hELE9BQU8sSUFBSSxDQUFDVCxTQUFTLENBQUNTO0FBQzFCO0FBRUFQLFFBQVFSLFNBQVMsQ0FBQ00sU0FBUyxHQUFHLFNBQVNBLFVBQVVVLEtBQUs7SUFDbEQsT0FBTztRQUFDOUIsS0FBSytCLGNBQWMsQ0FBQyxJQUFJLEVBQUVEO0tBQU87QUFDN0M7QUFFQTdCLGFBQWEsR0FBR0UsU0FBUyxFQUFFO0FBQzNCRixjQUFjLEdBQUc7SUFDYmMsTUFBTTtRQUNGLE9BQU8sRUFBRTtJQUNiO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL2h0bWwtcGF0aHMuanM/NmVkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgXyA9IHJlcXVpcmUoXCJ1bmRlcnNjb3JlXCIpO1xuXG52YXIgaHRtbCA9IHJlcXVpcmUoXCIuLi9odG1sXCIpO1xuXG5leHBvcnRzLnRvcExldmVsRWxlbWVudCA9IHRvcExldmVsRWxlbWVudDtcbmV4cG9ydHMuZWxlbWVudHMgPSBlbGVtZW50cztcbmV4cG9ydHMuZWxlbWVudCA9IGVsZW1lbnQ7XG5cbmZ1bmN0aW9uIHRvcExldmVsRWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIGVsZW1lbnRzKFtlbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIHtmcmVzaDogdHJ1ZX0pXSk7XG59XG5cbmZ1bmN0aW9uIGVsZW1lbnRzKGVsZW1lbnRTdHlsZXMpIHtcbiAgICByZXR1cm4gbmV3IEh0bWxQYXRoKGVsZW1lbnRTdHlsZXMubWFwKGZ1bmN0aW9uKGVsZW1lbnRTdHlsZSkge1xuICAgICAgICBpZiAoXy5pc1N0cmluZyhlbGVtZW50U3R5bGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudChlbGVtZW50U3R5bGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnRTdHlsZTtcbiAgICAgICAgfVxuICAgIH0pKTtcbn1cblxuZnVuY3Rpb24gSHRtbFBhdGgoZWxlbWVudHMpIHtcbiAgICB0aGlzLl9lbGVtZW50cyA9IGVsZW1lbnRzO1xufVxuXG5IdG1sUGF0aC5wcm90b3R5cGUud3JhcCA9IGZ1bmN0aW9uIHdyYXAoY2hpbGRyZW4pIHtcbiAgICB2YXIgcmVzdWx0ID0gY2hpbGRyZW4oKTtcbiAgICBmb3IgKHZhciBpbmRleCA9IHRoaXMuX2VsZW1lbnRzLmxlbmd0aCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICAgICAgcmVzdWx0ID0gdGhpcy5fZWxlbWVudHNbaW5kZXhdLndyYXBOb2RlcyhyZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuZnVuY3Rpb24gZWxlbWVudCh0YWdOYW1lLCBhdHRyaWJ1dGVzLCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgcmV0dXJuIG5ldyBFbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBFbGVtZW50KHRhZ05hbWUsIGF0dHJpYnV0ZXMsIG9wdGlvbnMpIHtcbiAgICB2YXIgdGFnTmFtZXMgPSB7fTtcbiAgICBpZiAoXy5pc0FycmF5KHRhZ05hbWUpKSB7XG4gICAgICAgIHRhZ05hbWUuZm9yRWFjaChmdW5jdGlvbih0YWdOYW1lKSB7XG4gICAgICAgICAgICB0YWdOYW1lc1t0YWdOYW1lXSA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgICAgICB0YWdOYW1lID0gdGFnTmFtZVswXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0YWdOYW1lc1t0YWdOYW1lXSA9IHRydWU7XG4gICAgfVxuICAgIFxuICAgIHRoaXMudGFnTmFtZSA9IHRhZ05hbWU7XG4gICAgdGhpcy50YWdOYW1lcyA9IHRhZ05hbWVzO1xuICAgIHRoaXMuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXMgfHwge307XG4gICAgdGhpcy5mcmVzaCA9IG9wdGlvbnMuZnJlc2g7XG4gICAgdGhpcy5zZXBhcmF0b3IgPSBvcHRpb25zLnNlcGFyYXRvcjtcbn1cblxuRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlc0VsZW1lbnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgcmV0dXJuIHRoaXMudGFnTmFtZXNbZWxlbWVudC50YWdOYW1lXSAmJiBfLmlzRXF1YWwodGhpcy5hdHRyaWJ1dGVzIHx8IHt9LCBlbGVtZW50LmF0dHJpYnV0ZXMgfHwge30pO1xufTtcblxuRWxlbWVudC5wcm90b3R5cGUud3JhcCA9IGZ1bmN0aW9uIHdyYXAoZ2VuZXJhdGVOb2Rlcykge1xuICAgIHJldHVybiB0aGlzLndyYXBOb2RlcyhnZW5lcmF0ZU5vZGVzKCkpO1xufTtcblxuRWxlbWVudC5wcm90b3R5cGUud3JhcE5vZGVzID0gZnVuY3Rpb24gd3JhcE5vZGVzKG5vZGVzKSB7XG4gICAgcmV0dXJuIFtodG1sLmVsZW1lbnRXaXRoVGFnKHRoaXMsIG5vZGVzKV07XG59O1xuXG5leHBvcnRzLmVtcHR5ID0gZWxlbWVudHMoW10pO1xuZXhwb3J0cy5pZ25vcmUgPSB7XG4gICAgd3JhcDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiaHRtbCIsImV4cG9ydHMiLCJ0b3BMZXZlbEVsZW1lbnQiLCJlbGVtZW50cyIsImVsZW1lbnQiLCJ0YWdOYW1lIiwiYXR0cmlidXRlcyIsImZyZXNoIiwiZWxlbWVudFN0eWxlcyIsIkh0bWxQYXRoIiwibWFwIiwiZWxlbWVudFN0eWxlIiwiaXNTdHJpbmciLCJfZWxlbWVudHMiLCJwcm90b3R5cGUiLCJ3cmFwIiwiY2hpbGRyZW4iLCJyZXN1bHQiLCJpbmRleCIsImxlbmd0aCIsIndyYXBOb2RlcyIsIm9wdGlvbnMiLCJFbGVtZW50IiwidGFnTmFtZXMiLCJpc0FycmF5IiwiZm9yRWFjaCIsInNlcGFyYXRvciIsIm1hdGNoZXNFbGVtZW50IiwiaXNFcXVhbCIsImdlbmVyYXRlTm9kZXMiLCJub2RlcyIsImVsZW1lbnRXaXRoVGFnIiwiZW1wdHkiLCJpZ25vcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/styles/html-paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/styles/parser/tokeniser.js":
/*!*************************************************************!*\
  !*** ./node_modules/mammoth/lib/styles/parser/tokeniser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var lop = __webpack_require__(/*! lop */ \"(ssr)/./node_modules/lop/index.js\");\nvar RegexTokeniser = lop.RegexTokeniser;\nexports.tokenise = tokenise;\nvar stringPrefix = \"'((?:\\\\\\\\.|[^'])*)\";\nfunction tokenise(string) {\n    var identifierCharacter = \"(?:[a-zA-Z\\\\-_]|\\\\\\\\.)\";\n    var tokeniser = new RegexTokeniser([\n        {\n            name: \"identifier\",\n            regex: new RegExp(\"(\" + identifierCharacter + \"(?:\" + identifierCharacter + \"|[0-9])*)\")\n        },\n        {\n            name: \"dot\",\n            regex: /\\./\n        },\n        {\n            name: \"colon\",\n            regex: /:/\n        },\n        {\n            name: \"gt\",\n            regex: />/\n        },\n        {\n            name: \"whitespace\",\n            regex: /\\s+/\n        },\n        {\n            name: \"arrow\",\n            regex: /=>/\n        },\n        {\n            name: \"equals\",\n            regex: /=/\n        },\n        {\n            name: \"startsWith\",\n            regex: /\\^=/\n        },\n        {\n            name: \"open-paren\",\n            regex: /\\(/\n        },\n        {\n            name: \"close-paren\",\n            regex: /\\)/\n        },\n        {\n            name: \"open-square-bracket\",\n            regex: /\\[/\n        },\n        {\n            name: \"close-square-bracket\",\n            regex: /\\]/\n        },\n        {\n            name: \"string\",\n            regex: new RegExp(stringPrefix + \"'\")\n        },\n        {\n            name: \"unterminated-string\",\n            regex: new RegExp(stringPrefix)\n        },\n        {\n            name: \"integer\",\n            regex: /([0-9]+)/\n        },\n        {\n            name: \"choice\",\n            regex: /\\|/\n        },\n        {\n            name: \"bang\",\n            regex: /(!)/\n        }\n    ]);\n    return tokeniser.tokenise(string);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvc3R5bGVzL3BhcnNlci90b2tlbmlzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTUMsbUJBQU9BLENBQUMsOENBQUs7QUFDdkIsSUFBSUMsaUJBQWlCRixJQUFJRSxjQUFjO0FBRXZDQyxnQkFBZ0IsR0FBR0M7QUFFbkIsSUFBSUMsZUFBZTtBQUVuQixTQUFTRCxTQUFTRSxNQUFNO0lBQ3BCLElBQUlDLHNCQUFzQjtJQUMxQixJQUFJQyxZQUFZLElBQUlOLGVBQWU7UUFDL0I7WUFBQ08sTUFBTTtZQUFjQyxPQUFPLElBQUlDLE9BQU8sTUFBTUosc0JBQXNCLFFBQVFBLHNCQUFzQjtRQUFZO1FBQzdHO1lBQUNFLE1BQU07WUFBT0MsT0FBTztRQUFJO1FBQ3pCO1lBQUNELE1BQU07WUFBU0MsT0FBTztRQUFHO1FBQzFCO1lBQUNELE1BQU07WUFBTUMsT0FBTztRQUFHO1FBQ3ZCO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFLO1FBQ2pDO1lBQUNELE1BQU07WUFBU0MsT0FBTztRQUFJO1FBQzNCO1lBQUNELE1BQU07WUFBVUMsT0FBTztRQUFHO1FBQzNCO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFLO1FBQ2pDO1lBQUNELE1BQU07WUFBY0MsT0FBTztRQUFJO1FBQ2hDO1lBQUNELE1BQU07WUFBZUMsT0FBTztRQUFJO1FBQ2pDO1lBQUNELE1BQU07WUFBdUJDLE9BQU87UUFBSTtRQUN6QztZQUFDRCxNQUFNO1lBQXdCQyxPQUFPO1FBQUk7UUFDMUM7WUFBQ0QsTUFBTTtZQUFVQyxPQUFPLElBQUlDLE9BQU9OLGVBQWU7UUFBSTtRQUN0RDtZQUFDSSxNQUFNO1lBQXVCQyxPQUFPLElBQUlDLE9BQU9OO1FBQWE7UUFDN0Q7WUFBQ0ksTUFBTTtZQUFXQyxPQUFPO1FBQVU7UUFDbkM7WUFBQ0QsTUFBTTtZQUFVQyxPQUFPO1FBQUk7UUFDNUI7WUFBQ0QsTUFBTTtZQUFRQyxPQUFPO1FBQUs7S0FDOUI7SUFDRCxPQUFPRixVQUFVSixRQUFRLENBQUNFO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3N0eWxlcy9wYXJzZXIvdG9rZW5pc2VyLmpzPzIzMDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvcCA9IHJlcXVpcmUoXCJsb3BcIik7XG52YXIgUmVnZXhUb2tlbmlzZXIgPSBsb3AuUmVnZXhUb2tlbmlzZXI7XG5cbmV4cG9ydHMudG9rZW5pc2UgPSB0b2tlbmlzZTtcblxudmFyIHN0cmluZ1ByZWZpeCA9IFwiJygoPzpcXFxcXFxcXC58W14nXSkqKVwiO1xuXG5mdW5jdGlvbiB0b2tlbmlzZShzdHJpbmcpIHtcbiAgICB2YXIgaWRlbnRpZmllckNoYXJhY3RlciA9IFwiKD86W2EtekEtWlxcXFwtX118XFxcXFxcXFwuKVwiO1xuICAgIHZhciB0b2tlbmlzZXIgPSBuZXcgUmVnZXhUb2tlbmlzZXIoW1xuICAgICAgICB7bmFtZTogXCJpZGVudGlmaWVyXCIsIHJlZ2V4OiBuZXcgUmVnRXhwKFwiKFwiICsgaWRlbnRpZmllckNoYXJhY3RlciArIFwiKD86XCIgKyBpZGVudGlmaWVyQ2hhcmFjdGVyICsgXCJ8WzAtOV0pKilcIil9LFxuICAgICAgICB7bmFtZTogXCJkb3RcIiwgcmVnZXg6IC9cXC4vfSxcbiAgICAgICAge25hbWU6IFwiY29sb25cIiwgcmVnZXg6IC86L30sXG4gICAgICAgIHtuYW1lOiBcImd0XCIsIHJlZ2V4OiAvPi99LFxuICAgICAgICB7bmFtZTogXCJ3aGl0ZXNwYWNlXCIsIHJlZ2V4OiAvXFxzKy99LFxuICAgICAgICB7bmFtZTogXCJhcnJvd1wiLCByZWdleDogLz0+L30sXG4gICAgICAgIHtuYW1lOiBcImVxdWFsc1wiLCByZWdleDogLz0vfSxcbiAgICAgICAge25hbWU6IFwic3RhcnRzV2l0aFwiLCByZWdleDogL1xcXj0vfSxcbiAgICAgICAge25hbWU6IFwib3Blbi1wYXJlblwiLCByZWdleDogL1xcKC99LFxuICAgICAgICB7bmFtZTogXCJjbG9zZS1wYXJlblwiLCByZWdleDogL1xcKS99LFxuICAgICAgICB7bmFtZTogXCJvcGVuLXNxdWFyZS1icmFja2V0XCIsIHJlZ2V4OiAvXFxbL30sXG4gICAgICAgIHtuYW1lOiBcImNsb3NlLXNxdWFyZS1icmFja2V0XCIsIHJlZ2V4OiAvXFxdL30sXG4gICAgICAgIHtuYW1lOiBcInN0cmluZ1wiLCByZWdleDogbmV3IFJlZ0V4cChzdHJpbmdQcmVmaXggKyBcIidcIil9LFxuICAgICAgICB7bmFtZTogXCJ1bnRlcm1pbmF0ZWQtc3RyaW5nXCIsIHJlZ2V4OiBuZXcgUmVnRXhwKHN0cmluZ1ByZWZpeCl9LFxuICAgICAgICB7bmFtZTogXCJpbnRlZ2VyXCIsIHJlZ2V4OiAvKFswLTldKykvfSxcbiAgICAgICAge25hbWU6IFwiY2hvaWNlXCIsIHJlZ2V4OiAvXFx8L30sXG4gICAgICAgIHtuYW1lOiBcImJhbmdcIiwgcmVnZXg6IC8oISkvfVxuICAgIF0pO1xuICAgIHJldHVybiB0b2tlbmlzZXIudG9rZW5pc2Uoc3RyaW5nKTtcbn1cbiJdLCJuYW1lcyI6WyJsb3AiLCJyZXF1aXJlIiwiUmVnZXhUb2tlbmlzZXIiLCJleHBvcnRzIiwidG9rZW5pc2UiLCJzdHJpbmdQcmVmaXgiLCJzdHJpbmciLCJpZGVudGlmaWVyQ2hhcmFjdGVyIiwidG9rZW5pc2VyIiwibmFtZSIsInJlZ2V4IiwiUmVnRXhwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/styles/parser/tokeniser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/transforms.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/transforms.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nexports.paragraph = paragraph;\nexports.run = run;\nexports._elements = elements;\nexports.getDescendantsOfType = getDescendantsOfType;\nexports.getDescendants = getDescendants;\nfunction paragraph(transform) {\n    return elementsOfType(\"paragraph\", transform);\n}\nfunction run(transform) {\n    return elementsOfType(\"run\", transform);\n}\nfunction elementsOfType(elementType, transform) {\n    return elements(function(element) {\n        if (element.type === elementType) {\n            return transform(element);\n        } else {\n            return element;\n        }\n    });\n}\nfunction elements(transform) {\n    return function transformElement(element) {\n        if (element.children) {\n            var children = _.map(element.children, transformElement);\n            element = _.extend(element, {\n                children: children\n            });\n        }\n        return transform(element);\n    };\n}\nfunction getDescendantsOfType(element, type) {\n    return getDescendants(element).filter(function(descendant) {\n        return descendant.type === type;\n    });\n}\nfunction getDescendants(element) {\n    var descendants = [];\n    visitDescendants(element, function(descendant) {\n        descendants.push(descendant);\n    });\n    return descendants;\n}\nfunction visitDescendants(element, visit) {\n    if (element.children) {\n        element.children.forEach(function(child) {\n            visitDescendants(child, visit);\n            visit(child);\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QkMsaUJBQWlCLEdBQUdDO0FBQ3BCRCxXQUFXLEdBQUdFO0FBQ2RGLGlCQUFpQixHQUFHSTtBQUNwQkosNEJBQTRCLEdBQUdLO0FBQy9CTCxzQkFBc0IsR0FBR007QUFFekIsU0FBU0wsVUFBVU0sU0FBUztJQUN4QixPQUFPQyxlQUFlLGFBQWFEO0FBQ3ZDO0FBRUEsU0FBU0wsSUFBSUssU0FBUztJQUNsQixPQUFPQyxlQUFlLE9BQU9EO0FBQ2pDO0FBRUEsU0FBU0MsZUFBZUMsV0FBVyxFQUFFRixTQUFTO0lBQzFDLE9BQU9ILFNBQVMsU0FBU00sT0FBTztRQUM1QixJQUFJQSxRQUFRQyxJQUFJLEtBQUtGLGFBQWE7WUFDOUIsT0FBT0YsVUFBVUc7UUFDckIsT0FBTztZQUNILE9BQU9BO1FBQ1g7SUFDSjtBQUNKO0FBRUEsU0FBU04sU0FBU0csU0FBUztJQUN2QixPQUFPLFNBQVNLLGlCQUFpQkYsT0FBTztRQUNwQyxJQUFJQSxRQUFRRyxRQUFRLEVBQUU7WUFDbEIsSUFBSUEsV0FBV2YsRUFBRWdCLEdBQUcsQ0FBQ0osUUFBUUcsUUFBUSxFQUFFRDtZQUN2Q0YsVUFBVVosRUFBRWlCLE1BQU0sQ0FBQ0wsU0FBUztnQkFBQ0csVUFBVUE7WUFBUTtRQUNuRDtRQUNBLE9BQU9OLFVBQVVHO0lBQ3JCO0FBQ0o7QUFHQSxTQUFTTCxxQkFBcUJLLE9BQU8sRUFBRUMsSUFBSTtJQUN2QyxPQUFPTCxlQUFlSSxTQUFTTSxNQUFNLENBQUMsU0FBU0MsVUFBVTtRQUNyRCxPQUFPQSxXQUFXTixJQUFJLEtBQUtBO0lBQy9CO0FBQ0o7QUFFQSxTQUFTTCxlQUFlSSxPQUFPO0lBQzNCLElBQUlRLGNBQWMsRUFBRTtJQUVwQkMsaUJBQWlCVCxTQUFTLFNBQVNPLFVBQVU7UUFDekNDLFlBQVlFLElBQUksQ0FBQ0g7SUFDckI7SUFFQSxPQUFPQztBQUNYO0FBRUEsU0FBU0MsaUJBQWlCVCxPQUFPLEVBQUVXLEtBQUs7SUFDcEMsSUFBSVgsUUFBUUcsUUFBUSxFQUFFO1FBQ2xCSCxRQUFRRyxRQUFRLENBQUNTLE9BQU8sQ0FBQyxTQUFTQyxLQUFLO1lBQ25DSixpQkFBaUJJLE9BQU9GO1lBQ3hCQSxNQUFNRTtRQUNWO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi90cmFuc2Zvcm1zLmpzPzk0NjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF8gPSByZXF1aXJlKFwidW5kZXJzY29yZVwiKTtcblxuZXhwb3J0cy5wYXJhZ3JhcGggPSBwYXJhZ3JhcGg7XG5leHBvcnRzLnJ1biA9IHJ1bjtcbmV4cG9ydHMuX2VsZW1lbnRzID0gZWxlbWVudHM7XG5leHBvcnRzLmdldERlc2NlbmRhbnRzT2ZUeXBlID0gZ2V0RGVzY2VuZGFudHNPZlR5cGU7XG5leHBvcnRzLmdldERlc2NlbmRhbnRzID0gZ2V0RGVzY2VuZGFudHM7XG5cbmZ1bmN0aW9uIHBhcmFncmFwaCh0cmFuc2Zvcm0pIHtcbiAgICByZXR1cm4gZWxlbWVudHNPZlR5cGUoXCJwYXJhZ3JhcGhcIiwgdHJhbnNmb3JtKTtcbn1cblxuZnVuY3Rpb24gcnVuKHRyYW5zZm9ybSkge1xuICAgIHJldHVybiBlbGVtZW50c09mVHlwZShcInJ1blwiLCB0cmFuc2Zvcm0pO1xufVxuXG5mdW5jdGlvbiBlbGVtZW50c09mVHlwZShlbGVtZW50VHlwZSwgdHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIGVsZW1lbnRzKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQudHlwZSA9PT0gZWxlbWVudFR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0oZWxlbWVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBlbGVtZW50cyh0cmFuc2Zvcm0pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gdHJhbnNmb3JtRWxlbWVudChlbGVtZW50KSB7XG4gICAgICAgIGlmIChlbGVtZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBfLm1hcChlbGVtZW50LmNoaWxkcmVuLCB0cmFuc2Zvcm1FbGVtZW50KTtcbiAgICAgICAgICAgIGVsZW1lbnQgPSBfLmV4dGVuZChlbGVtZW50LCB7Y2hpbGRyZW46IGNoaWxkcmVufSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybShlbGVtZW50KTtcbiAgICB9O1xufVxuXG5cbmZ1bmN0aW9uIGdldERlc2NlbmRhbnRzT2ZUeXBlKGVsZW1lbnQsIHR5cGUpIHtcbiAgICByZXR1cm4gZ2V0RGVzY2VuZGFudHMoZWxlbWVudCkuZmlsdGVyKGZ1bmN0aW9uKGRlc2NlbmRhbnQpIHtcbiAgICAgICAgcmV0dXJuIGRlc2NlbmRhbnQudHlwZSA9PT0gdHlwZTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0RGVzY2VuZGFudHMoZWxlbWVudCkge1xuICAgIHZhciBkZXNjZW5kYW50cyA9IFtdO1xuXG4gICAgdmlzaXREZXNjZW5kYW50cyhlbGVtZW50LCBmdW5jdGlvbihkZXNjZW5kYW50KSB7XG4gICAgICAgIGRlc2NlbmRhbnRzLnB1c2goZGVzY2VuZGFudCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVzY2VuZGFudHM7XG59XG5cbmZ1bmN0aW9uIHZpc2l0RGVzY2VuZGFudHMoZWxlbWVudCwgdmlzaXQpIHtcbiAgICBpZiAoZWxlbWVudC5jaGlsZHJlbikge1xuICAgICAgICBlbGVtZW50LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgICAgIHZpc2l0RGVzY2VuZGFudHMoY2hpbGQsIHZpc2l0KTtcbiAgICAgICAgICAgIHZpc2l0KGNoaWxkKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwiZXhwb3J0cyIsInBhcmFncmFwaCIsInJ1biIsIl9lbGVtZW50cyIsImVsZW1lbnRzIiwiZ2V0RGVzY2VuZGFudHNPZlR5cGUiLCJnZXREZXNjZW5kYW50cyIsInRyYW5zZm9ybSIsImVsZW1lbnRzT2ZUeXBlIiwiZWxlbWVudFR5cGUiLCJlbGVtZW50IiwidHlwZSIsInRyYW5zZm9ybUVsZW1lbnQiLCJjaGlsZHJlbiIsIm1hcCIsImV4dGVuZCIsImZpbHRlciIsImRlc2NlbmRhbnQiLCJkZXNjZW5kYW50cyIsInZpc2l0RGVzY2VuZGFudHMiLCJwdXNoIiwidmlzaXQiLCJmb3JFYWNoIiwiY2hpbGQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/transforms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/underline.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/underline.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlPaths = __webpack_require__(/*! ./styles/html-paths */ \"(ssr)/./node_modules/mammoth/lib/styles/html-paths.js\");\nvar Html = __webpack_require__(/*! ./html */ \"(ssr)/./node_modules/mammoth/lib/html/index.js\");\nexports.element = element;\nfunction element(name) {\n    return function(html) {\n        return Html.elementWithTag(htmlPaths.element(name), [\n            html\n        ]);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW5kZXJsaW5lLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGtGQUFxQjtBQUM3QyxJQUFJQyxPQUFPRCxtQkFBT0EsQ0FBQyw4REFBUTtBQUczQkUsZUFBZSxHQUFHQztBQUVsQixTQUFTQSxRQUFRQyxJQUFJO0lBQ2pCLE9BQU8sU0FBU0MsSUFBSTtRQUNoQixPQUFPSixLQUFLSyxjQUFjLENBQUNQLFVBQVVJLE9BQU8sQ0FBQ0MsT0FBTztZQUFDQztTQUFLO0lBQzlEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW5kZXJsaW5lLmpzPzM0ODUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGh0bWxQYXRocyA9IHJlcXVpcmUoXCIuL3N0eWxlcy9odG1sLXBhdGhzXCIpO1xudmFyIEh0bWwgPSByZXF1aXJlKFwiLi9odG1sXCIpO1xuXG5cbmV4cG9ydHMuZWxlbWVudCA9IGVsZW1lbnQ7XG5cbmZ1bmN0aW9uIGVsZW1lbnQobmFtZSkge1xuICAgIHJldHVybiBmdW5jdGlvbihodG1sKSB7XG4gICAgICAgIHJldHVybiBIdG1sLmVsZW1lbnRXaXRoVGFnKGh0bWxQYXRocy5lbGVtZW50KG5hbWUpLCBbaHRtbF0pO1xuICAgIH07XG59XG4iXSwibmFtZXMiOlsiaHRtbFBhdGhzIiwicmVxdWlyZSIsIkh0bWwiLCJleHBvcnRzIiwiZWxlbWVudCIsIm5hbWUiLCJodG1sIiwiZWxlbWVudFdpdGhUYWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/underline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/unzip.js":
/*!*******************************************!*\
  !*** ./node_modules/mammoth/lib/unzip.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var fs = __webpack_require__(/*! fs */ \"fs\");\nvar promises = __webpack_require__(/*! ./promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar zipfile = __webpack_require__(/*! ./zipfile */ \"(ssr)/./node_modules/mammoth/lib/zipfile.js\");\nexports.openZip = openZip;\nvar readFile = promises.promisify(fs.readFile);\nfunction openZip(options) {\n    if (options.path) {\n        return readFile(options.path).then(zipfile.openArrayBuffer);\n    } else if (options.buffer) {\n        return promises.resolve(zipfile.openArrayBuffer(options.buffer));\n    } else if (options.file) {\n        return promises.resolve(options.file);\n    } else {\n        return promises.reject(new Error(\"Could not find file in options\"));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW56aXAuanMiLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsS0FBS0MsbUJBQU9BLENBQUMsY0FBSTtBQUVyQixJQUFJQyxXQUFXRCxtQkFBT0EsQ0FBQyxnRUFBWTtBQUNuQyxJQUFJRSxVQUFVRixtQkFBT0EsQ0FBQyw4REFBVztBQUVqQ0csZUFBZSxHQUFHQztBQUVsQixJQUFJQyxXQUFXSixTQUFTSyxTQUFTLENBQUNQLEdBQUdNLFFBQVE7QUFFN0MsU0FBU0QsUUFBUUcsT0FBTztJQUNwQixJQUFJQSxRQUFRQyxJQUFJLEVBQUU7UUFDZCxPQUFPSCxTQUFTRSxRQUFRQyxJQUFJLEVBQUVDLElBQUksQ0FBQ1AsUUFBUVEsZUFBZTtJQUM5RCxPQUFPLElBQUlILFFBQVFJLE1BQU0sRUFBRTtRQUN2QixPQUFPVixTQUFTVyxPQUFPLENBQUNWLFFBQVFRLGVBQWUsQ0FBQ0gsUUFBUUksTUFBTTtJQUNsRSxPQUFPLElBQUlKLFFBQVFNLElBQUksRUFBRTtRQUNyQixPQUFPWixTQUFTVyxPQUFPLENBQUNMLFFBQVFNLElBQUk7SUFDeEMsT0FBTztRQUNILE9BQU9aLFNBQVNhLE1BQU0sQ0FBQyxJQUFJQyxNQUFNO0lBQ3JDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvdW56aXAuanM/M2NlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnMgPSByZXF1aXJlKFwiZnNcIik7XG5cbnZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuL3Byb21pc2VzXCIpO1xudmFyIHppcGZpbGUgPSByZXF1aXJlKFwiLi96aXBmaWxlXCIpO1xuXG5leHBvcnRzLm9wZW5aaXAgPSBvcGVuWmlwO1xuXG52YXIgcmVhZEZpbGUgPSBwcm9taXNlcy5wcm9taXNpZnkoZnMucmVhZEZpbGUpO1xuXG5mdW5jdGlvbiBvcGVuWmlwKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucy5wYXRoKSB7XG4gICAgICAgIHJldHVybiByZWFkRmlsZShvcHRpb25zLnBhdGgpLnRoZW4oemlwZmlsZS5vcGVuQXJyYXlCdWZmZXIpO1xuICAgIH0gZWxzZSBpZiAob3B0aW9ucy5idWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2VzLnJlc29sdmUoemlwZmlsZS5vcGVuQXJyYXlCdWZmZXIob3B0aW9ucy5idWZmZXIpKTtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMuZmlsZSkge1xuICAgICAgICByZXR1cm4gcHJvbWlzZXMucmVzb2x2ZShvcHRpb25zLmZpbGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBwcm9taXNlcy5yZWplY3QobmV3IEVycm9yKFwiQ291bGQgbm90IGZpbmQgZmlsZSBpbiBvcHRpb25zXCIpKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicHJvbWlzZXMiLCJ6aXBmaWxlIiwiZXhwb3J0cyIsIm9wZW5aaXAiLCJyZWFkRmlsZSIsInByb21pc2lmeSIsIm9wdGlvbnMiLCJwYXRoIiwidGhlbiIsIm9wZW5BcnJheUJ1ZmZlciIsImJ1ZmZlciIsInJlc29sdmUiLCJmaWxlIiwicmVqZWN0IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/unzip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/writers/html-writer.js":
/*!*********************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/html-writer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nexports.writer = writer;\nfunction writer(options) {\n    options = options || {};\n    if (options.prettyPrint) {\n        return prettyWriter();\n    } else {\n        return simpleWriter();\n    }\n}\nvar indentedElements = {\n    div: true,\n    p: true,\n    ul: true,\n    li: true\n};\nfunction prettyWriter() {\n    var indentationLevel = 0;\n    var indentation = \"  \";\n    var stack = [];\n    var start = true;\n    var inText = false;\n    var writer = simpleWriter();\n    function open(tagName, attributes) {\n        if (indentedElements[tagName]) {\n            indent();\n        }\n        stack.push(tagName);\n        writer.open(tagName, attributes);\n        if (indentedElements[tagName]) {\n            indentationLevel++;\n        }\n        start = false;\n    }\n    function close(tagName) {\n        if (indentedElements[tagName]) {\n            indentationLevel--;\n            indent();\n        }\n        stack.pop();\n        writer.close(tagName);\n    }\n    function text(value) {\n        startText();\n        var text = isInPre() ? value : value.replace(\"\\n\", \"\\n\" + indentation);\n        writer.text(text);\n    }\n    function selfClosing(tagName, attributes) {\n        indent();\n        writer.selfClosing(tagName, attributes);\n    }\n    function insideIndentedElement() {\n        return stack.length === 0 || indentedElements[stack[stack.length - 1]];\n    }\n    function startText() {\n        if (!inText) {\n            indent();\n            inText = true;\n        }\n    }\n    function indent() {\n        inText = false;\n        if (!start && insideIndentedElement() && !isInPre()) {\n            writer._append(\"\\n\");\n            for(var i = 0; i < indentationLevel; i++){\n                writer._append(indentation);\n            }\n        }\n    }\n    function isInPre() {\n        return _.some(stack, function(tagName) {\n            return tagName === \"pre\";\n        });\n    }\n    return {\n        asString: writer.asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing\n    };\n}\nfunction simpleWriter() {\n    var fragments = [];\n    function open(tagName, attributes) {\n        var attributeString = generateAttributeString(attributes);\n        fragments.push(\"<\" + tagName + attributeString + \">\");\n    }\n    function close(tagName) {\n        fragments.push(\"</\" + tagName + \">\");\n    }\n    function selfClosing(tagName, attributes) {\n        var attributeString = generateAttributeString(attributes);\n        fragments.push(\"<\" + tagName + attributeString + \" />\");\n    }\n    function generateAttributeString(attributes) {\n        return _.map(attributes, function(value, key) {\n            return \" \" + key + '=\"' + escapeHtmlAttribute(value) + '\"';\n        }).join(\"\");\n    }\n    function text(value) {\n        fragments.push(escapeHtmlText(value));\n    }\n    function append(html) {\n        fragments.push(html);\n    }\n    function asString() {\n        return fragments.join(\"\");\n    }\n    return {\n        asString: asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing,\n        _append: append\n    };\n}\nfunction escapeHtmlText(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\nfunction escapeHtmlAttribute(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/writers/html-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/writers/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var htmlWriter = __webpack_require__(/*! ./html-writer */ \"(ssr)/./node_modules/mammoth/lib/writers/html-writer.js\");\nvar markdownWriter = __webpack_require__(/*! ./markdown-writer */ \"(ssr)/./node_modules/mammoth/lib/writers/markdown-writer.js\");\nexports.writer = writer;\nfunction writer(options) {\n    options = options || {};\n    if (options.outputFormat === \"markdown\") {\n        return markdownWriter.writer();\n    } else {\n        return htmlWriter.writer(options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvd3JpdGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQyw4RUFBZTtBQUN4QyxJQUFJQyxpQkFBaUJELG1CQUFPQSxDQUFDLHNGQUFtQjtBQUVoREUsY0FBYyxHQUFHQztBQUdqQixTQUFTQSxPQUFPQyxPQUFPO0lBQ25CQSxVQUFVQSxXQUFXLENBQUM7SUFDdEIsSUFBSUEsUUFBUUMsWUFBWSxLQUFLLFlBQVk7UUFDckMsT0FBT0osZUFBZUUsTUFBTTtJQUNoQyxPQUFPO1FBQ0gsT0FBT0osV0FBV0ksTUFBTSxDQUFDQztJQUM3QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3dyaXRlcnMvaW5kZXguanM/MTNiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaHRtbFdyaXRlciA9IHJlcXVpcmUoXCIuL2h0bWwtd3JpdGVyXCIpO1xudmFyIG1hcmtkb3duV3JpdGVyID0gcmVxdWlyZShcIi4vbWFya2Rvd24td3JpdGVyXCIpO1xuXG5leHBvcnRzLndyaXRlciA9IHdyaXRlcjtcblxuXG5mdW5jdGlvbiB3cml0ZXIob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmIChvcHRpb25zLm91dHB1dEZvcm1hdCA9PT0gXCJtYXJrZG93blwiKSB7XG4gICAgICAgIHJldHVybiBtYXJrZG93bldyaXRlci53cml0ZXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gaHRtbFdyaXRlci53cml0ZXIob3B0aW9ucyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImh0bWxXcml0ZXIiLCJyZXF1aXJlIiwibWFya2Rvd25Xcml0ZXIiLCJleHBvcnRzIiwid3JpdGVyIiwib3B0aW9ucyIsIm91dHB1dEZvcm1hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/writers/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/writers/markdown-writer.js":
/*!*************************************************************!*\
  !*** ./node_modules/mammoth/lib/writers/markdown-writer.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nfunction symmetricMarkdownElement(end) {\n    return markdownElement(end, end);\n}\nfunction markdownElement(start, end) {\n    return function() {\n        return {\n            start: start,\n            end: end\n        };\n    };\n}\nfunction markdownLink(attributes) {\n    var href = attributes.href || \"\";\n    if (href) {\n        return {\n            start: \"[\",\n            end: \"](\" + href + \")\",\n            anchorPosition: \"before\"\n        };\n    } else {\n        return {};\n    }\n}\nfunction markdownImage(attributes) {\n    var src = attributes.src || \"\";\n    var altText = attributes.alt || \"\";\n    if (src || altText) {\n        return {\n            start: \"![\" + altText + \"](\" + src + \")\"\n        };\n    } else {\n        return {};\n    }\n}\nfunction markdownList(options) {\n    return function(attributes, list) {\n        return {\n            start: list ? \"\\n\" : \"\",\n            end: list ? \"\" : \"\\n\",\n            list: {\n                isOrdered: options.isOrdered,\n                indent: list ? list.indent + 1 : 0,\n                count: 0\n            }\n        };\n    };\n}\nfunction markdownListItem(attributes, list, listItem) {\n    list = list || {\n        indent: 0,\n        isOrdered: false,\n        count: 0\n    };\n    list.count++;\n    listItem.hasClosed = false;\n    var bullet = list.isOrdered ? list.count + \".\" : \"-\";\n    var start = repeatString(\"\t\", list.indent) + bullet + \" \";\n    return {\n        start: start,\n        end: function() {\n            if (!listItem.hasClosed) {\n                listItem.hasClosed = true;\n                return \"\\n\";\n            }\n        }\n    };\n}\nvar htmlToMarkdown = {\n    \"p\": markdownElement(\"\", \"\\n\\n\"),\n    \"br\": markdownElement(\"\", \"  \\n\"),\n    \"ul\": markdownList({\n        isOrdered: false\n    }),\n    \"ol\": markdownList({\n        isOrdered: true\n    }),\n    \"li\": markdownListItem,\n    \"strong\": symmetricMarkdownElement(\"__\"),\n    \"em\": symmetricMarkdownElement(\"*\"),\n    \"a\": markdownLink,\n    \"img\": markdownImage\n};\n(function() {\n    for(var i = 1; i <= 6; i++){\n        htmlToMarkdown[\"h\" + i] = markdownElement(repeatString(\"#\", i) + \" \", \"\\n\\n\");\n    }\n})();\nfunction repeatString(value, count) {\n    return new Array(count + 1).join(value);\n}\nfunction markdownWriter() {\n    var fragments = [];\n    var elementStack = [];\n    var list = null;\n    var listItem = {};\n    function open(tagName, attributes) {\n        attributes = attributes || {};\n        var createElement = htmlToMarkdown[tagName] || function() {\n            return {};\n        };\n        var element = createElement(attributes, list, listItem);\n        elementStack.push({\n            end: element.end,\n            list: list\n        });\n        if (element.list) {\n            list = element.list;\n        }\n        var anchorBeforeStart = element.anchorPosition === \"before\";\n        if (anchorBeforeStart) {\n            writeAnchor(attributes);\n        }\n        fragments.push(element.start || \"\");\n        if (!anchorBeforeStart) {\n            writeAnchor(attributes);\n        }\n    }\n    function writeAnchor(attributes) {\n        if (attributes.id) {\n            fragments.push('<a id=\"' + attributes.id + '\"></a>');\n        }\n    }\n    function close(tagName) {\n        var element = elementStack.pop();\n        list = element.list;\n        var end = _.isFunction(element.end) ? element.end() : element.end;\n        fragments.push(end || \"\");\n    }\n    function selfClosing(tagName, attributes) {\n        open(tagName, attributes);\n        close(tagName);\n    }\n    function text(value) {\n        fragments.push(escapeMarkdown(value));\n    }\n    function asString() {\n        return fragments.join(\"\");\n    }\n    return {\n        asString: asString,\n        open: open,\n        close: close,\n        text: text,\n        selfClosing: selfClosing\n    };\n}\nexports.writer = markdownWriter;\nfunction escapeMarkdown(value) {\n    return value.replace(/\\\\/g, \"\\\\\\\\\").replace(/([\\`\\*_\\{\\}\\[\\]\\(\\)\\#\\+\\-\\.\\!])/g, \"\\\\$1\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/writers/markdown-writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/xml/index.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/xml/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var nodes = __webpack_require__(/*! ./nodes */ \"(ssr)/./node_modules/mammoth/lib/xml/nodes.js\");\nexports.Element = nodes.Element;\nexports.element = nodes.element;\nexports.emptyElement = nodes.emptyElement;\nexports.text = nodes.text;\nexports.readString = __webpack_require__(/*! ./reader */ \"(ssr)/./node_modules/mammoth/lib/xml/reader.js\").readString;\nexports.writeString = __webpack_require__(/*! ./writer */ \"(ssr)/./node_modules/mammoth/lib/xml/writer.js\").writeString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDLDhEQUFTO0FBRTdCQyxlQUFlLEdBQUdGLE1BQU1HLE9BQU87QUFDL0JELGVBQWUsR0FBR0YsTUFBTUksT0FBTztBQUMvQkYsb0JBQW9CLEdBQUdGLE1BQU1LLFlBQVk7QUFDekNILFlBQVksR0FBR0YsTUFBTU0sSUFBSTtBQUN6QkoscUhBQW1EO0FBQ25EQSx1SEFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL2luZGV4LmpzPzdjNjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vZGVzID0gcmVxdWlyZShcIi4vbm9kZXNcIik7XG5cbmV4cG9ydHMuRWxlbWVudCA9IG5vZGVzLkVsZW1lbnQ7XG5leHBvcnRzLmVsZW1lbnQgPSBub2Rlcy5lbGVtZW50O1xuZXhwb3J0cy5lbXB0eUVsZW1lbnQgPSBub2Rlcy5lbXB0eUVsZW1lbnQ7XG5leHBvcnRzLnRleHQgPSBub2Rlcy50ZXh0O1xuZXhwb3J0cy5yZWFkU3RyaW5nID0gcmVxdWlyZShcIi4vcmVhZGVyXCIpLnJlYWRTdHJpbmc7XG5leHBvcnRzLndyaXRlU3RyaW5nID0gcmVxdWlyZShcIi4vd3JpdGVyXCIpLndyaXRlU3RyaW5nO1xuIl0sIm5hbWVzIjpbIm5vZGVzIiwicmVxdWlyZSIsImV4cG9ydHMiLCJFbGVtZW50IiwiZWxlbWVudCIsImVtcHR5RWxlbWVudCIsInRleHQiLCJyZWFkU3RyaW5nIiwid3JpdGVTdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/xml/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/xml/nodes.js":
/*!***********************************************!*\
  !*** ./node_modules/mammoth/lib/xml/nodes.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nexports.Element = Element;\nexports.element = function(name, attributes, children) {\n    return new Element(name, attributes, children);\n};\nexports.text = function(value) {\n    return {\n        type: \"text\",\n        value: value\n    };\n};\nvar emptyElement = exports.emptyElement = {\n    first: function() {\n        return null;\n    },\n    firstOrEmpty: function() {\n        return emptyElement;\n    },\n    attributes: {},\n    children: []\n};\nfunction Element(name, attributes, children) {\n    this.type = \"element\";\n    this.name = name;\n    this.attributes = attributes || {};\n    this.children = children || [];\n}\nElement.prototype.first = function(name) {\n    return _.find(this.children, function(child) {\n        return child.name === name;\n    });\n};\nElement.prototype.firstOrEmpty = function(name) {\n    return this.first(name) || emptyElement;\n};\nElement.prototype.getElementsByTagName = function(name) {\n    var elements = _.filter(this.children, function(child) {\n        return child.name === name;\n    });\n    return toElementList(elements);\n};\nElement.prototype.text = function() {\n    if (this.children.length === 0) {\n        return \"\";\n    } else if (this.children.length !== 1 || this.children[0].type !== \"text\") {\n        throw new Error(\"Not implemented\");\n    }\n    return this.children[0].value;\n};\nvar elementListPrototype = {\n    getElementsByTagName: function(name) {\n        return toElementList(_.flatten(this.map(function(element) {\n            return element.getElementsByTagName(name);\n        }, true)));\n    }\n};\nfunction toElementList(array) {\n    return _.extend(array, elementListPrototype);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL25vZGVzLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLElBQUlDLG1CQUFPQSxDQUFDLHdFQUFZO0FBRzVCQyxlQUFlLEdBQUdDO0FBQ2xCRCxlQUFlLEdBQUcsU0FBU0csSUFBSSxFQUFFQyxVQUFVLEVBQUVDLFFBQVE7SUFDakQsT0FBTyxJQUFJSixRQUFRRSxNQUFNQyxZQUFZQztBQUN6QztBQUNBTCxZQUFZLEdBQUcsU0FBU08sS0FBSztJQUN6QixPQUFPO1FBQ0hDLE1BQU07UUFDTkQsT0FBT0E7SUFDWDtBQUNKO0FBR0EsSUFBSUUsZUFBZVQsb0JBQW9CLEdBQUc7SUFDdENVLE9BQU87UUFDSCxPQUFPO0lBQ1g7SUFDQUMsY0FBYztRQUNWLE9BQU9GO0lBQ1g7SUFDQUwsWUFBWSxDQUFDO0lBQ2JDLFVBQVUsRUFBRTtBQUNoQjtBQUVBLFNBQVNKLFFBQVFFLElBQUksRUFBRUMsVUFBVSxFQUFFQyxRQUFRO0lBQ3ZDLElBQUksQ0FBQ0csSUFBSSxHQUFHO0lBQ1osSUFBSSxDQUFDTCxJQUFJLEdBQUdBO0lBQ1osSUFBSSxDQUFDQyxVQUFVLEdBQUdBLGNBQWMsQ0FBQztJQUNqQyxJQUFJLENBQUNDLFFBQVEsR0FBR0EsWUFBWSxFQUFFO0FBQ2xDO0FBRUFKLFFBQVFXLFNBQVMsQ0FBQ0YsS0FBSyxHQUFHLFNBQVNQLElBQUk7SUFDbkMsT0FBT0wsRUFBRWUsSUFBSSxDQUFDLElBQUksQ0FBQ1IsUUFBUSxFQUFFLFNBQVNTLEtBQUs7UUFDdkMsT0FBT0EsTUFBTVgsSUFBSSxLQUFLQTtJQUMxQjtBQUNKO0FBRUFGLFFBQVFXLFNBQVMsQ0FBQ0QsWUFBWSxHQUFHLFNBQVNSLElBQUk7SUFDMUMsT0FBTyxJQUFJLENBQUNPLEtBQUssQ0FBQ1AsU0FBU007QUFDL0I7QUFFQVIsUUFBUVcsU0FBUyxDQUFDRyxvQkFBb0IsR0FBRyxTQUFTWixJQUFJO0lBQ2xELElBQUlhLFdBQVdsQixFQUFFbUIsTUFBTSxDQUFDLElBQUksQ0FBQ1osUUFBUSxFQUFFLFNBQVNTLEtBQUs7UUFDakQsT0FBT0EsTUFBTVgsSUFBSSxLQUFLQTtJQUMxQjtJQUNBLE9BQU9lLGNBQWNGO0FBQ3pCO0FBRUFmLFFBQVFXLFNBQVMsQ0FBQ04sSUFBSSxHQUFHO0lBQ3JCLElBQUksSUFBSSxDQUFDRCxRQUFRLENBQUNjLE1BQU0sS0FBSyxHQUFHO1FBQzVCLE9BQU87SUFDWCxPQUFPLElBQUksSUFBSSxDQUFDZCxRQUFRLENBQUNjLE1BQU0sS0FBSyxLQUFLLElBQUksQ0FBQ2QsUUFBUSxDQUFDLEVBQUUsQ0FBQ0csSUFBSSxLQUFLLFFBQVE7UUFDdkUsTUFBTSxJQUFJWSxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJLENBQUNmLFFBQVEsQ0FBQyxFQUFFLENBQUNFLEtBQUs7QUFDakM7QUFFQSxJQUFJYyx1QkFBdUI7SUFDdkJOLHNCQUFzQixTQUFTWixJQUFJO1FBQy9CLE9BQU9lLGNBQWNwQixFQUFFd0IsT0FBTyxDQUFDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLFNBQVNyQixPQUFPO1lBQ3BELE9BQU9BLFFBQVFhLG9CQUFvQixDQUFDWjtRQUN4QyxHQUFHO0lBQ1A7QUFDSjtBQUVBLFNBQVNlLGNBQWNNLEtBQUs7SUFDeEIsT0FBTzFCLEVBQUUyQixNQUFNLENBQUNELE9BQU9IO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3htbC9ub2Rlcy5qcz85YjgxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG5cblxuZXhwb3J0cy5FbGVtZW50ID0gRWxlbWVudDtcbmV4cG9ydHMuZWxlbWVudCA9IGZ1bmN0aW9uKG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIG5ldyBFbGVtZW50KG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuKTtcbn07XG5leHBvcnRzLnRleHQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICB9O1xufTtcblxuXG52YXIgZW1wdHlFbGVtZW50ID0gZXhwb3J0cy5lbXB0eUVsZW1lbnQgPSB7XG4gICAgZmlyc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIGZpcnN0T3JFbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBlbXB0eUVsZW1lbnQ7XG4gICAgfSxcbiAgICBhdHRyaWJ1dGVzOiB7fSxcbiAgICBjaGlsZHJlbjogW11cbn07XG5cbmZ1bmN0aW9uIEVsZW1lbnQobmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4pIHtcbiAgICB0aGlzLnR5cGUgPSBcImVsZW1lbnRcIjtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXMgfHwge307XG4gICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuIHx8IFtdO1xufVxuXG5FbGVtZW50LnByb3RvdHlwZS5maXJzdCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICByZXR1cm4gXy5maW5kKHRoaXMuY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIHJldHVybiBjaGlsZC5uYW1lID09PSBuYW1lO1xuICAgIH0pO1xufTtcblxuRWxlbWVudC5wcm90b3R5cGUuZmlyc3RPckVtcHR5ID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiB0aGlzLmZpcnN0KG5hbWUpIHx8IGVtcHR5RWxlbWVudDtcbn07XG5cbkVsZW1lbnQucHJvdG90eXBlLmdldEVsZW1lbnRzQnlUYWdOYW1lID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBlbGVtZW50cyA9IF8uZmlsdGVyKHRoaXMuY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIHJldHVybiBjaGlsZC5uYW1lID09PSBuYW1lO1xuICAgIH0pO1xuICAgIHJldHVybiB0b0VsZW1lbnRMaXN0KGVsZW1lbnRzKTtcbn07XG5cbkVsZW1lbnQucHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfSBlbHNlIGlmICh0aGlzLmNoaWxkcmVuLmxlbmd0aCAhPT0gMSB8fCB0aGlzLmNoaWxkcmVuWzBdLnR5cGUgIT09IFwidGV4dFwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5bMF0udmFsdWU7XG59O1xuXG52YXIgZWxlbWVudExpc3RQcm90b3R5cGUgPSB7XG4gICAgZ2V0RWxlbWVudHNCeVRhZ05hbWU6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRvRWxlbWVudExpc3QoXy5mbGF0dGVuKHRoaXMubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKG5hbWUpO1xuICAgICAgICB9LCB0cnVlKSkpO1xuICAgIH1cbn07XG5cbmZ1bmN0aW9uIHRvRWxlbWVudExpc3QoYXJyYXkpIHtcbiAgICByZXR1cm4gXy5leHRlbmQoYXJyYXksIGVsZW1lbnRMaXN0UHJvdG90eXBlKTtcbn1cbiJdLCJuYW1lcyI6WyJfIiwicmVxdWlyZSIsImV4cG9ydHMiLCJFbGVtZW50IiwiZWxlbWVudCIsIm5hbWUiLCJhdHRyaWJ1dGVzIiwiY2hpbGRyZW4iLCJ0ZXh0IiwidmFsdWUiLCJ0eXBlIiwiZW1wdHlFbGVtZW50IiwiZmlyc3QiLCJmaXJzdE9yRW1wdHkiLCJwcm90b3R5cGUiLCJmaW5kIiwiY2hpbGQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImVsZW1lbnRzIiwiZmlsdGVyIiwidG9FbGVtZW50TGlzdCIsImxlbmd0aCIsIkVycm9yIiwiZWxlbWVudExpc3RQcm90b3R5cGUiLCJmbGF0dGVuIiwibWFwIiwiYXJyYXkiLCJleHRlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/xml/nodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/xml/reader.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/reader.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var promises = __webpack_require__(/*! ../promises */ \"(ssr)/./node_modules/mammoth/lib/promises.js\");\nvar _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar xmldom = __webpack_require__(/*! ./xmldom */ \"(ssr)/./node_modules/mammoth/lib/xml/xmldom.js\");\nvar nodes = __webpack_require__(/*! ./nodes */ \"(ssr)/./node_modules/mammoth/lib/xml/nodes.js\");\nvar Element = nodes.Element;\nexports.readString = readString;\nvar Node = xmldom.Node;\nfunction readString(xmlString, namespaceMap) {\n    namespaceMap = namespaceMap || {};\n    try {\n        var document = xmldom.parseFromString(xmlString, \"text/xml\");\n    } catch (error) {\n        return promises.reject(error);\n    }\n    if (document.documentElement.tagName === \"parsererror\") {\n        return promises.resolve(new Error(document.documentElement.textContent));\n    }\n    function convertNode(node) {\n        switch(node.nodeType){\n            case Node.ELEMENT_NODE:\n                return convertElement(node);\n            case Node.TEXT_NODE:\n                return nodes.text(node.nodeValue);\n        }\n    }\n    function convertElement(element) {\n        var convertedName = convertName(element);\n        var convertedChildren = [];\n        _.forEach(element.childNodes, function(childNode) {\n            var convertedNode = convertNode(childNode);\n            if (convertedNode) {\n                convertedChildren.push(convertedNode);\n            }\n        });\n        var convertedAttributes = {};\n        _.forEach(element.attributes, function(attribute) {\n            convertedAttributes[convertName(attribute)] = attribute.value;\n        });\n        return new Element(convertedName, convertedAttributes, convertedChildren);\n    }\n    function convertName(node) {\n        if (node.namespaceURI) {\n            var mappedPrefix = namespaceMap[node.namespaceURI];\n            var prefix;\n            if (mappedPrefix) {\n                prefix = mappedPrefix + \":\";\n            } else {\n                prefix = \"{\" + node.namespaceURI + \"}\";\n            }\n            return prefix + node.localName;\n        } else {\n            return node.localName;\n        }\n    }\n    return promises.resolve(convertNode(document.documentElement));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3JlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyxpRUFBYTtBQUNwQyxJQUFJQyxJQUFJRCxtQkFBT0EsQ0FBQyx3RUFBWTtBQUU1QixJQUFJRSxTQUFTRixtQkFBT0EsQ0FBQyxnRUFBVTtBQUMvQixJQUFJRyxRQUFRSCxtQkFBT0EsQ0FBQyw4REFBUztBQUM3QixJQUFJSSxVQUFVRCxNQUFNQyxPQUFPO0FBRTNCQyxrQkFBa0IsR0FBR0M7QUFFckIsSUFBSUMsT0FBT0wsT0FBT0ssSUFBSTtBQUV0QixTQUFTRCxXQUFXRSxTQUFTLEVBQUVDLFlBQVk7SUFDdkNBLGVBQWVBLGdCQUFnQixDQUFDO0lBRWhDLElBQUk7UUFDQSxJQUFJQyxXQUFXUixPQUFPUyxlQUFlLENBQUNILFdBQVc7SUFDckQsRUFBRSxPQUFPSSxPQUFPO1FBQ1osT0FBT2IsU0FBU2MsTUFBTSxDQUFDRDtJQUMzQjtJQUVBLElBQUlGLFNBQVNJLGVBQWUsQ0FBQ0MsT0FBTyxLQUFLLGVBQWU7UUFDcEQsT0FBT2hCLFNBQVNpQixPQUFPLENBQUMsSUFBSUMsTUFBTVAsU0FBU0ksZUFBZSxDQUFDSSxXQUFXO0lBQzFFO0lBRUEsU0FBU0MsWUFBWUMsSUFBSTtRQUNyQixPQUFRQSxLQUFLQyxRQUFRO1lBQ3JCLEtBQUtkLEtBQUtlLFlBQVk7Z0JBQ2xCLE9BQU9DLGVBQWVIO1lBQzFCLEtBQUtiLEtBQUtpQixTQUFTO2dCQUNmLE9BQU9yQixNQUFNc0IsSUFBSSxDQUFDTCxLQUFLTSxTQUFTO1FBQ3BDO0lBQ0o7SUFFQSxTQUFTSCxlQUFlSSxPQUFPO1FBQzNCLElBQUlDLGdCQUFnQkMsWUFBWUY7UUFFaEMsSUFBSUcsb0JBQW9CLEVBQUU7UUFDMUI3QixFQUFFOEIsT0FBTyxDQUFDSixRQUFRSyxVQUFVLEVBQUUsU0FBU0MsU0FBUztZQUM1QyxJQUFJQyxnQkFBZ0JmLFlBQVljO1lBQ2hDLElBQUlDLGVBQWU7Z0JBQ2ZKLGtCQUFrQkssSUFBSSxDQUFDRDtZQUMzQjtRQUNKO1FBRUEsSUFBSUUsc0JBQXNCLENBQUM7UUFDM0JuQyxFQUFFOEIsT0FBTyxDQUFDSixRQUFRVSxVQUFVLEVBQUUsU0FBU0MsU0FBUztZQUM1Q0YsbUJBQW1CLENBQUNQLFlBQVlTLFdBQVcsR0FBR0EsVUFBVUMsS0FBSztRQUNqRTtRQUVBLE9BQU8sSUFBSW5DLFFBQVF3QixlQUFlUSxxQkFBcUJOO0lBQzNEO0lBRUEsU0FBU0QsWUFBWVQsSUFBSTtRQUNyQixJQUFJQSxLQUFLb0IsWUFBWSxFQUFFO1lBQ25CLElBQUlDLGVBQWVoQyxZQUFZLENBQUNXLEtBQUtvQixZQUFZLENBQUM7WUFDbEQsSUFBSUU7WUFDSixJQUFJRCxjQUFjO2dCQUNkQyxTQUFTRCxlQUFlO1lBQzVCLE9BQU87Z0JBQ0hDLFNBQVMsTUFBTXRCLEtBQUtvQixZQUFZLEdBQUc7WUFDdkM7WUFDQSxPQUFPRSxTQUFTdEIsS0FBS3VCLFNBQVM7UUFDbEMsT0FBTztZQUNILE9BQU92QixLQUFLdUIsU0FBUztRQUN6QjtJQUNKO0lBRUEsT0FBTzVDLFNBQVNpQixPQUFPLENBQUNHLFlBQVlULFNBQVNJLGVBQWU7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3JlYWRlci5qcz80ODlmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBwcm9taXNlcyA9IHJlcXVpcmUoXCIuLi9wcm9taXNlc1wiKTtcbnZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG5cbnZhciB4bWxkb20gPSByZXF1aXJlKFwiLi94bWxkb21cIik7XG52YXIgbm9kZXMgPSByZXF1aXJlKFwiLi9ub2Rlc1wiKTtcbnZhciBFbGVtZW50ID0gbm9kZXMuRWxlbWVudDtcblxuZXhwb3J0cy5yZWFkU3RyaW5nID0gcmVhZFN0cmluZztcblxudmFyIE5vZGUgPSB4bWxkb20uTm9kZTtcblxuZnVuY3Rpb24gcmVhZFN0cmluZyh4bWxTdHJpbmcsIG5hbWVzcGFjZU1hcCkge1xuICAgIG5hbWVzcGFjZU1hcCA9IG5hbWVzcGFjZU1hcCB8fCB7fTtcblxuICAgIHRyeSB7XG4gICAgICAgIHZhciBkb2N1bWVudCA9IHhtbGRvbS5wYXJzZUZyb21TdHJpbmcoeG1sU3RyaW5nLCBcInRleHQveG1sXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBwcm9taXNlcy5yZWplY3QoZXJyb3IpO1xuICAgIH1cblxuICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQudGFnTmFtZSA9PT0gXCJwYXJzZXJlcnJvclwiKSB7XG4gICAgICAgIHJldHVybiBwcm9taXNlcy5yZXNvbHZlKG5ldyBFcnJvcihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQudGV4dENvbnRlbnQpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb252ZXJ0Tm9kZShub2RlKSB7XG4gICAgICAgIHN3aXRjaCAobm9kZS5ub2RlVHlwZSkge1xuICAgICAgICBjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOlxuICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRFbGVtZW50KG5vZGUpO1xuICAgICAgICBjYXNlIE5vZGUuVEVYVF9OT0RFOlxuICAgICAgICAgICAgcmV0dXJuIG5vZGVzLnRleHQobm9kZS5ub2RlVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udmVydEVsZW1lbnQoZWxlbWVudCkge1xuICAgICAgICB2YXIgY29udmVydGVkTmFtZSA9IGNvbnZlcnROYW1lKGVsZW1lbnQpO1xuXG4gICAgICAgIHZhciBjb252ZXJ0ZWRDaGlsZHJlbiA9IFtdO1xuICAgICAgICBfLmZvckVhY2goZWxlbWVudC5jaGlsZE5vZGVzLCBmdW5jdGlvbihjaGlsZE5vZGUpIHtcbiAgICAgICAgICAgIHZhciBjb252ZXJ0ZWROb2RlID0gY29udmVydE5vZGUoY2hpbGROb2RlKTtcbiAgICAgICAgICAgIGlmIChjb252ZXJ0ZWROb2RlKSB7XG4gICAgICAgICAgICAgICAgY29udmVydGVkQ2hpbGRyZW4ucHVzaChjb252ZXJ0ZWROb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGNvbnZlcnRlZEF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgICAgXy5mb3JFYWNoKGVsZW1lbnQuYXR0cmlidXRlcywgZnVuY3Rpb24oYXR0cmlidXRlKSB7XG4gICAgICAgICAgICBjb252ZXJ0ZWRBdHRyaWJ1dGVzW2NvbnZlcnROYW1lKGF0dHJpYnV0ZSldID0gYXR0cmlidXRlLnZhbHVlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gbmV3IEVsZW1lbnQoY29udmVydGVkTmFtZSwgY29udmVydGVkQXR0cmlidXRlcywgY29udmVydGVkQ2hpbGRyZW4pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnROYW1lKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUubmFtZXNwYWNlVVJJKSB7XG4gICAgICAgICAgICB2YXIgbWFwcGVkUHJlZml4ID0gbmFtZXNwYWNlTWFwW25vZGUubmFtZXNwYWNlVVJJXTtcbiAgICAgICAgICAgIHZhciBwcmVmaXg7XG4gICAgICAgICAgICBpZiAobWFwcGVkUHJlZml4KSB7XG4gICAgICAgICAgICAgICAgcHJlZml4ID0gbWFwcGVkUHJlZml4ICsgXCI6XCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHByZWZpeCA9IFwie1wiICsgbm9kZS5uYW1lc3BhY2VVUkkgKyBcIn1cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBwcmVmaXggKyBub2RlLmxvY2FsTmFtZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBub2RlLmxvY2FsTmFtZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlcy5yZXNvbHZlKGNvbnZlcnROb2RlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkpO1xufVxuIl0sIm5hbWVzIjpbInByb21pc2VzIiwicmVxdWlyZSIsIl8iLCJ4bWxkb20iLCJub2RlcyIsIkVsZW1lbnQiLCJleHBvcnRzIiwicmVhZFN0cmluZyIsIk5vZGUiLCJ4bWxTdHJpbmciLCJuYW1lc3BhY2VNYXAiLCJkb2N1bWVudCIsInBhcnNlRnJvbVN0cmluZyIsImVycm9yIiwicmVqZWN0IiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsInJlc29sdmUiLCJFcnJvciIsInRleHRDb250ZW50IiwiY29udmVydE5vZGUiLCJub2RlIiwibm9kZVR5cGUiLCJFTEVNRU5UX05PREUiLCJjb252ZXJ0RWxlbWVudCIsIlRFWFRfTk9ERSIsInRleHQiLCJub2RlVmFsdWUiLCJlbGVtZW50IiwiY29udmVydGVkTmFtZSIsImNvbnZlcnROYW1lIiwiY29udmVydGVkQ2hpbGRyZW4iLCJmb3JFYWNoIiwiY2hpbGROb2RlcyIsImNoaWxkTm9kZSIsImNvbnZlcnRlZE5vZGUiLCJwdXNoIiwiY29udmVydGVkQXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGUiLCJ2YWx1ZSIsIm5hbWVzcGFjZVVSSSIsIm1hcHBlZFByZWZpeCIsInByZWZpeCIsImxvY2FsTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/xml/reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/xml/writer.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/writer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var _ = __webpack_require__(/*! underscore */ \"(ssr)/./node_modules/underscore/modules/index-all.js\");\nvar xmlbuilder = __webpack_require__(/*! xmlbuilder */ \"(ssr)/./node_modules/xmlbuilder/lib/index.js\");\nexports.writeString = writeString;\nfunction writeString(root, namespaces) {\n    var uriToPrefix = _.invert(namespaces);\n    var nodeWriters = {\n        element: writeElement,\n        text: writeTextNode\n    };\n    function writeNode(builder, node) {\n        return nodeWriters[node.type](builder, node);\n    }\n    function writeElement(builder, element) {\n        var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n        element.children.forEach(function(child) {\n            writeNode(elementBuilder, child);\n        });\n    }\n    function mapElementName(name) {\n        var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n        if (longFormMatch) {\n            var prefix = uriToPrefix[longFormMatch[1]];\n            return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n        } else {\n            return name;\n        }\n    }\n    function writeDocument(root) {\n        var builder = xmlbuilder.create(mapElementName(root.name), {\n            version: \"1.0\",\n            encoding: \"UTF-8\",\n            standalone: true\n        });\n        _.forEach(namespaces, function(uri, prefix) {\n            var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n            builder.attribute(key, uri);\n        });\n        root.children.forEach(function(child) {\n            writeNode(builder, child);\n        });\n        return builder.end();\n    }\n    return writeDocument(root);\n}\nfunction writeTextNode(builder, node) {\n    builder.text(node.value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3dyaXRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxJQUFJQyxtQkFBT0EsQ0FBQyx3RUFBWTtBQUM1QixJQUFJQyxhQUFhRCxtQkFBT0EsQ0FBQyxnRUFBWTtBQUdyQ0UsbUJBQW1CLEdBQUdDO0FBR3RCLFNBQVNBLFlBQVlDLElBQUksRUFBRUMsVUFBVTtJQUNqQyxJQUFJQyxjQUFjUCxFQUFFUSxNQUFNLENBQUNGO0lBRTNCLElBQUlHLGNBQWM7UUFDZEMsU0FBU0M7UUFDVEMsTUFBTUM7SUFDVjtJQUVBLFNBQVNDLFVBQVVDLE9BQU8sRUFBRUMsSUFBSTtRQUM1QixPQUFPUCxXQUFXLENBQUNPLEtBQUtDLElBQUksQ0FBQyxDQUFDRixTQUFTQztJQUMzQztJQUVBLFNBQVNMLGFBQWFJLE9BQU8sRUFBRUwsT0FBTztRQUNsQyxJQUFJUSxpQkFBaUJILFFBQVFMLE9BQU8sQ0FBQ1MsZUFBZVQsUUFBUVUsSUFBSSxHQUFHVixRQUFRVyxVQUFVO1FBQ3JGWCxRQUFRWSxRQUFRLENBQUNDLE9BQU8sQ0FBQyxTQUFTQyxLQUFLO1lBQ25DVixVQUFVSSxnQkFBZ0JNO1FBQzlCO0lBQ0o7SUFFQSxTQUFTTCxlQUFlQyxJQUFJO1FBQ3hCLElBQUlLLGdCQUFnQixpQkFBaUJDLElBQUksQ0FBQ047UUFDMUMsSUFBSUssZUFBZTtZQUNmLElBQUlFLFNBQVNwQixXQUFXLENBQUNrQixhQUFhLENBQUMsRUFBRSxDQUFDO1lBQzFDLE9BQU9FLFNBQVVBLENBQUFBLFdBQVcsS0FBSyxLQUFLLEdBQUUsSUFBS0YsYUFBYSxDQUFDLEVBQUU7UUFDakUsT0FBTztZQUNILE9BQU9MO1FBQ1g7SUFDSjtJQUVBLFNBQVNRLGNBQWN2QixJQUFJO1FBQ3ZCLElBQUlVLFVBQVViLFdBQ1QyQixNQUFNLENBQUNWLGVBQWVkLEtBQUtlLElBQUksR0FBRztZQUMvQlUsU0FBUztZQUNUQyxVQUFVO1lBQ1ZDLFlBQVk7UUFDaEI7UUFFSmhDLEVBQUV1QixPQUFPLENBQUNqQixZQUFZLFNBQVMyQixHQUFHLEVBQUVOLE1BQU07WUFDdEMsSUFBSU8sTUFBTSxVQUFXUCxDQUFBQSxXQUFXLEtBQUssS0FBSyxNQUFNQSxNQUFLO1lBQ3JEWixRQUFRb0IsU0FBUyxDQUFDRCxLQUFLRDtRQUMzQjtRQUVBNUIsS0FBS2lCLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDLFNBQVNDLEtBQUs7WUFDaENWLFVBQVVDLFNBQVNTO1FBQ3ZCO1FBQ0EsT0FBT1QsUUFBUXFCLEdBQUc7SUFDdEI7SUFFQSxPQUFPUixjQUFjdkI7QUFDekI7QUFFQSxTQUFTUSxjQUFjRSxPQUFPLEVBQUVDLElBQUk7SUFDaENELFFBQVFILElBQUksQ0FBQ0ksS0FBS3FCLEtBQUs7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90c2EtcGxhdGZvcm0vLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3dyaXRlci5qcz9iMzZkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfID0gcmVxdWlyZShcInVuZGVyc2NvcmVcIik7XG52YXIgeG1sYnVpbGRlciA9IHJlcXVpcmUoXCJ4bWxidWlsZGVyXCIpO1xuXG5cbmV4cG9ydHMud3JpdGVTdHJpbmcgPSB3cml0ZVN0cmluZztcblxuXG5mdW5jdGlvbiB3cml0ZVN0cmluZyhyb290LCBuYW1lc3BhY2VzKSB7XG4gICAgdmFyIHVyaVRvUHJlZml4ID0gXy5pbnZlcnQobmFtZXNwYWNlcyk7XG4gICAgXG4gICAgdmFyIG5vZGVXcml0ZXJzID0ge1xuICAgICAgICBlbGVtZW50OiB3cml0ZUVsZW1lbnQsXG4gICAgICAgIHRleHQ6IHdyaXRlVGV4dE5vZGVcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gd3JpdGVOb2RlKGJ1aWxkZXIsIG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG5vZGVXcml0ZXJzW25vZGUudHlwZV0oYnVpbGRlciwgbm9kZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gd3JpdGVFbGVtZW50KGJ1aWxkZXIsIGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGVsZW1lbnRCdWlsZGVyID0gYnVpbGRlci5lbGVtZW50KG1hcEVsZW1lbnROYW1lKGVsZW1lbnQubmFtZSksIGVsZW1lbnQuYXR0cmlidXRlcyk7XG4gICAgICAgIGVsZW1lbnQuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihjaGlsZCkge1xuICAgICAgICAgICAgd3JpdGVOb2RlKGVsZW1lbnRCdWlsZGVyLCBjaGlsZCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiBtYXBFbGVtZW50TmFtZShuYW1lKSB7XG4gICAgICAgIHZhciBsb25nRm9ybU1hdGNoID0gL15cXHsoLiopXFx9KC4qKSQvLmV4ZWMobmFtZSk7XG4gICAgICAgIGlmIChsb25nRm9ybU1hdGNoKSB7XG4gICAgICAgICAgICB2YXIgcHJlZml4ID0gdXJpVG9QcmVmaXhbbG9uZ0Zvcm1NYXRjaFsxXV07XG4gICAgICAgICAgICByZXR1cm4gcHJlZml4ICsgKHByZWZpeCA9PT0gXCJcIiA/IFwiXCIgOiBcIjpcIikgKyBsb25nRm9ybU1hdGNoWzJdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gd3JpdGVEb2N1bWVudChyb290KSB7XG4gICAgICAgIHZhciBidWlsZGVyID0geG1sYnVpbGRlclxuICAgICAgICAgICAgLmNyZWF0ZShtYXBFbGVtZW50TmFtZShyb290Lm5hbWUpLCB7XG4gICAgICAgICAgICAgICAgdmVyc2lvbjogJzEuMCcsXG4gICAgICAgICAgICAgICAgZW5jb2Rpbmc6ICdVVEYtOCcsXG4gICAgICAgICAgICAgICAgc3RhbmRhbG9uZTogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBfLmZvckVhY2gobmFtZXNwYWNlcywgZnVuY3Rpb24odXJpLCBwcmVmaXgpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBcInhtbG5zXCIgKyAocHJlZml4ID09PSBcIlwiID8gXCJcIiA6IFwiOlwiICsgcHJlZml4KTtcbiAgICAgICAgICAgIGJ1aWxkZXIuYXR0cmlidXRlKGtleSwgdXJpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICByb290LmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24oY2hpbGQpIHtcbiAgICAgICAgICAgIHdyaXRlTm9kZShidWlsZGVyLCBjaGlsZCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYnVpbGRlci5lbmQoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gd3JpdGVEb2N1bWVudChyb290KTtcbn1cblxuZnVuY3Rpb24gd3JpdGVUZXh0Tm9kZShidWlsZGVyLCBub2RlKSB7XG4gICAgYnVpbGRlci50ZXh0KG5vZGUudmFsdWUpO1xufVxuIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwieG1sYnVpbGRlciIsImV4cG9ydHMiLCJ3cml0ZVN0cmluZyIsInJvb3QiLCJuYW1lc3BhY2VzIiwidXJpVG9QcmVmaXgiLCJpbnZlcnQiLCJub2RlV3JpdGVycyIsImVsZW1lbnQiLCJ3cml0ZUVsZW1lbnQiLCJ0ZXh0Iiwid3JpdGVUZXh0Tm9kZSIsIndyaXRlTm9kZSIsImJ1aWxkZXIiLCJub2RlIiwidHlwZSIsImVsZW1lbnRCdWlsZGVyIiwibWFwRWxlbWVudE5hbWUiLCJuYW1lIiwiYXR0cmlidXRlcyIsImNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwibG9uZ0Zvcm1NYXRjaCIsImV4ZWMiLCJwcmVmaXgiLCJ3cml0ZURvY3VtZW50IiwiY3JlYXRlIiwidmVyc2lvbiIsImVuY29kaW5nIiwic3RhbmRhbG9uZSIsInVyaSIsImtleSIsImF0dHJpYnV0ZSIsImVuZCIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/xml/writer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/xml/xmldom.js":
/*!************************************************!*\
  !*** ./node_modules/mammoth/lib/xml/xmldom.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var xmldom = __webpack_require__(/*! @xmldom/xmldom */ \"(ssr)/./node_modules/@xmldom/xmldom/lib/index.js\");\nvar dom = __webpack_require__(/*! @xmldom/xmldom/lib/dom */ \"(ssr)/./node_modules/@xmldom/xmldom/lib/dom.js\");\nfunction parseFromString(string) {\n    var error = null;\n    var domParser = new xmldom.DOMParser({\n        errorHandler: function(level, message) {\n            error = {\n                level: level,\n                message: message\n            };\n        }\n    });\n    var document = domParser.parseFromString(string);\n    if (error === null) {\n        return document;\n    } else {\n        throw new Error(error.level + \": \" + error.message);\n    }\n}\nexports.parseFromString = parseFromString;\nexports.Node = dom.Node;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIveG1sL3htbGRvbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxTQUFTQyxtQkFBT0EsQ0FBQyx3RUFBZ0I7QUFDckMsSUFBSUMsTUFBTUQsbUJBQU9BLENBQUMsOEVBQXdCO0FBRTFDLFNBQVNFLGdCQUFnQkMsTUFBTTtJQUMzQixJQUFJQyxRQUFRO0lBRVosSUFBSUMsWUFBWSxJQUFJTixPQUFPTyxTQUFTLENBQUM7UUFDakNDLGNBQWMsU0FBU0MsS0FBSyxFQUFFQyxPQUFPO1lBQ2pDTCxRQUFRO2dCQUFDSSxPQUFPQTtnQkFBT0MsU0FBU0E7WUFBTztRQUMzQztJQUNKO0lBRUEsSUFBSUMsV0FBV0wsVUFBVUgsZUFBZSxDQUFDQztJQUV6QyxJQUFJQyxVQUFVLE1BQU07UUFDaEIsT0FBT007SUFDWCxPQUFPO1FBQ0gsTUFBTSxJQUFJQyxNQUFNUCxNQUFNSSxLQUFLLEdBQUcsT0FBT0osTUFBTUssT0FBTztJQUN0RDtBQUNKO0FBRUFHLHVCQUF1QixHQUFHVjtBQUMxQlUsWUFBWSxHQUFHWCxJQUFJWSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHNhLXBsYXRmb3JtLy4vbm9kZV9tb2R1bGVzL21hbW1vdGgvbGliL3htbC94bWxkb20uanM/ZmUxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgeG1sZG9tID0gcmVxdWlyZShcIkB4bWxkb20veG1sZG9tXCIpO1xudmFyIGRvbSA9IHJlcXVpcmUoXCJAeG1sZG9tL3htbGRvbS9saWIvZG9tXCIpO1xuXG5mdW5jdGlvbiBwYXJzZUZyb21TdHJpbmcoc3RyaW5nKSB7XG4gICAgdmFyIGVycm9yID0gbnVsbDtcblxuICAgIHZhciBkb21QYXJzZXIgPSBuZXcgeG1sZG9tLkRPTVBhcnNlcih7XG4gICAgICAgIGVycm9ySGFuZGxlcjogZnVuY3Rpb24obGV2ZWwsIG1lc3NhZ2UpIHtcbiAgICAgICAgICAgIGVycm9yID0ge2xldmVsOiBsZXZlbCwgbWVzc2FnZTogbWVzc2FnZX07XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciBkb2N1bWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcoc3RyaW5nKTtcblxuICAgIGlmIChlcnJvciA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLmxldmVsICsgXCI6IFwiICsgZXJyb3IubWVzc2FnZSk7XG4gICAgfVxufVxuXG5leHBvcnRzLnBhcnNlRnJvbVN0cmluZyA9IHBhcnNlRnJvbVN0cmluZztcbmV4cG9ydHMuTm9kZSA9IGRvbS5Ob2RlO1xuIl0sIm5hbWVzIjpbInhtbGRvbSIsInJlcXVpcmUiLCJkb20iLCJwYXJzZUZyb21TdHJpbmciLCJzdHJpbmciLCJlcnJvciIsImRvbVBhcnNlciIsIkRPTVBhcnNlciIsImVycm9ySGFuZGxlciIsImxldmVsIiwibWVzc2FnZSIsImRvY3VtZW50IiwiRXJyb3IiLCJleHBvcnRzIiwiTm9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/xml/xmldom.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mammoth/lib/zipfile.js":
/*!*********************************************!*\
  !*** ./node_modules/mammoth/lib/zipfile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var base64js = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\nvar JSZip = __webpack_require__(/*! jszip */ \"(ssr)/./node_modules/jszip/lib/index.js\");\nexports.openArrayBuffer = openArrayBuffer;\nexports.splitPath = splitPath;\nexports.joinPath = joinPath;\nfunction openArrayBuffer(arrayBuffer) {\n    return JSZip.loadAsync(arrayBuffer).then(function(zipFile) {\n        function exists(name) {\n            return zipFile.file(name) !== null;\n        }\n        function read(name, encoding) {\n            return zipFile.file(name).async(\"uint8array\").then(function(array) {\n                if (encoding === \"base64\") {\n                    return base64js.fromByteArray(array);\n                } else if (encoding) {\n                    var decoder = new TextDecoder(encoding);\n                    return decoder.decode(array);\n                } else {\n                    return array;\n                }\n            });\n        }\n        function write(name, contents) {\n            zipFile.file(name, contents);\n        }\n        function toArrayBuffer() {\n            return zipFile.generateAsync({\n                type: \"arraybuffer\"\n            });\n        }\n        return {\n            exists: exists,\n            read: read,\n            write: write,\n            toArrayBuffer: toArrayBuffer\n        };\n    });\n}\nfunction splitPath(path) {\n    var lastIndex = path.lastIndexOf(\"/\");\n    if (lastIndex === -1) {\n        return {\n            dirname: \"\",\n            basename: path\n        };\n    } else {\n        return {\n            dirname: path.substring(0, lastIndex),\n            basename: path.substring(lastIndex + 1)\n        };\n    }\n}\nfunction joinPath() {\n    var nonEmptyPaths = Array.prototype.filter.call(arguments, function(path) {\n        return path;\n    });\n    var relevantPaths = [];\n    nonEmptyPaths.forEach(function(path) {\n        if (/^\\//.test(path)) {\n            relevantPaths = [\n                path\n            ];\n        } else {\n            relevantPaths.push(path);\n        }\n    });\n    return relevantPaths.join(\"/\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFtbW90aC9saWIvemlwZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQywwREFBVztBQUNsQyxJQUFJQyxRQUFRRCxtQkFBT0EsQ0FBQyxzREFBTztBQUUzQkUsdUJBQXVCLEdBQUdDO0FBQzFCRCxpQkFBaUIsR0FBR0U7QUFDcEJGLGdCQUFnQixHQUFHRztBQUVuQixTQUFTRixnQkFBZ0JHLFdBQVc7SUFDaEMsT0FBT0wsTUFBTU0sU0FBUyxDQUFDRCxhQUFhRSxJQUFJLENBQUMsU0FBU0MsT0FBTztRQUNyRCxTQUFTQyxPQUFPQyxJQUFJO1lBQ2hCLE9BQU9GLFFBQVFHLElBQUksQ0FBQ0QsVUFBVTtRQUNsQztRQUVBLFNBQVNFLEtBQUtGLElBQUksRUFBRUcsUUFBUTtZQUN4QixPQUFPTCxRQUFRRyxJQUFJLENBQUNELE1BQU1JLEtBQUssQ0FBQyxjQUFjUCxJQUFJLENBQUMsU0FBU1EsS0FBSztnQkFDN0QsSUFBSUYsYUFBYSxVQUFVO29CQUN2QixPQUFPZixTQUFTa0IsYUFBYSxDQUFDRDtnQkFDbEMsT0FBTyxJQUFJRixVQUFVO29CQUNqQixJQUFJSSxVQUFVLElBQUlDLFlBQVlMO29CQUM5QixPQUFPSSxRQUFRRSxNQUFNLENBQUNKO2dCQUMxQixPQUFPO29CQUNILE9BQU9BO2dCQUNYO1lBQ0o7UUFDSjtRQUVBLFNBQVNLLE1BQU1WLElBQUksRUFBRVcsUUFBUTtZQUN6QmIsUUFBUUcsSUFBSSxDQUFDRCxNQUFNVztRQUN2QjtRQUVBLFNBQVNDO1lBQ0wsT0FBT2QsUUFBUWUsYUFBYSxDQUFDO2dCQUFDQyxNQUFNO1lBQWE7UUFDckQ7UUFFQSxPQUFPO1lBQ0hmLFFBQVFBO1lBQ1JHLE1BQU1BO1lBQ05RLE9BQU9BO1lBQ1BFLGVBQWVBO1FBQ25CO0lBQ0o7QUFDSjtBQUVBLFNBQVNuQixVQUFVc0IsSUFBSTtJQUNuQixJQUFJQyxZQUFZRCxLQUFLRSxXQUFXLENBQUM7SUFDakMsSUFBSUQsY0FBYyxDQUFDLEdBQUc7UUFDbEIsT0FBTztZQUFDRSxTQUFTO1lBQUlDLFVBQVVKO1FBQUk7SUFDdkMsT0FBTztRQUNILE9BQU87WUFDSEcsU0FBU0gsS0FBS0ssU0FBUyxDQUFDLEdBQUdKO1lBQzNCRyxVQUFVSixLQUFLSyxTQUFTLENBQUNKLFlBQVk7UUFDekM7SUFDSjtBQUNKO0FBRUEsU0FBU3RCO0lBQ0wsSUFBSTJCLGdCQUFnQkMsTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ0MsV0FBVyxTQUFTWCxJQUFJO1FBQ3BFLE9BQU9BO0lBQ1g7SUFFQSxJQUFJWSxnQkFBZ0IsRUFBRTtJQUV0Qk4sY0FBY08sT0FBTyxDQUFDLFNBQVNiLElBQUk7UUFDL0IsSUFBSSxNQUFNYyxJQUFJLENBQUNkLE9BQU87WUFDbEJZLGdCQUFnQjtnQkFBQ1o7YUFBSztRQUMxQixPQUFPO1lBQ0hZLGNBQWNHLElBQUksQ0FBQ2Y7UUFDdkI7SUFDSjtJQUVBLE9BQU9ZLGNBQWNJLElBQUksQ0FBQztBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RzYS1wbGF0Zm9ybS8uL25vZGVfbW9kdWxlcy9tYW1tb3RoL2xpYi96aXBmaWxlLmpzPzJmMDQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2U2NGpzID0gcmVxdWlyZShcImJhc2U2NC1qc1wiKTtcbnZhciBKU1ppcCA9IHJlcXVpcmUoXCJqc3ppcFwiKTtcblxuZXhwb3J0cy5vcGVuQXJyYXlCdWZmZXIgPSBvcGVuQXJyYXlCdWZmZXI7XG5leHBvcnRzLnNwbGl0UGF0aCA9IHNwbGl0UGF0aDtcbmV4cG9ydHMuam9pblBhdGggPSBqb2luUGF0aDtcblxuZnVuY3Rpb24gb3BlbkFycmF5QnVmZmVyKGFycmF5QnVmZmVyKSB7XG4gICAgcmV0dXJuIEpTWmlwLmxvYWRBc3luYyhhcnJheUJ1ZmZlcikudGhlbihmdW5jdGlvbih6aXBGaWxlKSB7XG4gICAgICAgIGZ1bmN0aW9uIGV4aXN0cyhuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gemlwRmlsZS5maWxlKG5hbWUpICE9PSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmVhZChuYW1lLCBlbmNvZGluZykge1xuICAgICAgICAgICAgcmV0dXJuIHppcEZpbGUuZmlsZShuYW1lKS5hc3luYyhcInVpbnQ4YXJyYXlcIikudGhlbihmdW5jdGlvbihhcnJheSkge1xuICAgICAgICAgICAgICAgIGlmIChlbmNvZGluZyA9PT0gXCJiYXNlNjRcIikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYmFzZTY0anMuZnJvbUJ5dGVBcnJheShhcnJheSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlbmNvZGluZykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcihlbmNvZGluZyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGVyLmRlY29kZShhcnJheSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gd3JpdGUobmFtZSwgY29udGVudHMpIHtcbiAgICAgICAgICAgIHppcEZpbGUuZmlsZShuYW1lLCBjb250ZW50cyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB0b0FycmF5QnVmZmVyKCkge1xuICAgICAgICAgICAgcmV0dXJuIHppcEZpbGUuZ2VuZXJhdGVBc3luYyh7dHlwZTogXCJhcnJheWJ1ZmZlclwifSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXhpc3RzOiBleGlzdHMsXG4gICAgICAgICAgICByZWFkOiByZWFkLFxuICAgICAgICAgICAgd3JpdGU6IHdyaXRlLFxuICAgICAgICAgICAgdG9BcnJheUJ1ZmZlcjogdG9BcnJheUJ1ZmZlclxuICAgICAgICB9O1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBzcGxpdFBhdGgocGF0aCkge1xuICAgIHZhciBsYXN0SW5kZXggPSBwYXRoLmxhc3RJbmRleE9mKFwiL1wiKTtcbiAgICBpZiAobGFzdEluZGV4ID09PSAtMSkge1xuICAgICAgICByZXR1cm4ge2Rpcm5hbWU6IFwiXCIsIGJhc2VuYW1lOiBwYXRofTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGlybmFtZTogcGF0aC5zdWJzdHJpbmcoMCwgbGFzdEluZGV4KSxcbiAgICAgICAgICAgIGJhc2VuYW1lOiBwYXRoLnN1YnN0cmluZyhsYXN0SW5kZXggKyAxKVxuICAgICAgICB9O1xuICAgIH1cbn1cblxuZnVuY3Rpb24gam9pblBhdGgoKSB7XG4gICAgdmFyIG5vbkVtcHR5UGF0aHMgPSBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoYXJndW1lbnRzLCBmdW5jdGlvbihwYXRoKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH0pO1xuXG4gICAgdmFyIHJlbGV2YW50UGF0aHMgPSBbXTtcblxuICAgIG5vbkVtcHR5UGF0aHMuZm9yRWFjaChmdW5jdGlvbihwYXRoKSB7XG4gICAgICAgIGlmICgvXlxcLy8udGVzdChwYXRoKSkge1xuICAgICAgICAgICAgcmVsZXZhbnRQYXRocyA9IFtwYXRoXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlbGV2YW50UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlbGV2YW50UGF0aHMuam9pbihcIi9cIik7XG59XG4iXSwibmFtZXMiOlsiYmFzZTY0anMiLCJyZXF1aXJlIiwiSlNaaXAiLCJleHBvcnRzIiwib3BlbkFycmF5QnVmZmVyIiwic3BsaXRQYXRoIiwiam9pblBhdGgiLCJhcnJheUJ1ZmZlciIsImxvYWRBc3luYyIsInRoZW4iLCJ6aXBGaWxlIiwiZXhpc3RzIiwibmFtZSIsImZpbGUiLCJyZWFkIiwiZW5jb2RpbmciLCJhc3luYyIsImFycmF5IiwiZnJvbUJ5dGVBcnJheSIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsImRlY29kZSIsIndyaXRlIiwiY29udGVudHMiLCJ0b0FycmF5QnVmZmVyIiwiZ2VuZXJhdGVBc3luYyIsInR5cGUiLCJwYXRoIiwibGFzdEluZGV4IiwibGFzdEluZGV4T2YiLCJkaXJuYW1lIiwiYmFzZW5hbWUiLCJzdWJzdHJpbmciLCJub25FbXB0eVBhdGhzIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJmaWx0ZXIiLCJjYWxsIiwiYXJndW1lbnRzIiwicmVsZXZhbnRQYXRocyIsImZvckVhY2giLCJ0ZXN0IiwicHVzaCIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mammoth/lib/zipfile.js\n");

/***/ })

};
;